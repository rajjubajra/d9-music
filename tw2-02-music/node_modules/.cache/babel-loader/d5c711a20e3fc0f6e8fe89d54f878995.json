{"ast":null,"code":"import _slicedToArray from\"/Users/rajju/Sites/REACT-WEBSITES/d9-music/tw2-02-music/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useSelector,useDispatch}from'react-redux';import{actionNews}from'../redux/actions';//import ImageOnload from '../components/ImageOnload';\nimport NewsList from'./NewsList';import{jsx as _jsx}from\"react/jsx-runtime\";function News(){var dispatch=useDispatch();var data=useSelector(function(state){return state.reducerNews.news_data.data;});var inc_data=useSelector(function(state){return state.reducerNews.news_data.included;});var length=useSelector(function(state){return state.reducerNews.news_dataLength;});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),arr=_useState2[0],setArr=_useState2[1];//console.log(\"news\",data,\"news length\", length);\nuseEffect(function(){dispatch(actionNews());},[dispatch]);useEffect(function(){var newdata=[];length>0&&data.map(function(item){var _item$attributes=item.attributes,title=_item$attributes.title,field_news_body=_item$attributes.field_news_body,field_news_date=_item$attributes.field_news_date;inc_data.map(function(inc){var uri=inc.attributes.uri,id=inc.id;/** stop repeat push */var hasId=newdata.some(function(el){return el.incId===id;});if(inc.type==='file--file'&&!hasId){newdata.push({title:title,body:field_news_body.processed,data:field_news_date,incId:id,image:uri.url});}return setArr(newdata);});});},[data,inc_data,length]);//console.log(\"data arr news\", arr);\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"max-w-screen-xl m-auto p-10\",children:/*#__PURE__*/_jsx(NewsList,{listdata:length>0?arr:[]})});}export default News;","map":{"version":3,"sources":["/Users/rajju/Sites/REACT-WEBSITES/d9-music/tw2-02-music/src/page/News.js"],"names":["React","useEffect","useState","useSelector","useDispatch","actionNews","NewsList","News","dispatch","data","state","reducerNews","news_data","inc_data","included","length","news_dataLength","arr","setArr","newdata","map","item","attributes","title","field_news_body","field_news_date","inc","uri","id","hasId","some","el","incId","type","push","body","processed","image","url"],"mappings":"0IAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CACA;AACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,2CAIA,QAASC,CAAAA,IAAT,EAAgB,CAEd,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CACA,GAAMK,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACC,WAAN,CAAkBC,SAAlB,CAA4BH,IAAhC,EAAN,CAAxB,CACA,GAAMI,CAAAA,QAAQ,CAAGV,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACC,WAAN,CAAkBC,SAAlB,CAA4BE,QAAhC,EAAN,CAA5B,CACA,GAAMC,CAAAA,MAAM,CAAGZ,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACC,WAAN,CAAkBK,eAAtB,EAAN,CAA1B,CAEA,cAAsBd,QAAQ,CAAC,EAAD,CAA9B,wCAAOe,GAAP,eAAYC,MAAZ,eAEA;AAEAjB,SAAS,CAAC,UAAI,CACZO,QAAQ,CAACH,UAAU,EAAX,CAAR,CACD,CAFQ,CAEP,CAACG,QAAD,CAFO,CAAT,CAMAP,SAAS,CAAC,UAAI,CACZ,GAAMkB,CAAAA,OAAO,CAAG,EAAhB,CACAJ,MAAM,CAAG,CAAT,EACAN,IAAI,CAACW,GAAL,CAAS,SAAAC,IAAI,CAAI,CAEf,qBAA+DA,IAA/D,CAAOC,UAAP,CAAmBC,KAAnB,kBAAmBA,KAAnB,CAA0BC,eAA1B,kBAA0BA,eAA1B,CAA2CC,eAA3C,kBAA2CA,eAA3C,CAEAZ,QAAQ,CAACO,GAAT,CAAa,SAAAM,GAAG,CAAI,CAElB,GAAoBC,CAAAA,GAApB,CAAiCD,GAAjC,CAAQJ,UAAR,CAAoBK,GAApB,CAA0BC,EAA1B,CAAiCF,GAAjC,CAA0BE,EAA1B,CACA,uBACA,GAAMC,CAAAA,KAAK,CAAGV,OAAO,CAACW,IAAR,CAAa,SAACC,EAAD,QAAQA,CAAAA,EAAE,CAACC,KAAH,GAAaJ,EAArB,EAAb,CAAd,CAEA,GAAGF,GAAG,CAACO,IAAJ,GAAa,YAAb,EAA6B,CAACJ,KAAjC,CAAuC,CAErCV,OAAO,CAACe,IAAR,CAAa,CACXX,KAAK,CAAEA,KADI,CAEXY,IAAI,CAAEX,eAAe,CAACY,SAFX,CAGX3B,IAAI,CAAEgB,eAHK,CAIXO,KAAK,CAAEJ,EAJI,CAKXS,KAAK,CAAEV,GAAG,CAACW,GALA,CAAb,EAMD,CACD,MAAOpB,CAAAA,MAAM,CAACC,OAAD,CAAb,CACD,CAhBD,EAiBD,CArBD,CADA,CAwBD,CA1BQ,CA0BP,CAACV,IAAD,CAAOI,QAAP,CAAiBE,MAAjB,CA1BO,CAAT,CA4BA;AAEA,mBACE,YAAK,SAAS,CAAC,6BAAf,uBACE,KAAC,QAAD,EAAU,QAAQ,CAAEA,MAAM,CAAG,CAAT,CAAaE,GAAb,CAAmB,EAAvC,EADF,EADF,CAKD,CAED,cAAeV,CAAAA,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {actionNews} from '../redux/actions';\n//import ImageOnload from '../components/ImageOnload';\nimport NewsList from './NewsList';\n\n\n\nfunction News() {\n\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.reducerNews.news_data.data);\n  const inc_data = useSelector(state => state.reducerNews.news_data.included);\n  const length = useSelector(state => state.reducerNews.news_dataLength);\n\n  const [arr, setArr] = useState([]);\n\n  //console.log(\"news\",data,\"news length\", length);\n\n  useEffect(()=>{\n    dispatch(actionNews());\n  },[dispatch])\n\n\n\n  useEffect(()=>{\n    const newdata = [];\n    length > 0 && \n    data.map(item => {\n\n      const {attributes:{title, field_news_body, field_news_date}} = item;\n      \n      inc_data.map(inc => {\n        \n        const { attributes:{uri}, id } = inc;\n        /** stop repeat push */\n        const hasId = newdata.some((el) => el.incId === id);\n\n        if(inc.type === 'file--file' && !hasId){\n              \n          newdata.push({\n            title: title, \n            body: field_news_body.processed, \n            data: field_news_date, \n            incId: id,\n            image: uri.url});\n        }\n        return setArr(newdata);\n      })\n    })\n    \n  },[data, inc_data, length])\n\n  //console.log(\"data arr news\", arr);\n  \n  return (\n    <div className=\"max-w-screen-xl m-auto p-10\">\n      <NewsList listdata={length > 0 ? arr : []} />\n    </div>\n  )\n}\n\nexport default News\n"]},"metadata":{},"sourceType":"module"}