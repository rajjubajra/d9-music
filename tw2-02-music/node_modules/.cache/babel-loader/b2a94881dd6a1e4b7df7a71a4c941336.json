{"ast":null,"code":"'use strict';\n\nvar statuses = require('../lib/statuses');\n\nvar supported = require('../lib/supported');\n\nvar browsers = require('./browsers').browsers;\n\nvar versions = require('./browserVersions').browserVersions;\n\nvar MATH2LOG = Math.log(2);\n\nfunction unpackSupport(cipher) {\n  // bit flags\n  var stats = Object.keys(supported).reduce(function (list, support) {\n    if (cipher & supported[support]) list.push(support);\n    return list;\n  }, []); // notes\n\n  var notes = cipher >> 7;\n  var notesArray = [];\n\n  while (notes) {\n    var note = Math.floor(Math.log(notes) / MATH2LOG) + 1;\n    notesArray.unshift(\"#\".concat(note));\n    notes -= Math.pow(2, note - 1);\n  }\n\n  return stats.concat(notesArray).join(' ');\n}\n\nfunction unpackFeature(packed) {\n  var unpacked = {\n    status: statuses[packed.B],\n    title: packed.C\n  };\n  unpacked.stats = Object.keys(packed.A).reduce(function (browserStats, key) {\n    var browser = packed.A[key];\n    browserStats[browsers[key]] = Object.keys(browser).reduce(function (stats, support) {\n      var packedVersions = browser[support].split(' ');\n      var unpacked2 = unpackSupport(support);\n      packedVersions.forEach(function (v) {\n        return stats[versions[v]] = unpacked2;\n      });\n      return stats;\n    }, {});\n    return browserStats;\n  }, {});\n  return unpacked;\n}\n\nmodule.exports = unpackFeature;\nmodule.exports.default = unpackFeature;","map":{"version":3,"sources":["/Users/rajju/Sites/REACT-WEBSITES/d9-music/tw2-02-music/node_modules/caniuse-lite/dist/unpacker/feature.js"],"names":["statuses","require","supported","browsers","versions","browserVersions","MATH2LOG","Math","log","unpackSupport","cipher","stats","Object","keys","reduce","list","support","push","notes","notesArray","note","floor","unshift","pow","concat","join","unpackFeature","packed","unpacked","status","B","title","C","A","browserStats","key","browser","packedVersions","split","unpacked2","forEach","v","module","exports","default"],"mappings":"AAAA;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,iBAAD,CAAxB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAP,CAAsBE,QAAvC;;AACA,IAAMC,QAAQ,GAAGH,OAAO,CAAC,mBAAD,CAAP,CAA6BI,eAA9C;;AAEA,IAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,CAAjB;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B;AACA,MAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYX,SAAZ,EAAuBY,MAAvB,CAA8B,UAACC,IAAD,EAAOC,OAAP,EAAmB;AAC3D,QAAIN,MAAM,GAAGR,SAAS,CAACc,OAAD,CAAtB,EAAiCD,IAAI,CAACE,IAAL,CAAUD,OAAV;AACjC,WAAOD,IAAP;AACD,GAHW,EAGT,EAHS,CAAZ,CAF6B,CAO7B;;AACA,MAAIG,KAAK,GAAGR,MAAM,IAAI,CAAtB;AACA,MAAIS,UAAU,GAAG,EAAjB;;AACA,SAAOD,KAAP,EAAc;AACZ,QAAIE,IAAI,GAAGb,IAAI,CAACc,KAAL,CAAWd,IAAI,CAACC,GAAL,CAASU,KAAT,IAAkBZ,QAA7B,IAAyC,CAApD;AACAa,IAAAA,UAAU,CAACG,OAAX,YAAuBF,IAAvB;AACAF,IAAAA,KAAK,IAAIX,IAAI,CAACgB,GAAL,CAAS,CAAT,EAAYH,IAAI,GAAG,CAAnB,CAAT;AACD;;AAED,SAAOT,KAAK,CAACa,MAAN,CAAaL,UAAb,EAAyBM,IAAzB,CAA8B,GAA9B,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,MAAIC,QAAQ,GAAG;AAAEC,IAAAA,MAAM,EAAE7B,QAAQ,CAAC2B,MAAM,CAACG,CAAR,CAAlB;AAA8BC,IAAAA,KAAK,EAAEJ,MAAM,CAACK;AAA5C,GAAf;AACAJ,EAAAA,QAAQ,CAACjB,KAAT,GAAiBC,MAAM,CAACC,IAAP,CAAYc,MAAM,CAACM,CAAnB,EAAsBnB,MAAtB,CAA6B,UAACoB,YAAD,EAAeC,GAAf,EAAuB;AACnE,QAAIC,OAAO,GAAGT,MAAM,CAACM,CAAP,CAASE,GAAT,CAAd;AACAD,IAAAA,YAAY,CAAC/B,QAAQ,CAACgC,GAAD,CAAT,CAAZ,GAA8BvB,MAAM,CAACC,IAAP,CAAYuB,OAAZ,EAAqBtB,MAArB,CAC5B,UAACH,KAAD,EAAQK,OAAR,EAAoB;AAClB,UAAIqB,cAAc,GAAGD,OAAO,CAACpB,OAAD,CAAP,CAAiBsB,KAAjB,CAAuB,GAAvB,CAArB;AACA,UAAIC,SAAS,GAAG9B,aAAa,CAACO,OAAD,CAA7B;AACAqB,MAAAA,cAAc,CAACG,OAAf,CAAuB,UAAAC,CAAC;AAAA,eAAK9B,KAAK,CAACP,QAAQ,CAACqC,CAAD,CAAT,CAAL,GAAqBF,SAA1B;AAAA,OAAxB;AACA,aAAO5B,KAAP;AACD,KAN2B,EAO5B,EAP4B,CAA9B;AASA,WAAOuB,YAAP;AACD,GAZgB,EAYd,EAZc,CAAjB;AAaA,SAAON,QAAP;AACD;;AAEDc,MAAM,CAACC,OAAP,GAAiBjB,aAAjB;AACAgB,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBlB,aAAzB","sourcesContent":["'use strict'\n\nconst statuses = require('../lib/statuses')\nconst supported = require('../lib/supported')\nconst browsers = require('./browsers').browsers\nconst versions = require('./browserVersions').browserVersions\n\nconst MATH2LOG = Math.log(2)\n\nfunction unpackSupport(cipher) {\n  // bit flags\n  let stats = Object.keys(supported).reduce((list, support) => {\n    if (cipher & supported[support]) list.push(support)\n    return list\n  }, [])\n\n  // notes\n  let notes = cipher >> 7\n  let notesArray = []\n  while (notes) {\n    let note = Math.floor(Math.log(notes) / MATH2LOG) + 1\n    notesArray.unshift(`#${note}`)\n    notes -= Math.pow(2, note - 1)\n  }\n\n  return stats.concat(notesArray).join(' ')\n}\n\nfunction unpackFeature(packed) {\n  let unpacked = { status: statuses[packed.B], title: packed.C }\n  unpacked.stats = Object.keys(packed.A).reduce((browserStats, key) => {\n    let browser = packed.A[key]\n    browserStats[browsers[key]] = Object.keys(browser).reduce(\n      (stats, support) => {\n        let packedVersions = browser[support].split(' ')\n        let unpacked2 = unpackSupport(support)\n        packedVersions.forEach(v => (stats[versions[v]] = unpacked2))\n        return stats\n      },\n      {}\n    )\n    return browserStats\n  }, {})\n  return unpacked\n}\n\nmodule.exports = unpackFeature\nmodule.exports.default = unpackFeature\n"]},"metadata":{},"sourceType":"script"}