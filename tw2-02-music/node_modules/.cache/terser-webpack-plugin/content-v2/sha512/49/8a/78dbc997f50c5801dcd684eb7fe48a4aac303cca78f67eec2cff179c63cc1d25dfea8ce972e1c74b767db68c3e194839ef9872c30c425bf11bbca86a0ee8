{"code":"(this[\"webpackJsonptw2-01-music\"]=this[\"webpackJsonptw2-01-music\"]||[]).push([[6],{175:function(a,n,e){a.exports=e(772)},176:function(a,n,e){\"use strict\";function i(a,n,e,i,r,o,t){try{var u=a[o](t),l=u.value}catch(s){return void e(s)}u.done?n(l):Promise.resolve(l).then(i,r)}function r(a){return function(){var n=this,e=arguments;return new Promise((function(r,o){var t=a.apply(n,e);function u(a){i(t,r,o,u,l,\"next\",a)}function l(a){i(t,r,o,u,l,\"throw\",a)}u(void 0)}))}}e.d(n,\"a\",(function(){return r}))},72:function(a,n,e){\"use strict\";function i(a,n){(null==n||n>a.length)&&(n=a.length);for(var e=0,i=new Array(n);e<n;e++)i[e]=a[e];return i}function r(a,n){return function(a){if(Array.isArray(a))return a}(a)||function(a,n){if(\"undefined\"!==typeof Symbol&&Symbol.iterator in Object(a)){var e=[],i=!0,r=!1,o=void 0;try{for(var t,u=a[Symbol.iterator]();!(i=(t=u.next()).done)&&(e.push(t.value),!n||e.length!==n);i=!0);}catch(l){r=!0,o=l}finally{try{i||null==u.return||u.return()}finally{if(r)throw o}}return e}}(a,n)||function(a,n){if(a){if(\"string\"===typeof a)return i(a,n);var e=Object.prototype.toString.call(a).slice(8,-1);return\"Object\"===e&&a.constructor&&(e=a.constructor.name),\"Map\"===e||\"Set\"===e?Array.from(a):\"Arguments\"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?i(a,n):void 0}}(a,n)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}e.d(n,\"a\",(function(){return r}))},772:function(a,n,e){var i=function(a){\"use strict\";var n,e=Object.prototype,i=e.hasOwnProperty,r=\"function\"===typeof Symbol?Symbol:{},o=r.iterator||\"@@iterator\",t=r.asyncIterator||\"@@asyncIterator\",u=r.toStringTag||\"@@toStringTag\";function l(a,n,e){return Object.defineProperty(a,n,{value:e,enumerable:!0,configurable:!0,writable:!0}),a[n]}try{l({},\"\")}catch(O){l=function(a,n,e){return a[n]=e}}function s(a,n,e,i){var r=n&&n.prototype instanceof m?n:m,o=Object.create(r.prototype),t=new v(i||[]);return o._invoke=function(a,n,e){var i=h;return function(r,o){if(i===A)throw new Error(\"Generator is already running\");if(i===c){if(\"throw\"===r)throw o;return P()}for(e.method=r,e.arg=o;;){var t=e.delegate;if(t){var u=p(t,e);if(u){if(u===g)continue;return u}}if(\"next\"===e.method)e.sent=e._sent=e.arg;else if(\"throw\"===e.method){if(i===h)throw i=c,e.arg;e.dispatchException(e.arg)}else\"return\"===e.method&&e.abrupt(\"return\",e.arg);i=A;var l=d(a,n,e);if(\"normal\"===l.type){if(i=e.done?c:S,l.arg===g)continue;return{value:l.arg,done:e.done}}\"throw\"===l.type&&(i=c,e.method=\"throw\",e.arg=l.arg)}}}(a,e,t),o}function d(a,n,e){try{return{type:\"normal\",arg:a.call(n,e)}}catch(O){return{type:\"throw\",arg:O}}}a.wrap=s;var h=\"suspendedStart\",S=\"suspendedYield\",A=\"executing\",c=\"completed\",g={};function m(){}function M(){}function b(){}var B={};l(B,o,(function(){return this}));var k=Object.getPrototypeOf,y=k&&k(k(L([])));y&&y!==e&&i.call(y,o)&&(B=y);var C=b.prototype=m.prototype=Object.create(B);function N(a){[\"next\",\"throw\",\"return\"].forEach((function(n){l(a,n,(function(a){return this._invoke(n,a)}))}))}function f(a,n){function e(r,o,t,u){var l=d(a[r],a,o);if(\"throw\"!==l.type){var s=l.arg,h=s.value;return h&&\"object\"===typeof h&&i.call(h,\"__await\")?n.resolve(h.__await).then((function(a){e(\"next\",a,t,u)}),(function(a){e(\"throw\",a,t,u)})):n.resolve(h).then((function(a){s.value=a,t(s)}),(function(a){return e(\"throw\",a,t,u)}))}u(l.arg)}var r;this._invoke=function(a,i){function o(){return new n((function(n,r){e(a,i,n,r)}))}return r=r?r.then(o,o):o()}}function p(a,e){var i=a.iterator[e.method];if(i===n){if(e.delegate=null,\"throw\"===e.method){if(a.iterator.return&&(e.method=\"return\",e.arg=n,p(a,e),\"throw\"===e.method))return g;e.method=\"throw\",e.arg=new TypeError(\"The iterator does not provide a 'throw' method\")}return g}var r=d(i,a.iterator,e.arg);if(\"throw\"===r.type)return e.method=\"throw\",e.arg=r.arg,e.delegate=null,g;var o=r.arg;return o?o.done?(e[a.resultName]=o.value,e.next=a.nextLoc,\"return\"!==e.method&&(e.method=\"next\",e.arg=n),e.delegate=null,g):o:(e.method=\"throw\",e.arg=new TypeError(\"iterator result is not an object\"),e.delegate=null,g)}function K(a){var n={tryLoc:a[0]};1 in a&&(n.catchLoc=a[1]),2 in a&&(n.finallyLoc=a[2],n.afterLoc=a[3]),this.tryEntries.push(n)}function T(a){var n=a.completion||{};n.type=\"normal\",delete n.arg,a.completion=n}function v(a){this.tryEntries=[{tryLoc:\"root\"}],a.forEach(K,this),this.reset(!0)}function L(a){if(a){var e=a[o];if(e)return e.call(a);if(\"function\"===typeof a.next)return a;if(!isNaN(a.length)){var r=-1,t=function e(){for(;++r<a.length;)if(i.call(a,r))return e.value=a[r],e.done=!1,e;return e.value=n,e.done=!0,e};return t.next=t}}return{next:P}}function P(){return{value:n,done:!0}}return M.prototype=b,l(C,\"constructor\",b),l(b,\"constructor\",M),M.displayName=l(b,u,\"GeneratorFunction\"),a.isGeneratorFunction=function(a){var n=\"function\"===typeof a&&a.constructor;return!!n&&(n===M||\"GeneratorFunction\"===(n.displayName||n.name))},a.mark=function(a){return Object.setPrototypeOf?Object.setPrototypeOf(a,b):(a.__proto__=b,l(a,u,\"GeneratorFunction\")),a.prototype=Object.create(C),a},a.awrap=function(a){return{__await:a}},N(f.prototype),l(f.prototype,t,(function(){return this})),a.AsyncIterator=f,a.async=function(n,e,i,r,o){void 0===o&&(o=Promise);var t=new f(s(n,e,i,r),o);return a.isGeneratorFunction(e)?t:t.next().then((function(a){return a.done?a.value:t.next()}))},N(C),l(C,u,\"Generator\"),l(C,o,(function(){return this})),l(C,\"toString\",(function(){return\"[object Generator]\"})),a.keys=function(a){var n=[];for(var e in a)n.push(e);return n.reverse(),function e(){for(;n.length;){var i=n.pop();if(i in a)return e.value=i,e.done=!1,e}return e.done=!0,e}},a.values=L,v.prototype={constructor:v,reset:function(a){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=n,this.tryEntries.forEach(T),!a)for(var e in this)\"t\"===e.charAt(0)&&i.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=n)},stop:function(){this.done=!0;var a=this.tryEntries[0].completion;if(\"throw\"===a.type)throw a.arg;return this.rval},dispatchException:function(a){if(this.done)throw a;var e=this;function r(i,r){return u.type=\"throw\",u.arg=a,e.next=i,r&&(e.method=\"next\",e.arg=n),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var t=this.tryEntries[o],u=t.completion;if(\"root\"===t.tryLoc)return r(\"end\");if(t.tryLoc<=this.prev){var l=i.call(t,\"catchLoc\"),s=i.call(t,\"finallyLoc\");if(l&&s){if(this.prev<t.catchLoc)return r(t.catchLoc,!0);if(this.prev<t.finallyLoc)return r(t.finallyLoc)}else if(l){if(this.prev<t.catchLoc)return r(t.catchLoc,!0)}else{if(!s)throw new Error(\"try statement without catch or finally\");if(this.prev<t.finallyLoc)return r(t.finallyLoc)}}}},abrupt:function(a,n){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc<=this.prev&&i.call(r,\"finallyLoc\")&&this.prev<r.finallyLoc){var o=r;break}}o&&(\"break\"===a||\"continue\"===a)&&o.tryLoc<=n&&n<=o.finallyLoc&&(o=null);var t=o?o.completion:{};return t.type=a,t.arg=n,o?(this.method=\"next\",this.next=o.finallyLoc,g):this.complete(t)},complete:function(a,n){if(\"throw\"===a.type)throw a.arg;return\"break\"===a.type||\"continue\"===a.type?this.next=a.arg:\"return\"===a.type?(this.rval=this.arg=a.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===a.type&&n&&(this.next=n),g},finish:function(a){for(var n=this.tryEntries.length-1;n>=0;--n){var e=this.tryEntries[n];if(e.finallyLoc===a)return this.complete(e.completion,e.afterLoc),T(e),g}},catch:function(a){for(var n=this.tryEntries.length-1;n>=0;--n){var e=this.tryEntries[n];if(e.tryLoc===a){var i=e.completion;if(\"throw\"===i.type){var r=i.arg;T(e)}return r}}throw new Error(\"illegal catch attempt\")},delegateYield:function(a,e,i){return this.delegate={iterator:L(a),resultName:e,nextLoc:i},\"next\"===this.method&&(this.arg=n),g}},a}(a.exports);try{regeneratorRuntime=i}catch(r){\"object\"===typeof globalThis?globalThis.regeneratorRuntime=i:Function(\"r\",\"regeneratorRuntime = r\")(i)}},773:function(a,n,e){\"use strict\";e.d(n,\"a\",(function(){return y})),e.d(n,\"b\",(function(){return C}));var i=e(0),r=e.n(i),o=e(14),t=e.n(o),u=[[\"Afghanistan\",\"AF\",\"Badakhshan~BDS|Badghis~BDG|Baghlan~BGL|Balkh~BAL|Bamyan~BAM|Daykundi~DAY|Farah~FRA|Faryab~FYB|Ghazni~GHA|Ghor~GHO|Helmand~HEL|Herat~HER|Jowzjan~JOW|Kabul~KAB|Kandahar~KAN|Kapisa~KAP|Khost~KHO|Kunar~KNR|Kunduz~KDZ|Laghman~LAG|Logar~LOW|Maidan Wardak~WAR|Nangarhar~NAN|Nimruz~NIM|Nuristan~NUR|Paktia~PIA|Paktika~PKA|Panjshir~PAN|Parwan~PAR|Samangan~SAM|Sar-e Pol~SAR|Takhar~TAK|Urozgan~ORU|Zabul~ZAB\"],[\"\\xc5land Islands\",\"AX\",\"Br\\xe4nd\\xf6~BR|Ecker\\xf6~EC|Finstr\\xf6m~FN|F\\xf6gl\\xf6~FG|Geta~GT|Hammarland~HM|Jomala~JM|Kumlinge~KM|K\\xf6kar~KK|Lemland~LE|Lumparland~LU|Mariehamn~MH|Saltvik~SV|Sottunga~ST|Sund~SD|V\\xe5rd\\xf6~VR\"],[\"Albania\",\"AL\",\"Berat~01|Dib\\xebr~09|Durr\\xebs~02|Elbasan~03|Fier~04|Gjirokast\\xebr~05|Kor\\xe7\\xeb~06|Kuk\\xebs~07|Lezh\\xeb~08|Shkod\\xebr~10|Tirana~11|Vlor\\xeb~12\"],[\"Algeria\",\"DZ\",\"Adrar~01|A\\xefn Defla~44|A\\xefn T\\xe9mouchent~46|Algiers~16|Annaba~23|Batna~05|B\\xe9char~08|B\\xe9ja\\xefa~06|Biskra~07|Blida~09|Bordj Bou Arr\\xe9ridj~34|Bou\\xefra~10|Boumerd\\xe8s~35|Chlef~02|Constantine~25|Djelfa~17|El Bayadh~32|El Oued~39|El Tarf~36|Gharda\\xefa~47|Guelma~24|Illizi~33|Jijel~18|Khenchela~40|Laghouat~03|Mascara~29|M\\xe9d\\xe9a~26|Mila~43|Mostaganem~27|Msila~28|Na\\xe2ma~45|Oran~31|Ouargla~30|Oum el Bouaghi~04|Relizane~48|Sa\\xefda~20|S\\xe9tif~19|Sidi Bel Abb\\xe8s~22|Skikda~21|Souk Ahras~41|Tamanghasset~11|T\\xe9bessa~12|Tiaret~14|Tindouf~37|Tipaza~42|Tissemsilt~38|Tizi Ouzou~15|Tlemcen~13\"],[\"American Samoa\",\"AS\",\"Tutuila~01|Aunu'u~02|Ta'\\u016b~03|Ofu\\u2011Olosega~04|Rose Atoll~21|Swains Island~22\"],[\"Andorra\",\"AD\",\"Andorra la Vella~07|Canillo~02|Encamp~03|Escaldes-Engordany~08|La Massana~04|Ordino~05|Sant Juli\\xe0 de L\\xf2ria~06\"],[\"Angola\",\"AO\",\"Bengo~BGO|Benguela~BGU|Bi\\xe9~BIE|Cabinda~CAB|Cuando Cubango~CCU|Cuanza Norte~CNO|Cuanza Sul~CUS|Cunene~CNN|Huambo~HUA|Hu\\xedla~HUI|Luanda~LUA|Lunda Norte~LNO|Lunda Sul~LSU|Malanje~MAL|Moxico~MOX|Namibe~NAM|U\\xedge~UIG|Zaire~ZAI\"],[\"Anguilla\",\"AI\",\"Anguilla~01|Anguillita Island~02|Blowing Rock~03|Cove Cay~04|Crocus Cay~05|Deadman's Cay~06|Dog Island~07|East Cay~08|Little Island~09|Little Scrub Island~10|Mid Cay~11|North Cay~12|Prickly Pear Cays~13|Rabbit Island~14|Sandy Island/Sand Island~15|Scilly Cay~16|Scrub Island~17|Seal Island~18|Sombrero/Hat Island~19|South Cay~20|South Wager Island~21|West Cay~22\"],[\"Antarctica\",\"AQ\",\"Antarctica~AQ\"],[\"Antigua and Barbuda\",\"AG\",\"Antigua Island~01|Barbuda Island~02|Bird Island~04|Bishop Island~05|Blake Island~06|Crump Island~09|Dulcina Island~10|Exchange Island~11|Five Islands~12|Great Bird Island~13|Green Island~14|Guiana Island~15|Hawes Island~17|Hells Gate Island~16|Henry Island~18|Johnson Island~19|Kid Island~20|Lobster Island~22|Maiden Island~24|Moor Island~25|Nanny Island~26|Pelican Island~27|Prickly Pear Island~28|Rabbit Island~29|Red Head Island~31|Redonda Island~03|Sandy Island~32|Smith Island~33|The Sisters~34|Vernon Island~35|Wicked Will Island~36|York Island~37\"],[\"Argentina\",\"AR\",\"Buenos Aires~B|Capital Federal~C|Catamarca~K|Chaco~H|Chubut~U|C\\xf3rdoba~X|Corrientes~W|Entre R\\xedos~E|Formosa~P|Jujuy~Y|La Pampa~L|La Rioja~F|Mendoza~M|Misiones~N|Neuqu\\xe9n~Q|R\\xedo Negro~R|Salta~A|San Juan~J|San Luis~D|Santa Cruz~Z|Santa Fe~S|Santiago del Estero~G|Tierra del Fuego~V|Tucum\\xe1n~T\"],[\"Armenia\",\"AM\",\"Aragatsotn~AG|Ararat~AR|Armavir~AV|Gegharkunik~GR|Kotayk~KT|Lori~LO|Shirak~SH|Syunik~SU|Tavush~TV|Vayots Dzor~VD|Yerevan~ER\"],[\"Aruba\",\"AW\",\"Aruba~AW\"],[\"Australia\",\"AU\",\"Australian Capital Territory~ACT|New South Wales~NSW|Northern Territory~NT|Queensland~QLD|South Australia~SA|Tasmania~TAS|Victoria~VIC|Western Australia~WA\"],[\"Austria\",\"AT\",\"Burgenland~1|K\\xe4rnten~2|Nieder\\xf6sterreich~3|Ober\\xf6sterreich~4|Salzburg~5|Steiermark~6|Tirol~7|Vorarlberg~8|Wien~9\"],[\"Azerbaijan\",\"AZ\",\"Ab\\u015feron~ABS|A\\u011fcab\\u0259di~AGC|A\\u011fdam~AGM|A\\u011fda\\u015f~AGS|A\\u011fstafa~AGA|A\\u011fsu~AGU|Astara~AST|Bak\\u0131~BAK|Bab\\u0259k~BAB|Balak\\u0259n~BAL|B\\u0259rd\\u0259~BAR|Beyl\\u0259qan~BEY|Bil\\u0259suvar~BIL|C\\u0259bray\\u0131l~CAB|C\\u0259lilabad~CAL|Culfa~CUL|Da\\u015fk\\u0259s\\u0259n~DAS|F\\xfczuli~FUZ|G\\u0259d\\u0259b\\u0259y~GAD|Goranboy~GOR|G\\xf6y\\xe7ay~GOY|G\\xf6yg\\xf6l~GYG|Hac\\u0131qabul~HAC|\\u0130mi\\u015fli~IMI|\\u0130smay\\u0131ll\\u0131~ISM|K\\u0259lb\\u0259c\\u0259r~KAL|K\\u01ddng\\u01ddrli~KAN|K\\xfcrd\\u0259mir~KUR|La\\xe7\\u0131n~LAC|L\\u0259nk\\u0259ran~LAN|Lerik~LER|Masall\\u0131~MAS|Neft\\xe7ala~NEF|O\\u011fuz~OGU|Ordubad~ORD|Q\\u0259b\\u0259l\\u0259~QAB|Qax~QAX|Qazax~QAZ|Qobustan~QOB|Quba~QBA|Qubadli~QBI|Qusar~QUS|Saatl\\u0131~SAT|Sabirabad~SAB|\\u015eabran~SBN|S\\u0259d\\u0259r\\u0259k~SAD|\\u015eahbuz~SAH|\\u015e\\u0259ki~SAK|Salyan~SAL|\\u015eamax\\u0131~SMI|\\u015e\\u0259mkir~SKR|Samux~SMX|\\u015e\\u0259rur~SAR|Siy\\u0259z\\u0259n~SIY|\\u015eu\\u015fa~SUS|T\\u0259rt\\u0259r~TAR|Tovuz~TOV|Ucar~UCA|Xa\\xe7maz~XAC|X\\u0131z\\u0131~XIZ|Xocal\\u0131~XCI|Xocav\\u0259nd~XVD|Yard\\u0131ml\\u0131~YAR|Yevlax~YEV|Z\\u0259ngilan~ZAN|Zaqatala~ZAQ|Z\\u0259rdab~ZAR\"],[\"Bahamas\",\"BS\",\"Acklins Island~01|Berry Islands~22|Bimini~02|Black Point~23|Cat Island~03|Central Abaco~24|Crooked Island and Long Cay~28|East Grand Bahama~29|Exuma~04|Freeport~05|Fresh Creek~06|Governor's Harbour~07|Green Turtle Cay~08|Harbour Island~09|High Rock~10|Inagua~11|Kemps Bay~12|Long Island~13|Marsh Harbour~14|Mayaguana~15|Moore\\u2019s Island~40|New Providence~16|Nichollstown and Berry Islands~17|North Abaco~42|North Andros~41|North Eleuthera~33|Ragged Island~18|Rock Sound~19|San Salvador and Rum Cay~20|Sandy Point~21|South Abaco~35|South Andros~36|South Eleuthera~37|West Grand Bahama~39\"],[\"Bahrain\",\"BH\",\"Al Jan\\u016bb\\u012byah~14|Al Man\\u0101mah~13|Al Mu\\u1e29arraq~15|Al Wus\\u0163\\xe1~16|Ash Sham\\u0101l\\u012byah~17\"],[\"Bangladesh\",\"BD\",\"Barisal~A|Chittagong~B|Dhaka~C|Khulna~D|Mymensingh~M|Rajshahi~E|Rangpur~F|Sylhet~G\"],[\"Barbados\",\"BB\",\"Christ Church~01|Saint Andrew~02|Saint George~03|Saint James~04|Saint John~05|Saint Joseph~06|Saint Lucy~07|Saint Michael~08|Saint Peter~09|Saint Philip~10|Saint Thomas~11\"],[\"Belarus\",\"BY\",\"Brest voblast~BR|Gorod Minsk~HM|Homiel voblast~HO|Hrodna voblast~HR|Mahilyow voblast~MA|Minsk voblast~MI|Vitsebsk voblast~VI\"],[\"Belgium\",\"BE\",\"Brussels~BRU|Flanders~VLG|Wallonia~WAL\"],[\"Belize\",\"BZ\",\"Belize District~BZ|Cayo District~CY|Corozal District~CZL|Orange Walk District~OW|Stann Creek District~SC|Toledo District~TOL\"],[\"Benin\",\"BJ\",\"Alibori~AL|Atakora~AK|Atlantique~AQ|Borgou~BO|Collines Department~CO|Donga~DO|Kouffo~KO|Littoral Department~LI|Mono Department~MO|Ou\\xe9m\\xe9~OU|Plateau~PL|Zou~ZO\"],[\"Bermuda\",\"BM\",\"City of Hamilton~03|Devonshire Parish~01|Hamilton Parish~02|Paget Parish~04|Pembroke Parish~05|Sandys Parish~08|Smith's Parish~09|Southampton Parish~10|St. George's Parish~07|Town of St. George~06|Warwick Parish~11\"],[\"Bhutan\",\"BT\",\"Bumthang~33|Chhukha~12|Dagana~22|Gasa~GA|Haa~13|Lhuntse~44|Mongar~42|Paro~11|Pemagatshel~43|Punakha~23|Samdrup Jongkhar~45|Samtse~14|Sarpang~31|Thimphu~15|Trashigang~41|Trashiyangtse~TY|Trongsa~32|Tsirang~21|Wangdue Phodrang~24|Zhemgang~34\"],[\"Bolivia\",\"BO\",\"Beni~B|Chuquisaca~H|Cochabamba~C|La Paz~L|Oruro~O|Pando~N|Potos\\xed~P|Santa Cruz~S|Tarija~T\"],[\"Bonaire, Sint Eustatius and Saba\",\"BQ\",\"Bonaire~BO|Saba Isand~SA|Sint Eustatius~SE\"],[\"Bosnia and Herzegovina\",\"BA\",\"Br\\u010dko Distrikt~BRC|Federacija Bosne i Hercegovine~BIH|Republika Srpska~SRP\"],[\"Botswana\",\"BW\",\"Central~CE|Ghanzi~GH|Kgalagadi~KG|Kgatleng~KL|Kweneng~KW|North West~NW|North-East~NE|South East~SE|Southern~SO\"],[\"Bouvet Island\",\"BV\",\"Bouvet Island~BV\"],[\"Brazil\",\"BR\",\"Acre~AC|Alagoas~AL|Amap\\xe1~AP|Amazonas~AM|Bahia~BA|Cear\\xe1~CE|Distrito Federal~DF|Esp\\xedrito Santo~ES|Goi\\xe1s~GO|Maranh\\xe3o~MA|Mato Grosso~MT|Mato Grosso do Sul~MS|Minas Gerais~MG|Par\\xe1~PA|Para\\xedba~PB|Paran\\xe1~PR|Pernambuco~PE|Piau\\xed~PI|Rio de Janeiro~RJ|Rio Grande do Norte~RN|Rio Grande do Sul~RS|Rond\\xf4nia~RO|Roraima~RR|Santa Catarina~SC|S\\xe3o Paulo~SP|Sergipe~SE|Tocantins~TO\"],[\"British Indian Ocean Territory\",\"IO\",\"British Indian Ocean Territory~IO\"],[\"Brunei Darussalam\",\"BN\",\"Belait~BE|Brunei Muara~BM|Temburong~TE|Tutong~TU\"],[\"Bulgaria\",\"BG\",\"Blagoevgrad~01|Burgas~02|Dobrich~08|Gabrovo~07|Jambol~28|Khaskovo~26|Kjustendil~10|Kurdzhali~09|Lovech~11|Montana~12|Pazardzhik~13|Pernik~14|Pleven~15|Plovdiv~16|Razgrad~17|Ruse~18|Shumen~27|Silistra~19|Sliven~20|Smoljan~21|Sofija~23|Sofija-Grad~22|Stara Zagora~24|Turgovishhe~25|Varna~03|Veliko Turnovo~04|Vidin~05|Vraca~06\"],[\"Burkina Faso\",\"BF\",\"Bal\\xe9~BAL|Bam/Lake Bam~BAM|Banwa Province~BAN|Baz\\xe8ga~BAZ|Bougouriba~BGR|Boulgou Province~BLG|Boulkiemd\\xe9~BLK|Como\\xe9/Komoe~COM|Ganzourgou Province~GAN|Gnagna~GNA|Gourma Province~GOU|Houet~HOU|Ioba~IOB|Kadiogo~KAD|K\\xe9n\\xe9dougou~KEN|Komondjari~KMD|Kompienga~KMP|Kossi Province~KOS|Koulp\\xe9logo~KOP|Kouritenga~KOT|Kourw\\xe9ogo~KOW|L\\xe9raba~LER|Loroum~LOR|Mouhoun~MOU|Namentenga~NAM|Naouri/Nahouri~NAO|Nayala~NAY|Noumbiel~NOU|Oubritenga~OUB|Oudalan~OUD|Passor\\xe9~PAS|Poni~PON|Sangui\\xe9~SNG|Sanmatenga~SMT|S\\xe9no~SEN|Sissili~SIS|Soum~SOM|Sourou~SOR|Tapoa~TAP|Tui/Tuy~TUI|Yagha~YAG|Yatenga~YAT|Ziro~ZIR|Zondoma~ZON|Zoundw\\xe9ogo~ZOU\"],[\"Burundi\",\"BI\",\"Bubanza~BB|Bujumbura Mairie~BM|Bujumbura Rural~BL|Bururi~BR|Cankuzo~CA|Cibitoke~CI|Gitega~GI|Karuzi~KR|Kayanza~KY|Kirundo~KI|Makamba~MA|Muramvya~MU|Muyinga~MY|Mwaro~MW|Ngozi~NG|Rutana~RT|Ruyigi~RY\"],[\"Cambodia\",\"KH\",\"Baat Dambang~2|Banteay Mean Chey~1|Kampong Chaam~3|Kampong Chhnang~4|Kampong Spueu~5|Kampong Thum~6|Kampot~7|Kandaal~8|Kaoh Kong~9|Kracheh~10|Krong Kaeb~23|Krong Pailin~24|Krong Preah Sihanouk~18|Mondol Kiri~11|Otdar Mean Chey~22|Phnom Penh~12|Pousaat~15|Preah Vihear~13|Prey Veaeng~14|Rotanah Kiri~16|Siem Reab~17|Stueng Treng~19|Svaay Rieng~20|Taakaev~21|Tbong Khmum~25\"],[\"Cameroon\",\"CM\",\"Adamaoua~AD|Centre~CE|Est~ES|Extr\\xeame-Nord~EN|Littoral~LT|Nord~NO|Nord-Ouest~NW|Ouest~OU|Sud~SU|Sud-Ouest~SW\"],[\"Canada\",\"CA\",\"Alberta~AB|British Columbia~BC|Manitoba~MB|New Brunswick~NB|Newfoundland and Labrador~NL|Northwest Territories~NT|Nova Scotia~NS|Nunavut~NU|Ontario~ON|Prince Edward Island~PE|Quebec~QC|Saskatchewan~SK|Yukon~YT\"],[\"Cape Verde\",\"CV\",\"Boa Vista~BV|Brava~BR|Calheta de S\\xe3o Miguel~CS|Maio~MA|Mosteiros~MO|Pa\\xfal~PA|Porto Novo~PN|Praia~PR|Ribeira Brava~RB|Ribeira Grande~RG|Sal~SL|Santa Catarina~CA|Santa Cruz~CR|S\\xe3o Domingos~SD|S\\xe3o Filipe~SF|S\\xe3o Nicolau~SN|S\\xe3o Vicente~SV|Tarrafal~TA|Tarrafal de S\\xe3o Nicolau~TS\"],[\"Cayman Islands\",\"KY\",\"Creek~undefined|Eastern~undefined|Midland~undefined|South Town~undefined|Spot Bay~undefined|Stake Bay~undefined|West End~undefined|Western~undefined\"],[\"Central African Republic\",\"CF\",\"Bamingui-Bangoran~BB|Bangui~BGF|Basse-Kotto~BK|Haute-Kotto~HK|Haut-Mbomou~HM|K\\xe9mo~KG|Lobaye~LB|Mamb\\xe9r\\xe9-Kad\\xe9\\xef~HS|Mbomou~MB|Nana-Grebizi~10|Nana-Mamb\\xe9r\\xe9~NM|Ombella-M'Poko~MP|Ouaka~UK|Ouham~AC|Ouham P\\xe9nd\\xe9~OP|Sangha-Mba\\xe9r\\xe9~SE|Vakaga~VK\"],[\"Chad\",\"TD\",\"Bahr el Ghazal~BG|Batha~BA|Borkou~BO|Chari-Baguirmi~CB|Ennedi-Est~EE|Ennedi-Ouest~EO|Gu\\xe9ra~GR|Hadjer Lamis~HL|Kanem~KA|Lac~LC|Logone Occidental~LO|Logone Oriental~LR|Mondoul~MA|Mayo-K\\xe9bbi-Est~ME|Moyen-Chari~MC|Ouaddai~OD|Salamat~SA|Sila~SI|Tandjil\\xe9~TA|Tibesti~TI|Ville de Ndjamena~ND|Wadi Fira~WF\"],[\"Chile\",\"CL\",\"Ais\\xe9n del General Carlos Ib\\xe1\\xf1ez del Campo~AI|Antofagasta~AN|Araucan\\xeda~AR|Arica y Parinacota~AP|Atacama~AT|B\\xedo-B\\xedo~BI|Coquimbo~CO|Libertador General Bernardo O'Higgins~LI|Los Lagos~LL|Los R\\xedos~LR|Magallanes y Antartica Chilena~MA|Marga-Marga~|Maule~ML|\\xd1uble~NB|Regi\\xf3n Metropolitana de Santiago~RM|Tarapac\\xe1~TA|Valpara\\xedso~VS\"],[\"China\",\"CN\",\"Anhui~AH|Beijing~BJ|Chongqing~CQ|Fujian~FJ|Gansu~GS|Guangdong~GD|Guangxi~GX|Guizhou~GZ|Hainan~HI|Hebei~HE|Heilongjiang~HL|Henan~HA|Hong Kong~HK|Hubei~HB|Hunan~HN|Inner Mongolia~NM|Jiangsu~JS|Jiangxi~JX|Jilin~JL|Liaoning~LN|Macau~MO|Ningxia~NX|Qinghai~QH|Shaanxi~SN|Shandong~SD|Shanghai~SH|Shanxi~SX|Sichuan~SC|Tianjin~TJ|Tibet~XZ|Xinjiang~XJ|Yunnan~YN|Zhejiang~ZJ\"],[\"Christmas Island\",\"CX\",\"Christmas Island~CX\"],[\"Cocos (Keeling) Islands\",\"CC\",\"Direction Island~DI|Home Island~HM|Horsburgh Island~HR|North Keeling Island~NK|South Island~SI|West Island~WI\"],[\"Colombia\",\"CO\",\"Amazonas~AMA|Antioquia~ANT|Arauca~ARA|Archipi\\xe9lago de San Andr\\xe9s~SAP|Atl\\xe1ntico~ATL|Bogot\\xe1 D.C.~DC|Bol\\xedvar~BOL|Boyac\\xe1~BOY|Caldas~CAL|Caquet\\xe1~CAQ|Casanare~CAS|Cauca~CAU|Cesar~CES|Choc\\xf3~CHO|C\\xf3rdoba~COR|Cundinamarca~CUN|Guain\\xeda~GUA|Guaviare~GUV|Huila~HUI|La Guajira~LAG|Magdalena~MAG|Meta~MET|Nari\\xf1o~NAR|Norte de Santander~NSA|Putumayo~PUT|Quind\\xedo~QUI|Risaralda~RIS|Santander~SAN|Sucre~SUC|Tolima~TOL|Valle del Cauca~VAC|Vaup\\xe9s~VAU|Vichada~VID\"],[\"Comoros\",\"KM\",\"Andjaz\\xeedja~G|Andjou\\xe2n~A|Mo\\xfbh\\xeel\\xee~M\"],[\"Congo, Republic of the (Brazzaville)\",\"CG\",\"Bouenza~11|Brazzaville~BZV|Cuvette~8|Cuvette-Ouest~15|Kouilou~5|L\\xe9koumou~2|Likouala~7|Niari~9|Plateaux~14|Pointe-Noire~16|Pool~12|Sangha~13\"],[\"Congo, the Democratic Republic of the (Kinshasa)\",\"CD\",\"Bandundu~BN|Bas-Congo~BC|\\xc9quateur~EQ|Kasa\\xef-Occidental~KE|Kasa\\xef-Oriental~KW|Katanga~KA|Kinshasa~KN|Maniema~MA|Nord-Kivu~NK|Orientale~OR|Sud-Kivu~SK\"],[\"Cook Islands\",\"CK\",\"Aitutaki~undefined|Atiu~undefined|Avarua~undefined|Mangaia~undefined|Manihiki~undefined|Ma'uke~undefined|Mitiaro~undefined|Nassau~undefined|Palmerston~undefined|Penrhyn~undefined|Pukapuka~undefined|Rakahanga~undefined\"],[\"Costa Rica\",\"CR\",\"Alajuela~2|Cartago~3|Guanacaste~5|Heredia~4|Lim\\xf3n~7|Puntarenas~6|San Jos\\xe9~1\"],[\"C\\xf4te d'Ivoire, Republic of\",\"CI\",\"Agn\\xe9by~16|Bafing~17|Bas-Sassandra~09|Dengu\\xe9l\\xe9~10|Dix-Huit Montagnes~06|Fromager~18|Haut-Sassandra~02|Lacs~07|Lagunes~01|Marahou\\xe9~12|Moyen-Cavally~19|Moyen-Como\\xe9~05|N'zi-Como\\xe9~11|Savanes~03|Sud-Bandama~15|Sud-Como\\xe9~13|Vall\\xe9e du Bandama~04|Worodougou~14|Zanzan~08\"],[\"Croatia\",\"HR\",\"Bjelovarsko-bilogorska \\u017eupanija~07|Brodsko-posavska \\u017eupanija~12|Dubrova\\u010dko-neretvanska \\u017eupanija~19|Grad Zagreb~21|Istarska \\u017eupanija~18|Karlova\\u010dka \\u017eupanija~04|Koprivni\\u010dko-kri\\u017eeva\\u010dka \\u017eupanija~06|Krapinsko-zagorska \\u017eupanija~02|Li\\u010dko-senjska \\u017eupanija~09|Me\\u0111imurska \\u017eupanija~20|Osje\\u010dko-baranjska \\u017eupanija~14|Po\\u017ee\\u0161ko-slavonska \\u017eupanija~11|Primorsko-goranska \\u017eupanija~08|Sisa\\u010dko-moslava\\u010dka \\u017eupanija~03|Splitsko-dalmatinska \\u017eupanija~17|\\u0160ibensko-kninska \\u017eupanija~15|Vara\\u017edinska \\u017eupanija~05|Viroviti\\u010dko-podravska \\u017eupanija~10|Vukovarsko-srijemska \\u017eupanija~16|Zadarska \\u017eupanija~13|Zagreba\\u010dka \\u017eupanija~01\"],[\"Cuba\",\"CU\",\"Artemisa~15|Camag\\xfcey~09|Ciego de \\xc1vila~08|Cienfuegos~06|Granma~12|Guant\\xe1namo~14|Holgu\\xedn~11|Isla de la Juventud~99|La Habana~03|Las Tunas~10|Matanzas~04|Mayabeque~16|Pinar del R\\xedo~01|Sancti Sp\\xedritus~07|Santiago de Cuba~13|Villa Clara~05\"],[\"Cura\\xe7ao\",\"CW\",\"Cura\\xe7ao~CW\"],[\"Cyprus\",\"CY\",\"Ammochostos~04|Keryneia~06|Larnaka~03|Lefkosia~01|Lemesos~02|Pafos~05\"],[\"Czech Republic\",\"CZ\",\"Hlavn\\xed m\\u011bsto Praha~PR|Jiho\\u010desk\\xfd kraj~JC|Jihomoravsk\\xfd kraj~JM|Karlovarsk\\xfd kraj~KA|Kr\\xe1lov\\xe9hradeck\\xfd kraj~KR|Libereck\\xfd kraj~LI|Moravskoslezsk\\xfd kraj~MO|Olomouck\\xfd kraj~OL|Pardubick\\xfd kraj~PA|Plze\\u0148sk\\xfd kraj~PL|St\\u0159edo\\u010desk\\xfd kraj~ST|\\xdasteck\\xfd kraj~US|Vyso\\u010dina~VY|Zl\\xednsk\\xfd kraj~ZL\"],[\"Denmark\",\"DK\",\"Hovedstaden~84|Kujalleq~GL-KU|Midtjylland~82|Norder\\xf8erne~FO-01|Nordjylland~81|\\xd8ster\\xf8~FO-06|Qaasuitsup~GL-QA|Qeqqata~GL-QE|Sand\\xf8~FO-02|Sermersooq~GL-SM|Sj\\xe6lland~85|Str\\xf8m\\xf8~FO-03|Suder\\xf8~FO-04|Syddanmark~83|V\\xe5g\\xf8~FO-05\"],[\"Djibouti\",\"DJ\",\"Ali Sabieh~AS|Arta~AR|Dikhil~DI|Obock~OB|Tadjourah~TA\"],[\"Dominica\",\"DM\",\"Saint Andrew Parish~02|Saint David Parish~03|Saint George Parish~04|Saint John Parish~05|Saint Joseph Parish~06|Saint Luke Parish~07|Saint Mark Parish~08|Saint Patrick Parish~09|Saint Paul Parish~10|Saint Peter Parish~11\"],[\"Dominican Republic\",\"DO\",\"Cibao Central~02|Del Valle~37|Distrito Nacional~01|Enriquillo~38|Norcentral~04|Nordeste~33|Noroeste~34|Norte~35|Valdesia~42\"],[\"Ecuador\",\"EC\",\"Azuay~A|Bol\\xedvar~B|Ca\\xf1ar~F|Carchi~C|Chimborazo~H|Cotopaxi~X|El Oro~O|Esmeraldas~E|Gal\\xe1pagos~W|Guayas~G|Imbabura~I|Loja~L|Los R\\xedos~R|Manab\\xed~M|Morona-Santiago~S|Napo~N|Orellana~D|Pastaza~Y|Pichincha~P|Santa Elena~SE|Santo Domingo de los Ts\\xe1chilas~SD|Sucumb\\xedos~U|Tungurahua~T|Zamora-Chinchipe~Z\"],[\"Egypt\",\"EG\",\"Alexandria~ALX|Aswan~ASN|Asyout~AST|Bani Sueif~BNS|Beheira~BH|Cairo~C|Daqahlia~DK|Dumiat~DT|El Bahr El Ahmar~BA|El Ismailia~IS|El Suez~SUZ|El Wadi El Gedeed~WAD|Fayoum~FYM|Gharbia~GH|Giza~GZ|Helwan~HU|Kafr El Sheikh~KFS|Luxor~LX|Matrouh~MT|Menia~MN|Menofia~MNF|North Sinai~SIN|Port Said~PTS|Qalubia~KB|Qena~KN|Sharqia~SHR|Sixth of October~SU|Sohag~SHG|South Sinai~JS\"],[\"El Salvador\",\"SV\",\"Ahuachap\\xe1n~AH|Caba\\xf1as~CA|Cuscatl\\xe1n~CU|Chalatenango~CH|La Libertad~LI|La Paz~PA|La Uni\\xf3n~UN|Moraz\\xe1n~MO|San Miguel~SM|San Salvador~SS|Santa Ana~SA|San Vicente~SV|Sonsonate~SO|Usulut\\xe1n~US\"],[\"Equatorial Guinea\",\"GQ\",\"Annob\\xf3n~AN|Bioko Norte~BN|Bioko Sur~BS|Centro Sur~CS|Ki\\xe9-Ntem~KN|Litoral~LI|Wele-Nzas~WN\"],[\"Eritrea\",\"ER\",\"Anseba~AN|Debub~DU|Debub-Keih-Bahri~DK|Gash-Barka~GB|Maekel~MA|Semien-Keih-Bahri~SK\"],[\"Estonia\",\"EE\",\"Harjumaa (Tallinn)~37|Hiiumaa (Kardla)~39|Ida-Virumaa (Johvi)~44|J\\xe4rvamaa (Paide)~41|J\\xf5gevamaa (Jogeva)~49|L\\xe4\\xe4nemaa~57|L\\xe4\\xe4ne-Virumaa (Rakvere)~59|P\\xe4rnumaa (Parnu)~67|P\\xf5lvamaa (Polva)~65|Raplamaa (Rapla)~70|Saaremaa (Kuessaare)~74|Tartumaa (Tartu)~78|Valgamaa (Valga)~82|Viljandimaa (Viljandi)~84|V\\xf5rumaa (Voru)~86\"],[\"Ethiopia\",\"ET\",\"Addis Ababa~AA|Afar~AF|Amhara~AM|Benshangul-Gumaz~BE|Dire Dawa~DD|Gambela~GA|Harari~HA|Oromia~OR|Somali~SO|Southern Nations Nationalities and People's Region~SN|Tigray~TI\"],[\"Falkland Islands (Islas Malvinas)\",\"FK\",\"Falkland Islands (Islas Malvinas)~undefined\"],[\"Faroe Islands\",\"FO\",\"Bordoy~undefined|Eysturoy~undefined|Mykines~undefined|Sandoy~undefined|Skuvoy~undefined|Streymoy~undefined|Suduroy~undefined|Tvoroyri~undefined|Vagar~undefined\"],[\"Fiji\",\"FJ\",\"Ba~01|Bua~02|Cakaudrove~03|Kadavu~04|Lau~05|Lomaiviti~06|Macuata~07|Nadroga and Navosa~08|Naitasiri~09|Namosi~10|Ra~11|Rewa~12|Rotuma~R|Serua~13|Tailevu~14\"],[\"Finland\",\"FI\",\"Ahvenanmaan maakunta~FI-01|Etel\\xe4-Karjala~FI-02|Etel\\xe4-Pohjanmaa~FI-03|Etel\\xe4-Savo~FI-04|Kainuu~FI-05|Kanta-H\\xe4me~FI-06|Keski-Pohjanmaa~FI-07|Keski-Suomi~FI-08|Kymenlaakso~FI-09|Lappi~FI-10|Pirkanmaa~FI-11|Pohjanmaa~FI-12|Pohjois-Karjala~FI-13|Pohjois-Pohjanmaa~FI-14|Pohjois-Savo~FI-15|P\\xe4ij\\xe4t-H\\xe4me~FI-16|Satakunta~FI-17|Uusimaa~FI-18|Varsinais-Suomi~FI-19\"],[\"France\",\"FR\",\"Auvergne-Rh\\xf4ne-Alpes~ARA|Bourgogne-Franche-Comt\\xe9~BFC|Bretagne~BRE|Centre-Val de Loire~CVL|Corse~COR|Grand Est~GES|Hauts-de-France~HDF|\\xcele-de-France~IDF|Normandie~NOR|Nouvelle-Aquitaine~NAQ|Occitanie~OCC|Pays de la Loire~PDL|Provence-Alpes-Cote d'Azur~PAC|Clipperton~CP|Guadeloupe~GP|Guyane~GF|Martinique~MQ|Mayotte~YT|Novelle-Cal\\xe9donie~NC|Polyn\\xe9sie~PF|Saint-Pierre-et-Miquelon~PM|Saint Barth\\xe9lemy~BL|Saint Martin~MF|R\\xe9union~RE|Terres Australes Fran\\xe7aises~TF|Wallis-et-Futuna~WF\"],[\"French Guiana\",\"GF\",\"French Guiana~undefined\"],[\"French Polynesia\",\"PF\",\"Archipel des Marquises~undefined|Archipel des Tuamotu~undefined|Archipel des Tubuai~undefined|Iles du Vent~undefined|Iles Sous-le-Vent~undefined\"],[\"French Southern and Antarctic Lands\",\"TF\",\"Adelie Land~undefined|Ile Crozet~undefined|Iles Kerguelen~undefined|Iles Saint-Paul et Amsterdam~undefined\"],[\"Gabon\",\"GA\",\"Estuaire~1|Haut-Ogoou\\xe9~2|Moyen-Ogoou\\xe9~3|Ngouni\\xe9~4|Nyanga~5|Ogoou\\xe9-Ivindo~6|Ogoou\\xe9-Lolo~7|Ogoou\\xe9-Maritime~8|Woleu-Ntem~9\"],[\"Gambia, The\",\"GM\",\"Banjul~B|Central River~M|Lower River~L|North Bank~N|Upper River~U|Western~W\"],[\"Georgia\",\"GE\",\"Abkhazia (Sokhumi)~AB|Ajaria (Bat'umi)~AJ|Guria~GU|Imereti~IM|K'akheti~KA|Kvemo Kartli~KK|Mtshkheta-Mtianeti~MM|Rach'a-Lexhkumi-KvemoSvaneti~RL|Samegrelo-Zemo Svaneti~SZ|Samtskhe-Javakheti~SJ|Shida Kartli~SK|Tbilisi~TB\"],[\"Germany\",\"DE\",\"Baden-W\\xfcrttemberg~BW|Bayern~BY|Berlin~BE|Brandenburg~BB|Bremen~HB|Hamburg~HH|Hessen~HE|Mecklenburg-Vorpommern~MV|Niedersachsen~NI|Nordrhein-Westfalen~NW|Rheinland-Pfalz~RP|Saarland~SL|Sachsen~SN|Sachsen-Anhalt~ST|Schleswig-Holstein~SH|Th\\xfcringen~TH\"],[\"Ghana\",\"GH\",\"Ahafo~undefined|Ashanti~AH|Bono~undefined|Bono East~undefined|Central~CP|Eastern~EP|Greater Accra~AA|Northern~NP|North East~undefined|Oti~undefined|Savannah~undefined|Upper East~UE|Upper West~UW|Volta~TV|Western~WP|Western North~undefined\"],[\"Gibraltar\",\"GI\",\"Gibraltar~undefined\"],[\"Greece\",\"GR\",\"Anatolik\\xed Makedon\\xeda kai Thr\\xe1ki~A|Attik\\u1e2f~I|Dytik\\xed Ell\\xe1da~G|Dytik\\xed Makedon\\xeda~C|Ion\\xeda N\\xedsia~F|Kentrik\\xed Makedon\\xeda~B|Kr\\xedt\\xed~M|Not\\xedo Aiga\\xedo~L|Peloponn\\xedsos~J|Stere\\xe1 Ell\\xe1da~H|Thessal\\xeda~E|Vore\\xedo Aiga\\xedo~K|\\xcdpeiros~D|\\xc1gion \\xd3ros~69\"],[\"Greenland\",\"GL\",\"Kommune Kujalleq~KU|Kommuneqarfik Sermersooq~SM|Qaasuitsup Kommunia~QA|Qeqqata Kommunia~QE\"],[\"Grenada\",\"GD\",\"Saint Andrew~01|Saint David~02|Saint George~03|Saint John~04|Saint Mark~05|Saint Patrick~06|Southern Grenadine Islands~10\"],[\"Guadeloupe\",\"GP\",\"Guadeloupe~undefined\"],[\"Guam\",\"GU\",\"Guam~undefined\"],[\"Guatemala\",\"GT\",\"Alta Verapaz~AV|Baja Verapaz~BV|Chimaltenango~CM|Chiquimula~CQ|El Progreso~PR|Escuintla~ES|Guatemala~GU|Huehuetenango~HU|Izabal~IZ|Jalapa~JA|Jutiapa~JU|Pet\\xe9n~PE|Quetzaltenango~QZ|Quich\\xe9~QC|Retalhuleu~Re|Sacatep\\xe9quez~SA|San Marcos~SM|Santa Rosa~SR|Solol\\xe1~SO|Suchitep\\xe9quez~SU|Totonicap\\xe1n~TO|Zacapa~ZA\"],[\"Guernsey\",\"GG\",\"Castel~undefined|Forest~undefined|St. Andrew~undefined|St. Martin~undefined|St. Peter Port~undefined|St. Pierre du Bois~undefined|St. Sampson~undefined|St. Saviour~undefined|Torteval~undefined|Vale~undefined\"],[\"Guinea\",\"GN\",\"Bok\\xe9~B|Conakry~C|Faranah~F|Kankan~K|Kindia~D|Lab\\xe9~L|Mamou~M|Nz\\xe9r\\xe9kor\\xe9~N\"],[\"Guinea-Bissau\",\"GW\",\"Bafat\\xe1~BA|Biombo~BM|Bissau~BS|Bolama-Bijagos~BL|Cacheu~CA|Gab\\xfa~GA|Oio~OI|Quinara~QU|Tombali~TO\"],[\"Guyana\",\"GY\",\"Barima-Waini~BA|Cuyuni-Mazaruni~CU|Demerara-Mahaica~DE|East Berbice-Corentyne~EB|Essequibo Islands-West Demerara~ES|Mahaica-Berbice~MA|Pomeroon-Supenaam~PM|Potaro-Siparuni~PT|Upper Demerara-Berbice~UD|Upper Takutu-Upper Essequibo~UT\"],[\"Haiti\",\"HT\",\"Artibonite~AR|Centre~CE|Grand'Anse~GA|Nippes~NI|Nord~ND|Nord-Est~NE|Nord-Ouest~NO|Ouest~OU|Sud~SD|Sud-Est~SE\"],[\"Heard Island and McDonald Islands\",\"HM\",\"Heard Island and McDonald Islands~undefined\"],[\"Holy See (Vatican City)\",\"VA\",\"Holy See (Vatican City)~01\"],[\"Honduras\",\"HN\",\"Atl\\xe1ntida~AT|Choluteca~CH|Col\\xf3n~CL|Comayagua~CM|Cop\\xe1n~CP|Cort\\xe9s~CR|El Para\\xedso~EP|Francisco Moraz\\xe1n~FM|Gracias a Dios~GD|Intibuc\\xe1~IN|Islas de la Bah\\xeda~IB|La Paz~LP|Lempira~LE|Ocotepeque~OC|Olancho~OL|Santa B\\xe1rbara~SB|Valle~VA|Yoro~YO\"],[\"Hong Kong\",\"HK\",\"Hong Kong~HK\"],[\"Hungary\",\"HU\",\"B\\xe1cs-Kiskun~BK|Baranya~BA|B\\xe9k\\xe9s~BE|B\\xe9k\\xe9scsaba~BC|Borsod-Abauj-Zemplen~BZ|Budapest~BU|Csongr\\xe1d~CS|Debrecen~DE|Duna\\xfajv\\xe1ros~DU|Eger~EG|\\xc9rd~ER|Fej\\xe9r~FE|Gy\\u0151r~GY|Gy\\u0151r-Moson-Sopron~GS|Hajd\\xfa-Bihar~HB|Heves~HE|H\\xf3dmez\\u0151v\\xe1s\\xe1rhely~HV|J\\xe1sz-Nagykun-Szolnok~N|Kaposv\\xe1r~KV|Kecskem\\xe9t~KM|Kom\\xe1rom-Esztergom~KE|Miskolc~MI|Nagykanizsa~NK|N\\xf3gr\\xe1d~NO|Ny\\xedregyh\\xe1za~NY|P\\xe9cs~PS|Pest~PE|Salg\\xf3tarj\\xe1n~ST|Somogy~SO|Sopron~SN|Szabolcs-\\xe1-Bereg~SZ|Szeged~SD|Sz\\xe9kesfeh\\xe9rv\\xe1r~SF|Szeksz\\xe1rd~SS|Szolnok~SK|Szombathely~SH|Tatab\\xe1nya~TB|Tolna~TO|Vas~VA|Veszpr\\xe9m~VE|Veszpr\\xe9m (City)~VM|Zala~ZA|Zalaegerszeg~ZE\"],[\"Iceland\",\"IS\",\"Austurland~7|H\\xf6fu\\xf0borgarsv\\xe6\\xf0i~1|Nor\\xf0urland eystra~6|Nor\\xf0urland vestra~5|Su\\xf0urland~8|Su\\xf0urnes~2|Vestfir\\xf0ir~4|Vesturland~3\"],[\"India\",\"IN\",\"Andaman and Nicobar Islands~AN|Andhra Pradesh~AP|Arunachal Pradesh~AR|Assam~AS|Bihar~BR|Chandigarh~CH|Chhattisgarh~CT|Dadra and Nagar Haveli and Daman and Diu~DH|Delhi~DL|Goa~GA|Gujarat~GJ|Haryana~HR|Himachal Pradesh~HP|Jammu and Kashmir~JK|Jharkhand~JH|Karnataka~KA|Kerala~KL|Ladakh~LA|Lakshadweep~LD|Madhya Pradesh~MP|Maharashtra~MH|Manipur~MN|Meghalaya~ML|Mizoram~MZ|Nagaland~NL|Odisha~OR|Puducherry~PY|Punjab~PB|Rajasthan~RJ|Sikkim~SK|Tamil Nadu~TN|Telangana~TG|Tripura~TR|Uttarakhand~UT|Uttar Pradesh~UP|West Bengal~WB\"],[\"Indonesia\",\"ID\",\"Aceh~AC|Bali~BA|Bangka Belitung~BB|Banten~BT|Bengkulu~BE|Gorontalo~GO|Jakarta Raya~JK|Jambi~JA|Jawa Barat~JB|Jawa Tengah~JT|Jawa Timur~JI|Kalimantan Barat~KB|Kalimantan Selatan~KS|Kalimantan Tengah~KT|Kalimantan Timur~KI|Kalimantan Utara~KU|Kepulauan Riau~KR|Lampung~LA|Maluku~MA|Maluku Utara~MU|Nusa Tenggara Barat~NB|Nusa Tenggara Timur~NT|Papua~PA|Papua Barat~PB|Riau~RI|Sulawesi Selatan~SR|Sulawesi Tengah~ST|Sulawesi Tenggara~SG|Sulawesi Utara~SA|Sumatera Barat~SB|Sumatera Selatan~SS|Sumatera Utara~SU|Yogyakarta~YO\"],[\"Iran, Islamic Republic of\",\"IR\",\"Alborz~32|Ardab\\u012bl~03|\\u0100z\\u0304arb\\u0101yj\\u0101n-e Gharb\\u012b~02|\\u0100z\\u0304arb\\u0101yj\\u0101n-e Sharq\\u012b~01|B\\u016bshehr~06|Chah\\u0101r Ma\\u1e29\\u0101l va Bakht\\u012b\\u0101r\\u012b~08|E\\u015ffah\\u0101n~04|F\\u0101rs~14|G\\u012bl\\u0101n~19|Golest\\u0101n~27|Hamad\\u0101n~24|Hormozg\\u0101n~23|\\u012al\\u0101m~05|Kerm\\u0101n~15|Kerm\\u0101nsh\\u0101h~17|Khor\\u0101s\\u0101n-e Jon\\u016bb\\u012b~29|Khor\\u0101s\\u0101n-e Ra\\u1e95av\\u012b~30|Khor\\u0101s\\u0101n-e Shom\\u0101l\\u012b~61|Kh\\u016bzest\\u0101n~10|Kohg\\u012bl\\u016byeh va Bowyer A\\u1e29mad~18|Kordest\\u0101n~16|Lorest\\u0101n~20|Markazi~22|M\\u0101zandar\\u0101n~21|Qazv\\u012bn~28|Qom~26|Semn\\u0101n~12|S\\u012bst\\u0101n va Bal\\u016bchest\\u0101n~13|Tehr\\u0101n~07|Yazd~25|Zanj\\u0101n~11\"],[\"Iraq\",\"IQ\",\"Al Anb\\u0101r~AN|Al Ba\\u015frah~BA|Al Muthann\\xe1~MU|Al Q\\u0101dis\\u012byah~QA|An Najaf~NA|Arb\\u012bl~AR|As Sulaym\\u0101n\\u012byah~SU|B\\u0101bil~BB|Baghd\\u0101d~BG|Dohuk~DA|Dh\\u012b Q\\u0101r~DQ|Diy\\u0101l\\xe1~DI|Karbal\\u0101'~KA|Kirkuk~KI|Mays\\u0101n~MA|N\\u012bnaw\\xe1~NI|\\u015eal\\u0101\\u1e29 ad D\\u012bn~SD|W\\u0101si\\u0163~WA\"],[\"Ireland\",\"IE\",\"Carlow~CW|Cavan~CN|Clare~CE|Cork~CO|Donegal~DL|Dublin~D|Galway~G|Kerry~KY|Kildare~KE|Kilkenny~KK|Laois~LS|Leitrim~LM|Limerick~LK|Longford~LD|Louth~LH|Mayo~MO|Meath~MH|Monaghan~MN|Offaly~OY|Roscommon~RN|Sligo~SO|Tipperary~TA|Waterford~WD|Westmeath~WH|Wexford~WX|Wicklow~WW\"],[\"Isle of Man\",\"IM\",\"Isle of Man~undefined\"],[\"Israel\",\"IL\",\"HaDarom~D|HaMerkaz~M|HaTsafon~Z|H\\u0331efa~HA|Tel-Aviv~TA|Yerushalayim~JM\"],[\"Italy\",\"IT\",\"Abruzzo~65|Basilicata~77|Calabria~78|Campania~72|Emilia-Romagna~45|Friuli-Venezia Giulia~36|Lazio~62|Liguria~42|Lombardia~25|Marche~57|Molise~67|Piemonte~21|Puglia~75|Sardegna~88|Sicilia~82|Toscana~52|Trentino-Alto Adige~32|Umbria~55|Valle d'Aosta~23|Veneto~34\"],[\"Jamaica\",\"JM\",\"Clarendon~13|Hanover~09|Kingston~01|Manchester~12|Portland~04|Saint Andrew~02|Saint Ann~06|Saint Catherine~14|Saint Elizabeth~11|Saint James~08|Saint Mary~05|Saint Thomas~03|Trelawny~07|Westmoreland~10\"],[\"Japan\",\"JP\",\"Aichi~23|Akita~05|Aomori~02|Chiba~12|Ehime~38|Fukui~18|Fukuoka~40|Fukushima~07|Gifu~21|Gunma~10|Hiroshima~34|Hokkaido~01|Hyogo~28|Ibaraki~08|Ishikawa~17|Iwate~03|Kagawa~37|Kagoshima~46|Kanagawa~14|Kochi~39|Kumamoto~43|Kyoto~26|Mie~24|Miyagi~04|Miyazaki~45|Nagano~20|Nagasaki~42|Nara~29|Niigata~15|Oita~44|Okayama~33|Okinawa~47|Osaka~27|Saga~41|Saitama~11|Shiga~25|Shimane~32|Shizuoka~22|Tochigi~09|Tokushima~36|Tokyo~13|Tottori~31|Toyama~16|Wakayama~30|Yamagata~06|Yamaguchi~35|Yamanashi~19\"],[\"Jersey\",\"JE\",\"Jersey~undefined\"],[\"Jordan\",\"JO\",\"\\u2018Ajl\\u016bn~AJ|Al 'Aqabah~AQ|Al Balq\\u0101\\u2019~BA|Al Karak~KA|Al Mafraq~MA|Al \\u2018A\\u0305\\u015fimah~AM|A\\u0163 \\u0162af\\u012blah~AT|Az Zarq\\u0101\\u2019~AZ|Irbid~IR|Jarash~JA|Ma\\u2018\\u0101n~MN|M\\u0101dab\\u0101~MD\"],[\"Kazakhstan\",\"KZ\",\"Almaty~ALA|Aqmola~AKM|Aqtobe~AKT|Astana~AST|Atyrau~ATY|Batys Qazaqstan~ZAP|Bayqongyr~undefined|Mangghystau~MAN|Ongtustik Qazaqstan~YUZ|Pavlodar~PAV|Qaraghandy~KAR|Qostanay~KUS|Qyzylorda~KZY|Shyghys Qazaqstan~VOS|Soltustik Qazaqstan~SEV|Zhambyl~ZHA\"],[\"Kenya\",\"KE\",\"Baringo~01|Bomet~02|Bungoma~03|Busia~04|Eleyo/Marakwet~05|Embu~06|Garissa~07|Homa Bay~08|Isiolo~09|Kajiado~10|Kakamega~11|Kericho~12|Kiambu~13|Kilifi~14|Kirinyaga~15|Kisii~16|Kisumu~17|Kitui~18|Kwale~19|Laikipia~20|Lamu~21|Machakos~22|Makueni~23|Mandera~24|Marsabit~25|Meru~26|Migori~27|Mombasa~28|Murang'a~29|Nairobi City~30|Nakuru~31|Nandi~32|Narok~33|Nyamira~34|Nyandarua~35|Nyeri~36|Samburu~37|Siaya~38|Taita/Taveta~39|Tana River~40|Tharaka-Nithi~41|Trans Nzoia~42|Turkana~43|Uasin Gishu~44|Vihiga~45|Wajir~46|West Pokot~47\"],[\"Kiribati\",\"KI\",\"Abaiang~undefined|Abemama~undefined|Aranuka~undefined|Arorae~undefined|Banaba~undefined|Beru~undefined|Butaritari~undefined|Central Gilberts~undefined|Gilbert Islands~G|Kanton~undefined|Kiritimati~undefined|Kuria~undefined|Line Islands~L|Maiana~undefined|Makin~undefined|Marakei~undefined|Nikunau~undefined|Nonouti~undefined|Northern Gilberts~undefined|Onotoa~undefined|Phoenix Islands~P|Southern Gilberts~undefined|Tabiteuea~undefined|Tabuaeran~undefined|Tamana~undefined|Tarawa~undefined|Teraina~undefined\"],[\"Korea, Democratic People's Republic of\",\"KP\",\"Chagang-do (Chagang Province)~04|Hamgyong-bukto (North Hamgyong Province)~09|Hamgyong-namdo (South Hamgyong Province)~08|Hwanghae-bukto (North Hwanghae Province)~06|Hwanghae-namdo (South Hwanghae Province)~05|Kangwon-do (Kangwon Province)~07|Nas\\u014fn (Najin-S\\u014fnbong)~13|P'yongan-bukto (North P'yongan Province)~03|P'yongan-namdo (South P'yongan Province)~02|P'yongyang-si (P'yongyang City)~01|Yanggang-do (Yanggang Province)~10\"],[\"Korea, Republic of\",\"KR\",\"Ch'ungch'ongbuk-do~43|Ch'ungch'ongnam-do~44|Cheju-do~49|Chollabuk-do~45|Chollanam-do~46|Inch'on-Kwangyokhi~28|Kang-won-do~42|Kwangju-Kwangyokshi~29|Kyonggi-do~41|Kyongsangbuk-do~47|Kyongsangnam-do~48|Pusan-Kwangyokshi~26|Seoul-T'ukpyolshi~11|Sejong~50|Taegu-Kwangyokshi~27|Taejon-Kwangyokshi~30|Ulsan-Kwangyokshi~31\"],[\"Kosovo\",\"XK\",\"Farizaj~FZ|Gjakova~GK|Gjilan~GL|Mitrovica~MI|Peja/Pe\\u0107~PE|Pristina~PR|Prizren~PZ\"],[\"Kuwait\",\"KW\",\"Al A\\u1e29madi~AH|Al Farw\\u0101n\\u012byah~FA|Al Jahr\\u0101\\u2019~JA|Al \\u2018\\u0100\\u015fimah~KU|\\u1e28awall\\u012b~HA|Mub\\u0101rak al Kabir~MU\"],[\"Kyrgyzstan\",\"KG\",\"Batken Oblasty~B|Bishkek Shaary~GB|Chuy Oblasty (Bishkek)~C|Jalal-Abad Oblasty~J|Naryn Oblasty~N|Osh Oblasty~O|Talas Oblasty~T|Ysyk-Kol Oblasty (Karakol)~Y\"],[\"Laos\",\"LA\",\"Attapu~AT|Bok\\xe8o~BK|Bolikhamxai~BL|Champasak~CH|Houaphan~HO|Khammouan~KH|Louang Namtha~LM|Louangphabang~LP|Oud\\xf4mxai~OU|Ph\\xf4ngsali~PH|Salavan~SL|Savannakh\\xe9t~SV|Vientiane~VI|Xaignabouli~XA|X\\xe9kong~XE|Xaisomboun~XS|Xiangkhouang~XI\"],[\"Latvia\",\"LV\",\"Aglona~001|Aizkraukle~002|Aizpute~003|Akn\\u012bste~004|Aloja~005|Alsunga~06|Al\\u016bksne~007|Amata~008|Ape~009|Auce~010|\\u0100da\\u017ei~011|Bab\\u012bte~012|Baldone~013|Baltinava~014|Balvi~015|Bauska~016|Bever\\u012bna~017|Broc\\u0113ni~018|Burtnieki~019|Carnikava~020|Cesvaine~021|C\\u0113sis~022|Cibla~023|Dagda~024|Daugavpils~025|Daugavpils (City)~DGV|Dobele~026|Dundaga~027|Durbe~028|Engure~029|\\u0112rg\\u013ci~030|Garkalne~031|Grobi\\u0146a~032|Gulbene~033|Iecava~034|Ik\\u0161\\u0137ile~035|Il\\u016bkste~036|In\\u010dukalns~037|Jaunjelgava~038|Jaunpiebalga~039|Jaunpils~040|Jelgava~041|Jelgava (City)~JEL|J\\u0113kabpils~042|J\\u0113kabpils (City)~JKB|J\\u016brmala (City)~JUR|Kandava~043|K\\u0101rsava~044|Koc\\u0113ni~045|Koknese~046|Kr\\u0101slava~047|Krimulda~048|Krustpils~049|Kuld\\u012bga~050|\\u0136egums~051|\\u0136ekava~052|Lielv\\u0101rde~053|Liep\\u0101ja~LPX|Limba\\u017ei~054|L\\u012bgatne~055|L\\u012bv\\u0101ni~056|Lub\\u0101na~057|Ludza~058|Madona~059|Mazsalaca~060|M\\u0101lpils~061|M\\u0101rupe~062|M\\u0113rsrags~063|Nauk\\u0161\\u0113ni~064|Nereta~065|N\\u012bca~066|Ogre~067|Olaine~068|Ozolnieki~069|P\\u0101rgauja~070|P\\u0101vilosta~071|P\\u013cavi\\u0146as~072|Prei\\u013ci~073|Priekule~074|Prieku\\u013ci~075|Rauna~076|R\\u0113zekne~077|R\\u0113zekne (City)~REZ|Riebi\\u0146i~078|R\\u012bga~RIX|Roja~079|Ropa\\u017ei~080|Rucava~081|Rug\\u0101ji~082|Rund\\u0101le~083|R\\u016bjiena~084|Sala~085|Salacgr\\u012bva~086|Salaspils~087|Saldus~088|Saulkrasti~089|S\\u0113ja~090|Sigulda~091|Skr\\u012bveri~092|Skrunda~093|Smiltene~094|Stopi\\u0146i~095|Stren\\u010di~096|Talsi~097|T\\u0113rvete~098|Tukums~099|Vai\\u0146ode~100|Valka~101|Valmiera~VMR|Varak\\u013c\\u0101ni~102|V\\u0101rkava~103|Vecpiebalga~104|Vecumnieki~105|Ventspils~106|Ventspils (City)~VEN|Vies\\u012bte~107|Vi\\u013caka~108|Vi\\u013c\\u0101ni~109|Zilupe~110\"],[\"Lebanon\",\"LB\",\"Aakk\\xe2r~AK|Baalbelk-Hermel~BH|B\\xe9qaa~BI|Beyrouth~BA|Liban-Nord~AS|Liban-Sud~JA|Mont-Liban~JL|Nabat\\xeey\\xe9~NA\"],[\"Lesotho\",\"LS\",\"Berea~D|Butha-Buthe~B|Leribe~C|Mafeteng~E|Maseru~A|Mohales Hoek~F|Mokhotlong~J|Qacha's Nek~H|Quthing~G|Thaba-Tseka~K\"],[\"Liberia\",\"LR\",\"Bomi~BM|Bong~BG|Gbarpolu~GP|Grand Bassa~GB|Grand Cape Mount~CM|Grand Gedeh~GG|Grand Kru~GK|Lofa~LO|Margibi~MG|Maryland~MY|Montserrado~MO|Nimba~NI|River Cess~RI|River Geee~RG|Sinoe~SI\"],[\"Libya\",\"LY\",\"Al Bu\\u0163n\\u0101n~BU|Al Jabal al Akh\\u1e11ar~JA|Al Jabal al Gharb\\u012b~JG|Al Jaf\\u0101rah~JI|Al Jufrah~JU|Al Kufrah~FK|Al Marj~MJ|Al Marquab~MB|Al W\\u0101\\u1e29\\u0101t~WA|An Nuqa\\u0163 al Khams~NQ|Az Z\\u0101wiyah~ZA|Bangh\\u0101z\\u012b~BA|Darnah~DR|Gh\\u0101t~GH|Mi\\u015fr\\u0101tah~MI|Murzuq~MQ|N\\u0101l\\u016bt~NL|Sabh\\u0101~SB|Surt~SR|\\u0162ar\\u0101bulus~TB|Yafran~WD|W\\u0101d\\u012b ash Sh\\u0101\\u0163i\\u02be~WS\"],[\"Liechtenstein\",\"LI\",\"Balzers~01|Eschen~02|Gamprin~03|Mauren~04|Planken~05|Ruggell~06|Schaan~07|Schellenberg~08|Triesen~09|Triesenberg~10|Vaduz~11\"],[\"Lithuania\",\"LT\",\"Alytaus~AL|Kauno~KU|Klaip\\u0117dos~KL|Marijampol\\u0117s~MR|Panev\\u0117\\u017eio~PN|\\u0160iauli\\u0173~SA|Taurag\\u0117s~TA|Tel\\u0161i\\u0173~TE|Utenos~UT|Vilniaus~VL\"],[\"Luxembourg\",\"LU\",\"Capellen~CA|Clevaux~CL|Diekirch~DI|Echternach~EC|Esch-sur-Alzette~ES|Grevenmacher~GR|Luxembourg~LU|Mersch~ME|Redange~RD|Remich~RM|Vianden~VD|Wiltz~WI\"],[\"Macao\",\"MO\",\"Macao~undefined\"],[\"Macedonia, Republic of\",\"MK\",\"Ara\\u010dinovo~02|Berovo~03|Bitola~04|Bogdanci~05|Bogovinje~06|Bosilovo~07|Brvenica~08|Centar \\u017dupa~78|\\u010ca\\u0161ka~80|\\u010ce\\u0161inovo-Oble\\u0161evo~81|\\u010cu\\u010der Sandevo~82|Debar~21|Debarca~22|Del\\u010devo~23|Demir Hisar~25|Demir Kapija~24|Doran~26|Dolneni~27|Gevgelija~18|Gostivar~19|Gradsko~20|Ilinden~34|Jegunovce~35|Karbinci~37|Kavadarci~36|Ki\\u010devo~40|Ko\\u010dani~42|Kon\\u010de~41|Kratovo~43|Kriva Palanka~44|Krivoga\\u0161tani~45|Kru\\u0161evo~46|Kumanovo~47|Lipkovo~48|Lozovo~49|Makedonska Kamenica~51|Makedonski Brod~52|Mavrovo i Rostu\\u0161a~50|Mogila~53|Negotino~54|Novaci~55|Novo Selo~56|Ohrid~58|Peh\\u010devo~60|Petrovec~59|Plasnica~61|Prilep~62|Probi\\u0161tip~63|Radovi\\u0161~|Rankovce~65|Resen~66|Rosoman~67|Skopje~85|Sopi\\u0161te~70|Staro Nagori\\u010dane~71|Struga~72|Strumica~73|Studeni\\u010dani~74|Sveti Nikole~69|\\u0160tip~83|Tearce~75|Tetovo~76|Valandovo~10|Vasilevo~11|Veles~13|Vev\\u010dani~12|Vinica~14|Vrap\\u010di\\u0161te~16|Zelenikovo~32|Zrnovci~33|\\u017delino~30\"],[\"Madagascar\",\"MG\",\"Antananarivo~T|Antsiranana~D|Fianarantsoa~F|Mahajanga~M|Toamasina~A|Toliara~U\"],[\"Malawi\",\"MW\",\"Balaka~BA|Blantyre~BL|Chikwawa~CK|Chiradzulu~CR|Chitipa~CT|Dedza~DE|Dowa~DO|Karonga~KR|Kasungu~KS|Likoma~LK|Lilongwe~LI|Machinga~MH|Mangochi~MG|Mchinji~MC|Mulanje~MU|Mwanza~MW|Mzimba~MZ|Nkhata Bay~NE|Nkhotakota~NB|Nsanje~NS|Ntcheu~NU|Ntchisi~NI|Phalombe~PH|Rumphi~RU|Salima~SA|Thyolo~TH|Zomba~ZO\"],[\"Malaysia\",\"MY\",\"Johor~01|Kedah~02|Kelantan~03|Melaka~04|Negeri Sembilan~05|Pahang~06|Perak~08|Perlis~09|Pulau Pinang~07|Sabah~12|Sarawak~13|Selangor~10|Terengganu~11|Wilayah Persekutuan (Kuala Lumpur)~14|Wilayah Persekutuan (Labuan)~15|Wilayah Persekutuan (Putrajaya)~16\"],[\"Maldives\",\"MV\",\"Alifu Alifu~02|Alifu Dhaalu~00|Baa~20|Dhaalu~17|Faafu~14|Gaafu Alifu~27|Gaafu Dhaalu~28|Gnaviyani~29|Haa Alifu~07|Haa Dhaalu~23|Kaafu~26|Laamu~05|Lhaviyani~03|Mal\\xe9~MLE|Meemu~12|Noonu~25|Raa~13|Seenu~01|Shaviyani~24|Thaa~08|Vaavu~04\"],[\"Mali\",\"ML\",\"Bamako~BKO|Gao~7|Kayes~1|Kidal~8|Koulikoro~2|Mopti~5|Segou~4|Sikasso~3|Tombouctou~6|Taoud\\xe9nit~9|M\\xe9naka~10\"],[\"Malta\",\"MT\",\"Attard~01|Balzan~02|Birgu~03|Birkirkara~04|Bir\\u017cebbu\\u0121a~05|Bormla~06|Dingli~07|Fgura~08|Floriana~09|Fontana~10|Guda~11|G\\u017cira~12|G\\u0127ajnsielem~13|G\\u0127arb~14|G\\u0127arg\\u0127ur~15|G\\u0127asri~16|G\\u0127axaq~17|\\u0126amrun~18|Iklin~19|Isla~20|Kalkara~21|Ker\\u010bem~22|Kirkop~23|Lija~24|Luqa~25|Marsa~26|Marsaskala~27|Marsaxlokk~28|Mdina~29|Mellie\\u0127a~30|M\\u0121arr~31|Mosta~32|Mqabba~33|Msida~34|Mtarfa~35|Munxar~36|Nadur~37|Naxxar~38|Paola~39|Pembroke~40|Piet\\xe0~41|Qala~42|Qormi~43|Qrendi~44|Rabat G\\u0127awdex~45|Rabat Malta~46|Safi~47|San \\u0120iljan~48|San \\u0120wann~49|San Lawrenz~50|San Pawl il-Ba\\u0127ar~51|Sannat~52|Santa Lu\\u010bija~53|Santa Venera~54|Si\\u0121\\u0121iewi~55|Sliema~56|Swieqi~57|Tai Xbiex~58|Tarzien~59|Valletta~60|Xag\\u0127ra~61|Xewkija~62|Xg\\u0127ajra~63|\\u017babbar~64|\\u017bebbu\\u0121 G\\u0127awde~65|\\u017bebbu\\u0121 Malta~66|\\u017bejtun~67|\\u017burrieq~68\"],[\"Marshall Islands\",\"MH\",\"Ailinglaplap~ALL|Ailuk~ALK|Arno~ARN|Aur~AUR|Bikini and Kili~KIL|Ebon~EBO|Jabat~JAB|Jaluit~JAL|Kwajalein~KWA|Lae~LAE|Lib~LIB|Likiep~LIK|Majuro~MAJ|Maloelap~MAL|Mejit~MEJ|Namdrik~NMK|Namu~NMU|Rongelap~RON|Ujae~UJA|Utrik~UTI|Wotho~WTH|Wotje~WTJ\"],[\"Martinique\",\"MQ\",\"Martinique~undefined\"],[\"Mauritania\",\"MR\",\"Adrar~07|Assaba~03|Brakna~05|Dakhlet Nouadhibou~08|Gorgol~04|Guidimaka~10|Hodh Ech Chargui~01|Hodh El Gharbi~02|Inchiri~12|Nouakchott Nord~14|Nouakchott Ouest~13|Nouakchott Sud~15|Tagant~09|Tiris Zemmour~11|Trarza~06\"],[\"Mauritius\",\"MU\",\"Agalega Islands~AG|Beau Bassin-Rose Hill~BR|Black River~BL|Cargados Carajos Shoals~CC|Curepipe~CU|Flacq~FL|Grand Port~GP|Moka~MO|Pamplemousses~PA|Plaines Wilhems~PW|Port Louis (City)~PU|Port Louis~PL|Riviere du Rempart~RR|Rodrigues Island~RO|Savanne~SA|Vacoas-Phoenix~CP\"],[\"Mayotte\",\"YT\",\"Dzaoudzi~01|Pamandzi~02|Mamoudzou~03|Dembeni~04|Bandr\\xe9l\\xe9~05|Kani-K\\xe9li~06|Bou\\xe9ni~07|Chirongui~08|Sada~09|Ouangani~10|Chiconi~11|Tsingoni~12|M'Tsangamouji~13|Acoua~14|Mtsamboro~15|Bandraboua~16|Koungou~17\"],[\"Mexico\",\"MX\",\"Aguascalientes~AGU|Baja California~BCN|Baja California Sur~BCS|Campeche~CAM|Ciudad de M\\xe9xico~DIF|Chiapas~CHP|Chihuahua~CHH|Coahuila de Zaragoza~COA|Colima~COL|Durango~DUR|Estado de M\\xe9xico~MEX|Guanajuato~GUA|Guerrero~GRO|Hidalgo~HID|Jalisco~JAL|Michoac\\xe1n de Ocampo~MIC|Morelos~MOR|Nayarit~NAY|Nuevo Le\\xf3n~NLE|Oaxaca~OAX|Puebla~PUE|Quer\\xe9taro de Arteaga~QUE|Quintana Roo~ROO|San Luis Potos\\xed~SLP|Sinaloa~SIN|Sonora~SON|Tabasco~TAB|Tamaulipas~TAM|Tlaxcala~TLA|Veracruz~VER|Yucat\\xe1n~YUC|Zacatecas~ZAC\"],[\"Micronesia, Federated States of\",\"FM\",\"Chuuk (Truk)~TRK|Kosrae~KSA|Pohnpei~PNI|Yap~YAP\"],[\"Moldova\",\"MD\",\"Aenii Noi~AN|Basarabeasca~BS|B\\u0103l\\u021bi~BA|Bender~BD|Briceni~BR|Cahul~CA|Cantemir~CT|C\\u0103l\\u0103ra\\u0219i~CL|C\\u0103u\\u0219eni~CS|Chi\\u0219in\\u0103u~CU|Cimi\\u0219lia~CM|Criuleni~CR|Dondu\\u0219eni~DO|Drochia~DR|Dub\\u0103sari~DU|Edine\\u021b~ED|F\\u0103le\\u0219ti~FA|Flore\\u0219ti~FL|G\\u0103g\\u0103uzia~GA|Glodeni~GL|H\\xeence\\u0219ti~HI|Ialoveni~IA|Leova~LE|Nisporeni~NI|Ocni\\u021ba~OC|Orhei~OR|Rezina~RE|R\\xee\\u0219cani~RI|S\\xeengerei~SI|Soroca~SO|St\\xe2nga Nistrului~SN|Str\\u0103\\u0219eni~ST|\\u0218old\\u0103ne\\u0219ti~SD|\\u0218tefan Vod\\u0103~SV|Taraclia~TA|Telene\\u0219ti~TE|Ungheni~UN\"],[\"Monaco\",\"MC\",\"Colle~CL|Condamine~CO|Fontvieille~FO|Gare~GA|Jardin Exotique~JE|Larvotto~LA|Malbousquet~MA|Monaco-Ville~MO|Moneghetti~MG|Monte-Carlo~MC|Moulins~MU|Port-Hercule~PH|Saint-Roman~SR|Sainte-D\\xe9vote~SD|Source~SO|Sp\\xe9lugues~SP|Vallon de la Rousse~VR\"],[\"Mongolia\",\"MN\",\"Arhangay~073|Bayan-Olgiy~071|Bayanhongor~069|Bulgan~067|Darhan~037|Dornod~061|Dornogovi~063|Dundgovi~059|Dzavhan~057|Govi-Altay~065|Govi-Sumber~064|Hovd~043|Hovsgol~041|Omnogovi~053|Ovorhangay~055|Selenge~049|Suhbaatar~051|Tov~047|Ulaanbaatar~1|Uvs~046\"],[\"Montenegro\",\"ME\",\"Andrijevica~01|Bar~02|Berane~03|Bijelo Polje~04|Budva~05|Cetinje~06|Danilovgrad~07|Gusinje~22|Herceg Novi~08|Kola\\u0161in~09|Kotor~10|Mojkovac~11|Nik\\u0161i\\u0107~12|Petnica~23|Plav~13|Plu\\u017eine~14|Pljevlja~15|Podgorica~16|Ro\\u017eaje~17|\\u0160avnik~18|Tivat~19|Ulcinj~20|\\u017dabljak~21\"],[\"Montserrat\",\"MS\",\"Saint Anthony~undefined|Saint Georges~undefined|Saint Peter's~undefined\"],[\"Morocco\",\"MA\",\"Tanger-T\\xe9touan-Al Hoce\\xefma~MA-01|L'Oriental~MA-02|F\\xe8s-Mekn\\xe8s~MA-03|Rabat-Sal\\xe9-K\\xe9nitra~MA-04|B\\xe9ni Mellal-Kh\\xe9nifra~MA-05|Casablanca-Settat~MA-06|Marrakech-Safi~MA-07|Dr\\xe2a-Tafilalet~MA-08|Souss-Massa~MA-09|Guelmim-Oued Noun~MA-10|La\\xe2youne-Sakia El Hamra~MA-11|Dakhla-Oued Ed-Dahab~MA-12\"],[\"Mozambique\",\"MZ\",\"Cabo Delgado~P|Gaza~G|Inhambane~I|Manica~B|Maputo~L|Maputo (City)~MPM|Nampula~N|Niassa~A|Sofala~S|Tete~T|Zambezia~Q\"],[\"Myanmar\",\"MM\",\"Ayeyarwady~07|Bago~02|Chin~14|Kachin~11|Kayah~12|Kayin~13|Magway~03|Mandalay~04|Mon~15|Nay Pyi Taw~18|Rakhine~16|Sagaing~01|Shan~17|Tanintharyi~05|Yangon~06\"],[\"Namibia\",\"NA\",\"Erongo~ER|Hardap~HA|Kavango East~KE|Kavango West~KW|Karas~KA|Khomas~KH|Kunene~KU|Ohangwena~OW|Omaheke~OH|Omusati~OS|Oshana~ON|Oshikoto~OT|Otjozondjupa~OD|Zambezi~CA\"],[\"Nauru\",\"NR\",\"Aiwo~01|Anabar~02|Anetan~03|Anibare~04|Baiti~05|Boe~06|Buada~07|Denigomodu~08|Ewa~09|Ijuw~10|Meneng~11|Nibok~12|Uaboe~13|Yaren~14\"],[\"Nepal\",\"NP\",\"Province No. 1~1|Province No. 2~2|Bagmati Province~3|Gandaki Province~4|Lumbini Province~5|Karnali Province~6|Sudurpashchim~7\"],[\"Netherlands\",\"NL\",\"Drenthe~DR|Flevoland~FL|Friesland~FR|Gelderland~GE|Groningen~GR|Limburg~LI|Noord-Brabant~NB|Noord-Holland~NH|Overijssel~OV|Utrecht~UT|Zeeland~ZE|Zuid-Holland~ZH\"],[\"New Caledonia\",\"NC\",\"Iles Loyaute~undefined|Nord~undefined|Sud~undefined\"],[\"New Zealand\",\"NZ\",\"Auckland~AUK|Bay of Plenty~BOP|Canterbury~CAN|Gisborne~GIS|Hawke's Bay~HKB|Marlborough~MBH|Manawatu-Wanganui~MWT|Northland~NTL|Nelson~NSN|Otago~OTA|Southland~STL|Taranaki~TKI|Tasman~TAS|Waikato~WKO|Wellington~WGN|West Coast~WTC|Chatham Islands Territory~CIT\"],[\"Nicaragua\",\"NI\",\"Boaco~BO|Carazo~CA|Chinandega~CI|Chontales~CO|Estel\\xed~ES|Granada~GR|Jinotega~JI|Le\\xf3n~LE|Madriz~MD|Managua~MN|Masaya~MS|Matagalpa~MT|Nueva Segovia~NS|R\\xedo San Juan~SJ|Rivas~RI|Atl\\xe1ntico Norte~AN|Atl\\xe1ntico Sur~AS\"],[\"Niger\",\"NE\",\"Agadez~1|Diffa~2|Dosso~3|Maradi~4|Niamey~8|Tahoua~5|Tillab\\xe9ri~6|Zinder~7\"],[\"Nigeria\",\"NG\",\"Abia~AB|Abuja Federal Capital Territory~FC|Adamawa~AD|Akwa Ibom~AK|Anambra~AN|Bauchi~BA|Bayelsa~BY|Benue~BE|Borno~BO|Cross River~CR|Delta~DE|Ebonyi~EB|Edo~ED|Ekiti~EK|Enugu~EN|Gombe~GO|Imo~IM|Jigawa~JI|Kaduna~KD|Kano~KN|Katsina~KT|Kebbi~KE|Kogi~KO|Kwara~KW|Lagos~LA|Nassarawa~NA|Niger~NI|Ogun~OG|Ondo~ON|Osun~OS|Oyo~OY|Plateau~PL|Rivers~RI|Sokoto~SO|Taraba~TA|Yobe~YO|Zamfara~ZA\"],[\"Niue\",\"NU\",\"Niue~undefined\"],[\"Norfolk Island\",\"NF\",\"Norfolk Island~undefined\"],[\"Northern Mariana Islands\",\"MP\",\"Northern Islands~undefined|Rota~undefined|Saipan~undefined|Tinian~undefined\"],[\"Norway\",\"NO\",\"Akershus~02|Aust-Agder~09|Buskerud~06|Finnmark~20|Hedmark~04|Hordaland~12|M\\xf8re og Romsdal~15|Nordland~18|Nord-Tr\\xf8ndelag~17|Oppland~05|Oslo~03|Rogaland~11|Sogn og Fjordane~14|S\\xf8r-Tr\\xf8ndelag~16|Telemark~08|Troms~19|Vest-Agder~10|Vestfold~07|\\xd8stfold~01|Jan Mayen~22|Svalbard~21\"],[\"Oman\",\"OM\",\"Ad Dakhiliyah~DA|Al Buraymi~BU|Al Wusta~WU|Az Zahirah~ZA|Janub al Batinah~BS|Janub ash Sharqiyah~SS|Masqat~MA|Musandam~MU|Shamal al Batinah~BJ|Shamal ash Sharqiyah~SJ|Zufar~ZU\"],[\"Pakistan\",\"PK\",\"\\u0100z\\u0101d Kashm\\u012br~JK|Bal\\u014dchist\\u0101n~BA|Gilgit-Baltist\\u0101n~GB|Isl\\u0101m\\u0101b\\u0101d~IS|Kha\\u012bbar Pakht\\u016bnkhw\\u0101s~KP|Punj\\u0101b~PB|Sindh~SD|Federally Administered Tribal Areas~TA\"],[\"Palau\",\"PW\",\"Aimeliik~002|Airai~004|Angaur~010|Hatobohei~050|Kayangel~100|Koror~150|Melekeok~212|Ngaraard~214|Ngarchelong~218|Ngardmau~222|Ngatpang~224|Ngchesar~226|Ngeremlengui~227|Ngiwal~228|Peleliu~350|Sonsoral~370\"],[\"Palestine, State of\",\"PS\",\"Ak Khal\\u012bl~HBN|Al Quds~JEM|Ar\\u012b\\u1e29\\u0101 wal Aghw\\u0101r~JRH|Bayt La\\u1e29m~BTH|Dayr al Bala\\u1e29~DEB|Ghazzah~GZA|Jan\\u012bn~JEN|Kh\\u0101n Y\\u016bnis~KYS|N\\u0101blus~NBS|Qalq\\u012byah~QQA|Rafa\\u1e29~RFH|R\\u0101m All\\u0101h wal B\\u012brah~RBH|Salf\\u012bt~SLT|Sham\\u0101l Ghazzah~NGZ|\\u0162\\u016bb\\u0101s~TBS|\\u0162\\u016blkarm~TKM\"],[\"Panama\",\"PA\",\"Bocas del Toro~1|Chiriqu\\xed~4|Cocl\\xe9~2|Col\\xf3n~3|Dari\\xe9n~5|Ember\\xe1~EM|Herrera~6|Kuna Yala~KY|Los Santos~7|Ng\\xe4be-Bugl\\xe9~NB|Panam\\xe1~8|Panam\\xe1 Oeste~10|Veraguas~9\"],[\"Papua New Guinea\",\"PG\",\"Bougainville~NSB|Central~CPM|Chimbu~CPK|East New Britain~EBR|East Sepik~ESW|Eastern Highlands~EHG|Enga~EPW|Gulf~GPK|Hela~HLA|Jiwaka~JWK|Madang~MOM|Manus~MRL|Milne Bay~MBA|Morobe~MPL|Port Moresby~NCD|New Ireland~NIK|Northern~NPP|Southern Highlands~SHM|West New Britain~WBK|West Sepik~SAN|Western~WPD|Western Highlands~WHM\"],[\"Paraguay\",\"PY\",\"Alto Paraguay~16|Alto Parana~10|Amambay~13|Asuncion~ASU|Caaguazu~5|Caazapa~6|Canindeyu~14|Central~11|Concepcion~1|Cordillera~3|Boqueron~17|Guaira~4|Itapua~7|Misiones~8|Neembucu~12|Paraguari~9|Presidente Hayes~15|San Pedro~2\"],[\"Peru\",\"PE\",\"Amazonas~AMA|Ancash~ANC|Apurimac~APU|Arequipa~ARE|Ayacucho~AYA|Cajamarca~CAJ|Callao~CAL|Cusco~CUS|Huancavelica~HUV|Huanuco~HUC|Ica~ICA|Junin~JUN|La Libertad~LAL|Lambayeque~LAM|Lima~LIM|Loreto~LOR|Madre de Dios~MDD|Moquegua~MOQ|Municipalidad Metropolitana de Lima~LMA|Pasco~PAS|Piura~PIU|Puno~PUN|San Martin~SAM|Tacna~TAC|Tumbes~TUM|Ucayali~UCA\"],[\"Philippines\",\"PH\",\"Abra~ABR|Agusan del Norte~AGN|Agusan del Sur~AGS|Aklan~AKL|Albay~ALB|Antique~ANT|Apayao~APA|Aurora~AUR|Basilan~BAS|Bataan~BAN|Batanes~BTN|Batangas~BTG|Benguet~BEN|Biliran~BIL|Bohol~BOH|Bukidnon~BUK|Bulacan~BUL|Cagayan~CAG|Camarines Norte~CAN|Camarines Sur~CAS|Camiguin~CAM|Capiz~CAP|Catanduanes~CAT|Cavite~CAV|Cebu~CEB|Compostela~COM|Cotabato~NCO|Davao del Norte~DAV|Davao del Sur~DAS|Davao Occidental~DVO|Davao Oriental~DAO|Dinagat Islands~DIN|Eastern Samar~EAS|Guimaras~GUI|Ifugao~IFU|Ilocos Norte~ILN|Ilocos Sur~ILS|Iloilo~ILI|Isabela~ISA|Kalinga~KAL|La Union~LUN|Laguna~LAG|Lanao del Norte~LAN|Lanao del Sur~LAS|Leyte~LEY|Maguindanao~MAG|Masbate~MAS|Metro Manila~00|Mindoro Occidental~MDC|Mindoro Oriental~MDR|Misamis Occidental~MSC|Misamis Oriental~MSR|Mountain Province~MOU|Negros Occidental~NEC|Negros Oriental~NER|Northern Samar~NSA|Nueva Ecija~NUE|Nueva Vizcaya~NUV|Palawan~PLW|Pampanga~PAM|Pangasinan~PAN|Quezon~QUE|Quirino~QUI|Rizal~RIZ|Romblon~ROM|Samar~WSA|Sarangani~SAR|Siquijor~SIG|Sorsogon~SOR|Southern Leyte~SLE|Sultan Kudarat~AUK|Sulu~SLU|Surigao del Norte~SUN|Surigao del Sur~SUR|Tarlac~TAR|Tawi-Tawi~TAW|Zambales~ZMB|Zamboanga del Norte~ZAN|Zamboanga del Sur~ZAS|Zamboanga Sibugay~ZSI\"],[\"Pitcairn\",\"PN\",\"Pitcairn Islands~undefined\"],[\"Poland\",\"PL\",\"Dolno\\u015bl\\u0105skie~DS|Kujawsko-pomorskie~KP|\\u0141\\xf3dzkie~LD|Lubelskie~LU|Lubuskie~LB|Ma\\u0142opolskie~MA|Mazowieckie~MZ|Opolskie~OP|Podkarpackie~PK|Podlaskie~PD|Pomorskie~PM|\\u015al\\u0105skie~SL|\\u015awi\\u0119tokrzyskie~SK|Warmi\\u0144sko-mazurskie~WN|Wielkopolskie~WP|Zachodniopomorskie~ZP\"],[\"Portugal\",\"PT\",\"A\\xe7ores~20|Aveiro~01|Beja~02|Braga~03|Bragan\\xe7a~04|Castelo Branco~05|Coimbra~06|\\xc9vora~07|Faro~08|Guarda~09|Leiria~10|Lisboa~11|Madeira~30|Portalegre~12|Porto~13|Santar\\xe9m~14|Set\\xfabal~15|Viana do Castelo~16|Vila Real~17|Viseu~18\"],[\"Puerto Rico\",\"PR\",\"Adjuntas~undefined|Aguada~undefined|Aguadilla~undefined|Aguas Buenas~undefined|Aibonito~undefined|Anasco~undefined|Arecibo~undefined|Arroyo~undefined|Barceloneta~undefined|Barranquitas~undefined|Bayamon~undefined|Cabo Rojo~undefined|Caguas~undefined|Camuy~undefined|Canovanas~undefined|Carolina~undefined|Cat~undefined|Ceiba~undefined|Ciales~undefined|Cidra~undefined|Coamo~undefined|Comerio~undefined|Corozal~undefined|Culebra~undefined|Dorado~undefined|Fajardo~undefined|Florida~undefined|Guanica~undefined|Guayama~undefined|Guayanilla~undefined|Guaynabo~undefined|Gurabo~undefined|Hatillo~undefined|Hormigueros~undefined|Humacao~undefined|Isabe~undefined|Juana Diaz~undefined|Juncos~undefined|Lajas~undefined|Lares~undefined|Las Marias~undefined|Las oiza~undefined|Luquillo~undefined|Manati~undefined|Maricao~undefined|Maunabo~undefined|Mayaguez~undefined|Moca~undefined|Morovis~undefined|Naguabo~undefined|Naranjito~undefined|Orocovis~undefined|Patillas~undefined|Penuelas~undefined|Ponce~undefined|Quebradillas~undefined|Rincon~undefined|Rio Grande~undefined|Sabana linas~undefined|San German~undefined|San Juan~undefined|San Lorenzo~undefined|San Sebastian~undefined|Santa Isabel~undefined|Toa Alta~undefined|Toa Baja~undefined|Trujillo Alto~undefined|Utuado~undefined|Vega Alta~undefined|Vega ues~undefined|Villalba~undefined|Yabucoa~undefined|Yauco~undefined\"],[\"Qatar\",\"QA\",\"Ad Daw\\u1e29ah~DA|Al Khawr wa adh Dhakh\\u012brah~KH|Al Wakrah~WA|Ar Rayy\\u0101n~RA|Ash Sham\\u0101l~MS|Az\\u0327 Za\\u0327`\\u0101yin~ZA|Umm \\u015eal\\u0101l~US\"],[\"R\\xe9union\",\"RE\",\"R\\xe9union~undefined\"],[\"Romania\",\"RO\",\"Alba~AB|Arad~AR|Arges~AG|Bacau~BC|Bihor~BH|Bistrita-Nasaud~BN|Botosani~BT|Braila~BR|Brasov~BV|Bucuresti~B|Buzau~BZ|Calarasi~CL|Caras-Severin~CS|Cluj~CJ|Constanta~CT|Covasna~CV|Dambovita~DB|Dolj~DJ|Galati~GL|Giurgiu~GR|Gorj~GJ|Harghita~HR|Hunedoara~HD|Ialomita~IL|Iasi~IS|Maramures~MM|Mehedinti~MH|Mures~MS|Neamt~NT|Olt~OT|Prahova~PH|Salaj~SJ|Satu Mare~SM|Sibiu~SB|Suceava~SV|Teleorman~TR|Timis~TM|Tulcea~TL|Valcea~VL|Vaslui~VS|Vrancea~VN\"],[\"Russian Federation\",\"RU\",\"Republic of Adygea~AD|Republic of Altai (Gorno-Altaysk)~AL|Altai Krai~ALT|Amur Oblast~AMU|Arkhangelsk Oblast~ARK|Astrakhan Oblast~AST|Republic of Bashkortostan~BA|Belgorod Oblast~BEL|Bryansk Oblast~BRY|Republic of Buryatia~BU|Chechen Republic~CE|Chelyabinsk Oblast~CHE|Chukotka Autonomous Okrug~CHU|Chuvash Republic~CU|Republic of Dagestan~DA|Republic of Ingushetia~IN|Irkutsk Oblast~IRK|Ivanovo Oblast~IVA|Jewish Autonomous Oblast~JEW|Kabardino-Balkar Republic~KB|Kaliningrad Oblast~KLN|Republic of Kalmykia~KL|Kaluga Oblast~KLU|Kamchatka Krai~KAM|Karachay-Cherkess Republic~KC|Republic of Karelia~KR|Khabarovsk Krai~KHA|Republic of Khakassia~KK|Khanty-Mansi Autonomous Okrug - Yugra~KHM|Kemerovo Oblast~KEM|Kirov Oblast~KIR|Komi Republic~KO|Kostroma Oblast~KOS|Krasnodar Krai~KDA|Krasnoyarsk Krai~KYA|Kurgan Oblast~KGN|Kursk Oblast~KRS|Leningrad Oblast~LEN|Lipetsk Oblast~LIP|Magadan Oblast~MAG|Mari El Republic~ME|Republic of Mordovia~MO|Moscow Oblast~MOS|Moscow~MOW|Murmansk Oblast~MU|Nenets Autonomous Okrug~NEN|Nizhny Novgorod Oblast~NIZ|Novgorod Oblast~NGR|Novosibirsk Oblast~NVS|Omsk Oblast~OMS|Orenburg Oblast~ORE|Oryol Oblast~ORL|Penza Oblast~PNZ|Perm Krai~PER|Primorsky Krai~PRI|Pskov Oblast~PSK|Rostov Oblast~ROS|Ryazan Oblast~RYA|Saint Petersburg~SPE|Sakha (Yakutia) Republic~SA|Sakhalin Oblast~SAK|Samara Oblast~SAM|Saratov Oblast~SAR|Republic of North Ossetia-Alania~NOA|Smolensk Oblast~SMO|Stavropol Krai~STA|Sverdlovsk Oblast~SVE|Tambov Oblast~TAM|Republic of Tatarstan~TA|Tomsk Oblast~TOM|Tuva Republic~TU|Tula Oblast~TUL|Tver Oblast~TVE|Tyumen Oblast~TYU|Udmurt Republic~UD|Ulyanovsk Oblast~ULY|Vladimir Oblast~VLA|Volgograd Oblast~VGG|Vologda Oblast~VLG|Voronezh Oblast~VOR|Yamalo-Nenets Autonomous Okrug~YAN|Yaroslavl Oblast~YAR|Zabaykalsky Krai~ZAB\"],[\"Rwanda\",\"RW\",\"Kigali~01|Eastern~02|Northern~03|Western~04|Southern~05\"],[\"Saint Barth\\xe9lemy\",\"BL\",\"Au Vent~02|Sous le Vent~01\"],[\"Saint Helena, Ascension and Tristan da Cunha\",\"SH\",\"Ascension~AC|Saint Helena~HL|Tristan da Cunha~TA\"],[\"Saint Kitts and Nevis\",\"KN\",\"Saint Kitts~K|Nevis~N\"],[\"Saint Lucia\",\"LC\",\"Anse-la-Raye~01|Canaries~12|Castries~02|Choiseul~03|Dennery~05|Gros Islet~06|Laborie~07|Micoud~08|Soufriere~10|Vieux Fort~11\"],[\"Saint Martin\",\"MF\",\"Saint Martin~undefined\"],[\"Saint Pierre and Miquelon\",\"PM\",\"Miquelon~undefined|Saint Pierre~undefined\"],[\"Saint Vincent and the Grenadines\",\"VC\",\"Charlotte~01|Grenadines~06|Saint Andrew~02|Saint David~03|Saint George~04|Saint Patrick~05\"],[\"Samoa\",\"WS\",\"A'ana~AA|Aiga-i-le-Tai~AL|Atua~AT|Fa'asaleleaga~FA|Gaga'emauga~GE|Gagaifomauga~GI|Palauli~PA|Satupa'itea~SA|Tuamasaga~TU|Va'a-o-Fonoti~VF|Vaisigano~VS\"],[\"San Marino\",\"SM\",\"Acquaviva~01|Borgo Maggiore~06|Chiesanuova~02|Domagnano~03|Faetano~04|Fiorentino~05|Montegiardino~08|San Marino~07|Serravalle~09\"],[\"Sao Tome and Principe\",\"ST\",\"Principe~P|Sao Tome~S\"],[\"Saudi Arabia\",\"SA\",\"'Asir~14|Al Bahah~11|Al Hudud ash Shamaliyah~08|Al Jawf~12|Al Madinah al Munawwarah~03|Al Qasim~05|Ar Riyad~01|Ash Sharqiyah~04|Ha'il~06|Jazan~09|Makkah al Mukarramah~02|Najran~10|Tabuk~07\"],[\"Senegal\",\"SN\",\"Dakar~DK|Diourbel~DB|Fatick~FK|Kaffrine~KA|Kaolack~KL|Kedougou~KE|Kolda~KD|Louga~LG|Matam~MT|Saint-Louis~SL|Sedhiou~SE|Tambacounda~TC|Thies~TH|Ziguinchor~ZG\"],[\"Serbia\",\"RS\",\"Beograd (Belgrade)~00|Borski~14|Brani\\u010devski~11|Jablani\\u010dki~23|Ju\\u017enoba\\u010dki~06|Ju\\u017enobanatski~04|Kolubarski~09|Kosovski~25|Kosovsko-Mitrova\\u010dki~28|Kosovsko-Pomoravski~29|Ma\\u010dvanski~08|Moravi\\u010dki~17|Ni\\u0161avski~20|P\\u010dinjski~24|Pe\\u0107ki~26|Pirotski~22|Podunavski~10|Pomoravski~13|Prizrenski~27|Rasinski~19|Ra\\u0161ki~18|Severnoba\\u010dki~01|Severnobanatski~03|Srednjebanatski~02|Sremski~07|\\u0160umadijski~12|Topli\\u010dki~21|Zaje\\u010darski~15|Zapadnoba\\u010dki~05|Zlatiborski~16\"],[\"Seychelles\",\"SC\",\"Anse aux Pins~01|Anse Boileau~02|Anse Etoile~03|Anse Royale~05|Anu Cap~04|Baie Lazare~06|Baie Sainte Anne~07|Beau Vallon~08|Bel Air~09|Bel Ombre~10|Cascade~11|Glacis~12|Grand'Anse Mahe~13|Grand'Anse Praslin~14|La Digue~15|La Riviere Anglaise~16|Les Mamelles~24|Mont Buxton~17|Mont Fleuri~18|Plaisance~19|Pointe La Rue~20|Port Glaud~21|Roche Caiman~25|Saint Louis~22|Takamaka~23\"],[\"Sierra Leone\",\"SL\",\"Eastern~E|Northern~N|Southern~S|Western~W\"],[\"Singapore\",\"SG\",\"Central Singapore~01|North East~02|North West~03|South East~04|South West~05\"],[\"Sint Maarten (Dutch part)\",\"SX\",\"Sint Maarten~undefined\"],[\"Slovakia\",\"SK\",\"Banskobystricky~BC|Bratislavsky~BL|Kosicky~KI|Nitriansky~NI|Presovsky~PV|Trenciansky~TC|Trnavsky~TA|Zilinsky~ZI\"],[\"Slovenia\",\"SI\",\"Ajdovscina~001|Apace~195|Beltinci~002|Benedikt~148|Bistrica ob Sotli~149|Bled~003|Bloke~150|Bohinj~004|Borovnica~005|Bovec~006|Braslovce~151|Brda~007|Brezice~009|Brezovica~008|Cankova~152|Celje~011|Cerklje na Gorenjskem~012|Cerknica~013|Cerkno~014|Cerkvenjak~153|Cirkulane~196|Crensovci~015|Crna na Koroskem~016|Crnomelj~017|Destrnik~018|Divaca~019|Dobje~154|Dobrepolje~020|Dobrna~155|Dobrova-Polhov Gradec~021|Dobrovnik~156|Dol pri Ljubljani~022|Dolenjske Toplice~157|Domzale~023|Dornava~024|Dravograd~025|Duplek~026|Gorenja Vas-Poljane~027|Gorisnica~028|Gorje~207|Gornja Radgona~029|Gornji Grad~030|Gornji Petrovci~031|Grad~158|Grosuplje~032|Hajdina~159|Hoce-Slivnica~160|Hodos~161|Horjul~162|Hrastnik~034|Hrpelje-Kozina~035|Idrija~036|Ig~037|Ilirska Bistrica~038|Ivancna Gorica~039|Izola~040|Jesenice~041|Jursinci~042|Kamnik~043|Kanal~044|Kidricevo~045|Kobarid~046|Kobilje~047|Kocevje~048|Komen~049|Komenda~164|Koper~050|Kodanjevica na Krki~197|Kostel~165|Kozje~051|Kranj~052|Kranjska Gora~053|Krizevci~166|Krsko~054|Kungota~055|Kuzma~056|Lasko~057|Lenart~058|Lendava~059|Litija~060|Ljubljana~061|Ljubno~062|Ljutomer~063|Log-Dragomer~208|Logatec~064|Loska Dolina~065|Loski Potok~066|Lovrenc na Pohorju~167|Lukovica~068|Luce~067|Majsperk~069|Makole~198|Maribor~070|Markovci~168|Medvode~071|Menges~072|Metlika~073|Mezica~074|Miklavz na Dravskem Polju~169|Miren-Kostanjevica~075|Mirna~212|Mirna Pec~170|Mislinja~076|Mokronog-Trebelno~199|Moravce~077|Moravske Toplice~078|Mozirje~079|Murska Sobota~080|Naklo~082|Nazarje~083|Nova Gorica~084|Novo Mesto~085|Odranci~086|Ormoz~087|Osilnica~088|Pesnica~089|Piran~090|Pivka~091|Podcetrtek~092|Podlehnik~172|Podvelka~093|Poljcane~200|Postojna~094|Prebold~174|Preddvor~095|Prevalje~175|Ptuj~096|Race-Fram~098|Radece~099|Radenci~100|Radlje ob Dravi~101|Radovljica~102|Ravne na Koroskem~103|Razkrizje~176|Recica ob Savinji~209|Rence-Vogrsko~201|Ribnica~104|Ribnica na Poboriu~177|Rogaska Slatina~106|Rogasovci~105|Rogatec~107|Ruse~108|Salovci~033|Selnica ob Dravi~178|Semic~109|Sempeter-Vrtojba~183|Sencur~117|Sentilj~118|Sentjernej~119|Sentjur~120|Sentrupert~211|Sevnica~110|Sezana~111|Skocjan~121|Skofja Loka~122|Skofljica~123|Slovenj Gradec~112|Slovenska Bistrica~113|Slovenske Konjice~114|Smarje pri elsah~124|Smarjeske Toplice~206|Smartno ob Paki~125|Smartno pri Litiji~194|Sodrazica~179|Solcava~180|Sostanj~126|Sredisce ob Dravi~202|Starse~115|Store~127|Straza~203|Sveta Ana~181|Sveta Trojica v Slovenskih Goricah~204|Sveta Andraz v Slovenskih Goricah~182|Sveti Jurij~116|Sveti Jurij v Slovenskih Goricah~210|Sveti Tomaz~205|Tabor~184|Tisina~010|Tolmin~128|Trbovlje~129|Trebnje~130|Trnovska Vas~185|Trzin~186|Trzic~131|Turnisce~132|Velenje~133|Velika Polana~187|Velike Lasce~134|Verzej~188|Videm~135|Vipava~136|Vitanje~137|Vodice~138|Vojnik~139|Vransko~189|Vrhnika~140|Vuzenica~141|Zagorje ob Savi~142|Zavrc~143|Zrece~144|Zalec~190|Zelezniki~146|Zetale~191|Ziri~147|Zirovnica~192|Zuzemberk~193\"],[\"Solomon Islands\",\"SB\",\"Central~CE|Choiseul~CH|Guadalcanal~GU|Honiara~CT|Isabel~IS|Makira-Ulawa~MK|Malaita~ML|Rennell and Bellona~RB|Temotu~TE|Western~WE\"],[\"Somalia\",\"SO\",\"Awdal~AW|Bakool~BK|Banaadir~BN|Bari~BR|Bay~BY|Galguduud~GA|Gedo~GE|Hiiraan~HI|Jubbada Dhexe~JD|Jubbada Hoose~JH|Mudug~MU|Nugaal~NU|Sanaag~SA|Shabeellaha Dhexe~SD|Shabeellaha Hoose~SH|Sool~SO|Togdheer~TO|Woqooyi Galbeed~WO\"],[\"South Africa\",\"ZA\",\"Eastern Cape~EC|Free State~FS|Gauteng~GT|KwaZulu-Natal~NL|Limpopo~LP|Mpumalanga~MP|Northern Cape~NC|North West~NW|Western Cape~WC\"],[\"South Georgia and South Sandwich Islands\",\"GS\",\"Bird Island~undefined|Bristol Island~undefined|Clerke Rocks~undefined|Montagu Island~undefined|Saunders Island~undefined|South Georgia~undefined|Southern Thule~undefined|Traversay Islands~undefined\"],[\"South Sudan\",\"SS\",\"Central Equatoria~CE|Eastern Equatoria~EE|Jonglei~JG|Lakes~LK|Northern Bahr el Ghazal~BN|Unity~UY|Upper Nile~NU|Warrap~WR|Western Bahr el Ghazal~BW|Western Equatoria~EW\"],[\"Spain\",\"ES\",\"Albacete~AB|Alicante~A|Almer\\xeda~AN|Araba/\\xc1lava~VI|Asturias~O|\\xc1vila~AV|Badajoz~BA|Barcelona~B|Bizkaia~BI|Burgos~BU|C\\xe1ceres~CC|C\\xe1diz~CA|Cantabria~S|Castell\\xf3n/Castell\\xf3~CS|Ceuta~CE|Ciudad Real~CR|C\\xf3rdoba~CO|A Coru\\xf1a~C|Cuenca~CU|Gipuzkoa~SS|Girona~GI|Granada~GR|Guadalajara~GU|Huelva~H|Huesca~HU|Illes Balears~PM|Ja\\xe9n~J|Le\\xf3n~LE|Lleida~L|Lugo~LU|Madrid~M|M\\xe1laga~MA|Melilla~ML|Murcia~MU|Navarra/Nafarroa~NA|Ourense~OR|Palencia~P|Las Palmas~GC|Pontevedra~PO|La Rioja~LO|Salamanca~SA|Santa Cruz de Tenerife~TF|Segovia~SG|Sevilla~SE|Soria~SO|Tarragona~T|Teruel~TE|Toledo~TO|Valencia/Val\\xe8ncia~V|Valladolid~VA|Zamora~ZA|Zaragoza~Z\"],[\"Sri Lanka\",\"LK\",\"Basnahira~1|Dakunu~3|Madhyama~2|Naegenahira~5|Sabaragamuwa~9|Uturu~4|Uturumaeda~7|Vayamba~6|Uva~8\"],[\"Sudan\",\"SD\",\"Al Bahr al Ahmar~RS|Al Jazirah~GZ|Al Khartum~KH|Al Qadarif~GD|An Nil al Abyad~NW|An Nil al Azraq~NB|Ash Shamaliyah~NO|Gharb Darfur~DW|Gharb Kurdufan~GK|Janub Darfur~DS|Janub Kurdufan~KS|Kassala~KA|Nahr an Nil~NR|Shamal Darfur~DN|Sharq Darfur~DE|Shiamal Kurdufan~KN|Sinnar~SI|Wasat Darfur Zalinjay~DC\"],[\"Suriname\",\"SR\",\"Brokopondo~BR|Commewijne~CM|Coronie~CR|Marowijne~MA|Nickerie~NI|Para~PR|Paramaribo~PM|Saramacca~SA|Sipaliwini~SI|Wanica~WA\"],[\"Swaziland\",\"SZ\",\"Hhohho~HH|Lubombo~LU|Manzini~MA|Shiselweni~SH\"],[\"Sweden\",\"SE\",\"Blekinge~K|Dalarna~W|G\\xe4vleborg~X|Gotland~I|Halland~N|J\\xe4mtland~Z|J\\xf6nk\\xf6ping~F|Kalmar~H|Kronoberg~G|Norrbotten~BD|\\xd6rebro~T|\\xd6sterg\\xf6tland~E|Sk\\xe5ne~M|S\\xf6dermanland~D|Stockholm~AB|Uppsala~C|V\\xe4rmland~S|V\\xe4sterbotten~AC|V\\xe4sternorrland~Y|V\\xe4stmanland~U|V\\xe4stra G\\xf6taland~O\"],[\"Switzerland\",\"CH\",\"Aargau~AG|Appenzell Ausserrhoden~AR|Appenzell Innerhoden~AI|Basel-Landschaft~BL|Basel-Stadt~BS|Bern~BE|Fribourg~FR|Gen\\xe8ve~GE|Glarus~GL|Graub\\xfcnden~GR|Jura~JU|Luzern~LU|Neuch\\xe2tel~NE|Nidwalden~NW|Obwalden~OW|Sankt Gallen~SG|Schaffhausen~SH|Schwyz~SZ|Solothurn~SO|Thurgau~TG|Ticino~TI|Uri~UR|Valais~VS|Vaud~VD|Zug~ZG|Z\\xfcrich~ZH\"],[\"Syrian Arab Republic\",\"SY\",\"Al Hasakah~HA|Al Ladhiqiyah~LA|Al Qunaytirah~QU|Ar Raqqah~RA|As Suwayda'~SU|Dar'a~DR|Dayr az Zawr~DY|Dimashq~DI|Halab~HL|Hamah~HM|Hims~HI|Idlib~ID|Rif Dimashq~RD|Tartus~TA\"],[\"Taiwan\",\"TW\",\"Chang-hua~CHA|Chia-i~CYQ|Hsin-chu~HSQ|Hua-lien~HUA|Kao-hsiung~KHH|Keelung~KEE|Kinmen~KIN|Lienchiang~LIE|Miao-li~MIA|Nan-t'ou~NAN|P'eng-hu~PEN|New Taipei~NWT|P'ing-tung~PING|T'ai-chung~TXG|T'ai-nan~TNN|T'ai-pei~TPE|T'ai-tung~TTT|T'ao-yuan~TAO|Yi-lan~ILA|Yun-lin~YUN\"],[\"Tajikistan\",\"TJ\",\"Dushanbe~DU|K\\u016dhistoni Badakhshon~GB|Khatlon~KT|Sughd~SU\"],[\"Tanzania, United Republic of\",\"TZ\",\"Arusha~01|Coast~19|Dar es Salaam~02|Dodoma~03|Iringa~04|Kagera~05|Kigoma~08|Kilimanjaro~09|Lindi~12|Manyara~26|Mara~13|Mbeya~14|Morogoro~16|Mtwara~17|Mwanza~18|Pemba North~06|Pemba South~10|Rukwa~20|Ruvuma~21|Shinyanga~22|Singida~23|Tabora~24|Tanga~25|Zanzibar North~07|Zanzibar Central/South~11|Zanzibar Urban/West~15\"],[\"Thailand\",\"TH\",\"Amnat Charoen~37|Ang Thong~15|Bueng Kan~38|Buri Ram~31|Chachoengsao~24|Chai Nat~18|Chaiyaphum~36|Chanthaburi~22|Chiang Mai~50|Chiang Rai~57|Chon Buri~20|Chumphon~86|Kalasin~46|Kamphaeng Phet~62|Kanchanaburi~71|Khon Kaen~40|Krabi~81|Krung Thep Mahanakhon (Bangkok)~10|Lampang~52|Lamphun~51|Loei~42|Lop Buri~16|Mae Hong Son~58|Maha Sarakham~44|Mukdahan~49|Nakhon Nayok~26|Nakhon Phathom~73|Nakhon Phanom~48|Nakhon Ratchasima~30|Nakhon Sawan~60|Nakhon Si Thammarat~80|Nan~55|Narathiwat~96|Nong Bua Lam Phu~39|Nong Khai~43|Nonthaburi~12|Pathum Thani~13|Pattani~94|Phangnga~82|Phatthalung~93|Phayao~56|Phetchabun~67|Phetchaburi~76|Phichit~66|Phitsanulok~65|Phra Nakhon Si Ayutthaya~14|Phrae~54|Phuket~83|Prachin Buri~25|Prachuap Khiri Khan~77|Ranong~85|Ratchaburi~70|Rayong~21|Roi Et~45|Sa Kaeo~27|Sakon Nakhon~47|Samut Prakan~11|Samut Sakhon~74|Samut Songkhram~75|Saraburi~19|Satun~91|Sing Buri~17|Si Sa ket~33|Songkhla~90|Sukhothai~64|Suphan Buri~72|Surat Thani~84|Surin~32|Tak~63|Trang~92|Trat~23|Ubon Ratchathani~34|Udon Thani~41|Uthai Thani~61|Uttaradit~53|Yala~95|Yasothon~35\"],[\"Timor-Leste\",\"TL\",\"Aileu~AL|Ainaro~AN|Baucau~BA|Bobonaro~BO|Cova Lima~CO|Dili~DI|Ermera~ER|Lautem~LA|Liquica~LI|Manatuto~MT|Manufahi~MF|Oecussi~OE|Viqueque~VI\"],[\"Togo\",\"TG\",\"Centre~C|Kara~K|Maritime~M|Plateaux~P|Savannes~S\"],[\"Tokelau\",\"TK\",\"Atafu~undefined|Fakaofo~undefined|Nukunonu~undefined\"],[\"Tonga\",\"TO\",\"'Eua~01|Ha'apai~02|Niuas~03|Tongatapu~04|Vava'u~05\"],[\"Trinidad and Tobago\",\"TT\",\"Arima~ARI|Chaguanas~CHA|Couva-Tabaquite-Talparo~CTT|Diefo Martin~DMN|Mayaro-Rio Claro~MRC|Penal-Debe~PED|Point Fortin~PTF|Port-of-Spain~POS|Princes Town~PRT|San Fernando~SFO|San Juan-Laventille~SJL|Sangre Grande~SGE|Siparia~SIP|Tobago~TOB|Tunapuna-Piarco~TUP\"],[\"Tunisia\",\"TN\",\"Ariana~12|Beja~31|Ben Arous~13|Bizerte~23|Gabes~81|Gafsa~71|Jendouba~32|Kairouan~41|Kasserine~42|Kebili~73|Kef~33|Mahdia~53|Medenine~82|Monastir~52|Nabeul~21|Sfax~61|Sidi Bouzid~43|Siliana~34|Sousse~51|Tataouine~83|Tozeur~72|Tunis~11|Zaghouan~22\"],[\"Turkey\",\"TR\",\"Adana~01|Adiyaman~02|Afyonkarahisar~03|Agri~04|Aksaray~68|Amasya~05|Ankara~06|Antalya~07|Ardahan~75|Artvin~08|Aydin~09|Balikesir~10|Bartin~74|Batman~72|Bayburt~69|Bilecik~11|Bingol~12|Bitlis~13|Bolu~14|Burdur~15|Bursa~16|Canakkale~17|Cankiri~18|Corum~19|Denizli~20|Diyarbakir~21|Duzce~81|Edirne~22|Elazig~23|Erzincan~24|Erzurum~25|Eskisehir~26|Gaziantep~27|Giresun~28|Gumushane~29|Hakkari~30|Hatay~31|Igdir~76|Isparta~32|Istanbul~34|Izmir~35|Kahramanmaras~46|Karabuk~78|Karaman~70|Kars~36|Kastamonu~37|Kayseri~38|Kilis~79|Kirikkale~71|Kirklareli~39|Kirsehir~40|Kocaeli~41|Konya~42|Kutahya~43|Malatya~44|Manisa~45|Mardin~47|Mersin~33|Mugla~48|Mus~49|Nevsehir~50|Nigde~51|Ordu~52|Osmaniye~80|Rize~53|Sakarya~54|Samsun~55|Sanliurfa~63|Siirt~56|Sinop~57|Sirnak~73|Sivas~58|Tekirdag~59|Tokat~60|Trabzon~61|Tunceli~62|Usak~64|Van~65|Yalova~77|Yozgat~66|Zonguldak~67\"],[\"Turkmenistan\",\"TM\",\"Ahal~A|Asgabat~S|Balkan~B|Dashoguz~D|Lebap~L|Mary~M\"],[\"Turks and Caicos Islands\",\"TC\",\"Turks and Caicos Islands~undefined\"],[\"Tuvalu\",\"TV\",\"Funafuti~FUN|Nanumanga~NMG|Nanumea~NMA|Niutao~NIT|Nui~NUI|Nukufetau~NKF|Nukulaelae~NKL|Vaitupu~VAU\"],[\"Uganda\",\"UG\",\"Abim~317|Adjumani~301|Amolatar~314|Amuria~216|Amuru~319|Apac~302|Arua~303|Budaka~217|Bududa~223|Bugiri~201|Bukedea~224|Bukwa~218|Buliisa~419|Bundibugyo~401|Bushenyi~402|Busia~202|Butaleja~219|Dokolo~318|Gulu~304|Hoima~403|Ibanda~416|Iganga~203|Isingiro~417|Jinja~204|Kaabong~315|Kabale~404|Kabarole~405|Kaberamaido~213|Kalangala~101|Kaliro~220|Kampala~102|Kamuli~205|Kamwenge~413|Kanungu~414|Kapchorwa~206|Kasese~406|Katakwi~207|Kayunga~112|Kibaale~407|Kiboga~103|Kiruhura~418|Kisoro~408|Kitgum~305|Koboko~316|Kotido~306|Kumi~208|Kyenjojo~415|Lira~307|Luwero~104|Lyantonde~116|Manafwa~221|Maracha~320|Masaka~105|Masindi~409|Mayuge~214|Mbale~209|Mbarara~410|Mityana~114|Moroto~308|Moyo~309|Mpigi~106|Mubende~107|Mukono~108|Nakapiripirit~311|Nakaseke~115|Nakasongola~109|Namutumba~222|Nebbi~310|Ntungamo~411|Oyam~321|Pader~312|Pallisa~210|Rakai~110|Rukungiri~412|Sembabule~111|Sironko~215|Soroti~211|Tororo~212|Wakiso~113|Yumbe~313\"],[\"Ukraine\",\"UA\",\"Cherkasy~71|Chernihiv~74|Chernivtsi~77|Dnipropetrovsk~12|Donetsk~14|Ivano-Frankivsk~26|Kharkiv~63|Kherson~65|Khmelnytskyi~68|Kiev~32|Kirovohrad~35|Luhansk~09|Lviv~46|Mykolaiv~48|Odessa~51|Poltava~53|Rivne~56|Sumy~59|Ternopil~61|Vinnytsia~05|Volyn~07|Zakarpattia~21|Zaporizhia~23|Zhytomyr~18|Avtonomna Respublika Krym~43|Ky\\xefv~30|Sevastopol~40\"],[\"United Arab Emirates\",\"AE\",\"Abu Dhabi~AZ|Ajman~AJ|Dubai~DU|Fujairah~FU|Ras al Khaimah~RK|Sharjah~SH|Umm Al Quwain~UQ\"],[\"United Kingdom\",\"GB\",\"Aberdeen City~ABE|Aberdeenshire~ABD|Angus~ANS|Antrim and Newtownabbey~ANN|Ards and North Down~AND|Argyll and Bute~AGB|Armagh, Banbridge and Craigavon~ABC|Barking and Dagenham~BDG|Barnet~BNE|Barnsley~BNS|Bath and North East Somerset~BAS|Bedford~BDF|Belfast~BFS|Bexley~BEX|Birmingham~BIR|Blackburn with Darwen~BBD|Blackpool~BPL|Blaenau Gwent~BGW|Bolton~BOL|Bournemouth~BMH|Bracknell Forest~BRC|Bradford~BRD|Brent~BEN|Bridgend~BGE|Brighton and Hove~BNH|Bristol, City of~BST|Bromley~BRY|Buckinghamshire~BKM|Bury~BUR|Caerphilly~CAY|Calderdale~CLD|Cambridgeshire~CAM|Camden~CMD|Cardiff~CRF|Carmarthenshire~CMN|Causeway Coast and Glens~CCG|Central Bedfordshire~CBF|Ceredigion~CGN|Cheshire East~CHE|Cheshire West and Chester~CHW|Clackmannanshire~CLK|Conwy~CWY|Cornwall~CON|Coventry~COV|Croydon~CRY|Cumbria~CMA|Darlington~DAL|Denbighshire~DEN|Derby~DER|Derbyshire~DBY|Derry and Strabane~DRS|Devon~DEV|Doncaster~DNC|Dorset~DOR|Dudley~DUD|Dumfries and Galloway~DGY|Dundee City~DND|Durham County~DUR|Ealing~EAL|East Ayrshire~EAY|East Dunbartonshire~EDU|East Lothian~ELN|East Renfrewshire~ERW|East Riding of Yorkshire~ERY|East Sussex~ESX|Edinburgh, City of~EDH|Eilean Siar~ELS|Enfield~ENF|Essex~ESS|Falkirk~FAL|Fermanagh and Omagh~FMO|Fife~FIF|Flintshire~FLN|Gateshead~GAT|Glasgow City~GLG|Gloucestershire~GLS|Greenwich~GRE|Gwynedd~GWN|Hackney~HCK|Halton~HAL|Hammersmith and Fulham~HMF|Hampshire~HAM|Haringey~HRY|Harrow~HRW|Hartlepool~HPL|Havering~HAV|Herefordshire~HEF|Hertfordshire~HRT|Highland~HLD|Hillingdon~HIL|Hounslow~HNS|Inverclyde~IVC|Isle of Anglesey~AGY|Isle of Wight~IOW|Isles of Scilly~IOS|Islington~ISL|Kensington and Chelsea~KEC|Kent~KEN|Kingston upon Hull~KHL|Kingston upon Thames~KTT|Kirklees~KIR|Knowsley~KWL|Lambeth~LBH|Lancashire~LAN|Leeds~LDS|Leicester~LCE|Leicestershire~LEC|Lewisham~LEW|Lincolnshire~LIN|Lisburn and Castlereagh~LBC|Liverpool~LIV|London, City of~LND|Luton~LUT|Manchester~MAN|Medway~MDW|Merthyr Tydfil~MTY|Merton~MRT|Mid and East Antrim~MEA|Mid Ulster~MUL|Middlesbrough~MDB|Midlothian~MLN|Milton Keynes~MIK|Monmouthshire~MON|Moray~MRY|Neath Port Talbot~NTL|Newcastle upon Tyne~NET|Newham~NWM|Newport~NWP|Newry, Mourne and Down~NMD|Norfolk~NFK|North Ayrshire~NAY|North East Lincolnshire~NEL|North Lanarkshire~NLK|North Lincolnshire~NLN|North Somerset~NSM|North Tyneside~NTY|North Yorkshire~NYK|Northamptonshire~NTH|Northumberland~NBL|Nottingham~NGM|Nottinghamshire~NTT|Oldham~OLD|Orkney Islands~ORK|Oxfordshire~OXF|Pembrokeshire~PEM|Perth and Kinross~PKN|Peterborough~PTE|Plymouth~PLY|Poole~POL|Portsmouth~POR|Powys~POW|Reading~RDG|Redbridge~RDB|Redcar and Cleveland~RCC|Renfrewshire~RFW|Rhondda, Cynon, Taff~RCT|Richmond upon Thames~RIC|Rochdale~RCH|Rotherham~ROT|Rutland~RUT|St. Helens~SHN|Salford~SLF|Sandwell~SAW|Scottish Borders, The~SCB|Sefton~SFT|Sheffield~SHF|Shetland Islands~ZET|Shropshire~SHR|Slough~SLG|Solihull~SOL|Somerset~SOM|South Ayrshire~SAY|South Gloucestershire~SGC|South Lanarkshire~SLK|South Tyneside~STY|Southampton~STH|Southend-on-Sea~SOS|Southwark~SWK|Staffordshire~STS|Stirling~STG|Stockport~SKP|Stockton-on-Tees~STT|Stoke-on-Trent~STE|Suffolk~SFK|Sunderland~SND|Surrey~SRY|Sutton~STN|Swansea~SWA|Swindon~SWD|Tameside~TAM|Telford and Wrekin~TFW|Thurrock~THR|Torbay~TOB|Torfaen~TOF|Tower Hamlets~TWH|Trafford~TRF|Vale of Glamorgan, The~VGL|Wakefield~WKF|Walsall~WLL|Waltham Forest~WFT|Wandsworth~WND|Warrington~WRT|Warwickshire~WAR|West Berkshire~WBK|West Dunbartonshire~WDU|West Lothian~WLN|West Sussex~WSX|Westminster~WSM|Wigan~WGN|Wiltshire~WIL|Windsor and Maidenhead~WNM|Wirral~WRL|Wokingham~WOK|Wolverhampton~WLV|Worcestershire~WOR|Wrexham~WRX|York~YOR\"],[\"United States\",\"US\",\"Alabama~AL|Alaska~AK|American Samoa~AS|Arizona~AZ|Arkansas~AR|California~CA|Colorado~CO|Connecticut~CT|Delaware~DE|District of Columbia~DC|Micronesia~FM|Florida~FL|Georgia~GA|Guam~GU|Hawaii~HI|Idaho~ID|Illinois~IL|Indiana~IN|Iowa~IA|Kansas~KS|Kentucky~KY|Louisiana~LA|Maine~ME|Marshall Islands~MH|Maryland~MD|Massachusetts~MA|Michigan~MI|Minnesota~MN|Mississippi~MS|Missouri~MO|Montana~MT|Nebraska~NE|Nevada~NV|New Hampshire~NH|New Jersey~NJ|New Mexico~NM|New York~NY|North Carolina~NC|North Dakota~ND|Northern Mariana Islands~MP|Ohio~OH|Oklahoma~OK|Oregon~OR|Palau~PW|Pennsylvania~PA|Puerto Rico~PR|Rhode Island~RI|South Carolina~SC|South Dakota~SD|Tennessee~TN|Texas~TX|Utah~UT|Vermont~VT|Virgin Islands~VI|Virginia~VA|Washington~WA|West Virginia~WV|Wisconsin~WI|Wyoming~WY|Armed Forces Americas~AA|Armed Forces Europe, Canada, Africa and Middle East~AE|Armed Forces Pacific~AP\"],[\"United States Minor Outlying Islands\",\"UM\",\"Baker Island~81|Howland Island~84|Jarvis Island~86|Johnston Atoll~67|Kingman Reef~89|Midway Islands~71|Navassa Island~76|Palmyra Atoll~95|Wake Island~79|Bajo Nuevo Bank~BN|Serranilla Bank~SB\"],[\"Uruguay\",\"UY\",\"Artigas~AR|Canelones~CA|Cerro Largo~CL|Colonia~CO|Durazno~DU|Flores~FS|Florida~FD|Lavalleja~LA|Maldonado~MA|Montevideo~MO|Paysand\\xfa~PA|R\\xedo Negro~RN|Rivera~RV|Rocha~RO|Salto~SA|San Jos\\xe9~SJ|Soriano~SO|Tacuaremb\\xf3~TA|Treinta y Tres~TT\"],[\"Uzbekistan\",\"UZ\",\"Toshkent shahri~TK|Andijon~AN|Buxoro~BU|Farg\\u2018ona~FA|Jizzax~JI|Namangan~NG|Navoiy~NW|Qashqadaryo (Qarshi)~QA|Samarqand~SA|Sirdaryo (Guliston)~SI|Surxondaryo (Termiz)~SU|Toshkent wiloyati~TO|Xorazm (Urganch)~XO|Qoraqalpog\\u2018iston Respublikasi (Nukus)~QR\"],[\"Vanuatu\",\"VU\",\"Malampa~MAP|P\\xe9nama~PAM|Sanma~SAM|Sh\\xe9fa~SEE|Taf\\xe9a~TAE|Torba~TOB\"],[\"Venezuela, Bolivarian Republic of\",\"VE\",\"Dependencias Federales~W|Distrito Federal~A|Amazonas~Z|Anzo\\xe1tegui~B|Apure~C|Aragua~D|Barinas~E|Bol\\xedvar~F|Carabobo~G|Cojedes~H|Delta Amacuro~Y|Falc\\xf3n~I|Gu\\xe1rico~J|Lara~K|M\\xe9rida~L|Miranda~M|Monagas~N|Nueva Esparta~O|Portuguesa~P|Sucre~R|T\\xe1chira~S|Trujillo~T|Vargas~X|Yaracuy~U|Zulia~V\"],[\"Vietnam\",\"VN\",\"\\u0110\\u1ed3ng Nai~39|\\u0110\\u1ed3ng Th\\xe1p~45|Gia Lai~30|H\\xe0 Giang~03|H\\xe0 Nam~63|H\\xe0 T\\xe2y~15|H\\xe0 T\\u0129nh~23|H\\u1ea3i D\\u01b0\\u01a1ng~61|H\\u1eadu Giang~73|H\\xf2a B\\xecnh~14|H\\u01b0ng Y\\xean~66|Kh\\xe1nh H\\xf2a~34|Ki\\xean Giang~47|Kon Tum~28|Lai Ch\\xe2u~01|L\\xe2m \\u0110\\u1ed3ng~35|L\\u1ea1ng S\\u01a1n~09|L\\xe0o Cai~02|Long An~41|Nam \\u0110\\u1ecbnh~67|Ngh\\u1ec7 An~22|Ninh B\\xecnh~18|Ninh Thu\\u1eadn~36|Ph\\xfa Th\\u1ecd~68|Ph\\xfa Y\\xean~32|Qu\\u1ea3ng B\\xecnh~24|Qu\\u1ea3ng Nam~27|Qu\\u1ea3ng Ng\\xe3i~29|Qu\\u1ea3ng Ninh~13|Qu\\u1ea3ng Tr\\u1ecb~25|S\\xf3c Tr\\u0103ng~52|S\\u01a1n La~05|T\\xe2y Ninh~37|Th\\xe1i B\\xecnh~20|Th\\xe1i Nguy\\xean~69|Thanh H\\xf3a~21|Th\\u1eeba Thi\\xean\\u2013Hu\\u1ebf~26|Ti\\u1ec1n Giang~46|Tr\\xe0 Vinh~51|Tuy\\xean Quang~07|V\\u0129nh Long~49|V\\u0129nh Ph\\xfac~70|Y\\xean B\\xe1i~06|C\\u1ea7n Th\\u01a1~CT|\\u0110\\xe0 N\\u1eb5ng~DN|H\\xe0 N\\u1ed9i~HN|H\\u1ea3i Ph\\xf2ng~HP|H\\u1ed3 Ch\\xed Minh (S\\xe0i G\\xf2n)~SG\"],[\"Virgin Islands, British\",\"VG\",\"Anegada~ANG|Jost Van Dyke~JVD|Tortola~TTA|Virgin Gorda~VGD\"],[\"Virgin Islands, U.S.\",\"VI\",\"St. Thomas~STH|St. John~SJO|St. Croix~SCR\"],[\"Wallis and Futuna\",\"WF\",\"Alo~ALO|Sigave~SIG|Wallis~WAL\"],[\"Western Sahara\",\"EH\",\"Es Smara~ESM|Boujdour~BOD|La\\xe2youne~LAA|Aousserd~AOU|Oued ed Dahab~OUD\"],[\"Yemen\",\"YE\",\"Aby\\u0101n~AB|'Adan~AD|A\\u1e11 \\u1e10\\u0101li'~DA|Al Bay\\u1e11\\u0101'~BA|Al \\u1e28udaydah~HU|Al Jawf~JA|Al Mahrah~MR|Al Ma\\u1e29w\\u012bt~MW|'Amr\\u0101n~AM|Dham\\u0101r~DH|\\u1e28a\\u1e11ramawt~HD|\\u1e28ajjah~HJ|Ibb~IB|La\\u1e29ij~LA|Ma'rib~MA|Raymah~RA|\\u015e\\u0101\\u2018dah~SD|\\u015ean\\u2018\\u0101'~SN|Shabwah~SH|T\\u0101\\u2018izz~TA\"],[\"Zambia\",\"ZM\",\"Central~02|Copperbelt~08|Eastern~03|Luapula~04|Lusaka~09|Northern~05|North-Western~06|Southern~07|Western~01\"],[\"Zimbabwe\",\"ZW\",\"Bulawayo~BU|Harare~HA|Manicaland~MA|Mashonaland Central~MC|Mashonaland East~ME|Mashonaland West~MW|Masvingo~MV|Matabeleland North~MN|Matabeleland South~MS|Midlands~MI\"]],l=\"full\",s=\"short\",d=\"|\",h=\"~\",S=function(a,n){if(!(a instanceof n))throw new TypeError(\"Cannot call a class as a function\")},A=function(){function a(a,n){for(var e=0;e<n.length;e++){var i=n[e];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(a,i.key,i)}}return function(n,e,i){return e&&a(n.prototype,e),i&&a(n,i),n}}(),c=Object.assign||function(a){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(a[i]=e[i])}return a},g=function(a,n){if(\"function\"!==typeof n&&null!==n)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof n);a.prototype=Object.create(n&&n.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(a,n):a.__proto__=n)},m=function(a,n){var e={};for(var i in a)n.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(a,i)&&(e[i]=a[i]);return e},M=function(a,n){if(!a)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!n||\"object\"!==typeof n&&\"function\"!==typeof n?a:n},b=function(a,n){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a))return function(a,n){var e=[],i=!0,r=!1,o=void 0;try{for(var t,u=a[Symbol.iterator]();!(i=(t=u.next()).done)&&(e.push(t.value),!n||e.length!==n);i=!0);}catch(l){r=!0,o=l}finally{try{!i&&u.return&&u.return()}finally{if(r)throw o}}return e}(a,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")},B=function(a){if(Array.isArray(a)){for(var n=0,e=Array(a.length);n<a.length;n++)e[n]=a[n];return e}return Array.from(a)},k=function(a,n,e,i){var r=[],o=a;return e.length>0?o=a.filter((function(a){var n=b(a,2)[1];return e.indexOf(n)>-1})):i.length>0&&(o=a.filter((function(a){var n=b(a,2)[1];return-1===i.indexOf(n)}))),n.length>0&&(n.forEach((function(a){var n=o.find((function(n){return b(n,2)[1]===a}));n&&r.push(n)})),o=o.filter((function(a){var e=b(a,2)[1];return-1===n.indexOf(e)}))),r.length?[].concat(r,B(o)):o},y=function(a){function n(a){S(this,n);var e=M(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,a));return e.state={countries:k(u,a.priorityOptions,a.whitelist,a.blacklist)},e}return g(n,a),A(n,[{key:\"getCountries\",value:function(){var a=this.props,n=a.valueType,e=a.labelType;return this.state.countries.map((function(a){var i=b(a,2),o=i[0],t=i[1];return r.a.createElement(\"option\",{value:n===s?t:o,key:t},e===s?t:o)}))}},{key:\"getDefaultOption\",value:function(){var a=this.props,n=a.showDefaultOption,e=a.defaultOptionLabel;return n?r.a.createElement(\"option\",{value:\"\",key:\"default\"},e):null}},{key:\"render\",value:function(){var a=this.props,n=a.name,e=a.id,i=a.classes,o=a.value,t=a.onChange,u=a.onBlur,l=a.disabled,s=(a.showDefaultOption,a.defaultOptionLabel,a.labelType,a.valueType,a.whitelist,a.blacklist,a.customOptions,a.priorityOptions,m(a,[\"name\",\"id\",\"classes\",\"value\",\"onChange\",\"onBlur\",\"disabled\",\"showDefaultOption\",\"defaultOptionLabel\",\"labelType\",\"valueType\",\"whitelist\",\"blacklist\",\"customOptions\",\"priorityOptions\"])),d=c({},s,{name:n,value:o,onChange:function(a){return t(a.target.value,a)},onBlur:function(a){return u(a.target.value,a)},disabled:l});return e&&(d.id=e),i&&(d.className=i),r.a.createElement(\"select\",d,this.getDefaultOption(),this.getCountries())}}]),n}(i.Component);y.propTypes={value:t.a.oneOfType([t.a.string,t.a.number]),name:t.a.string,id:t.a.string,classes:t.a.string,showDefaultOption:t.a.bool,defaultOptionLabel:t.a.oneOfType([t.a.string,t.a.number]),priorityOptions:t.a.array,onChange:t.a.func,onBlur:t.a.func,labelType:t.a.oneOf([l,s]),valueType:t.a.oneOf([l,s]),whitelist:t.a.array,blacklist:t.a.array,disabled:t.a.bool},y.defaultProps={value:\"\",name:\"rcrs-country\",id:\"\",classes:\"\",showDefaultOption:!0,defaultOptionLabel:\"Select Country\",priorityOptions:[],onChange:function(){},onBlur:function(){},labelType:l,valueType:l,whitelist:[],blacklist:[],disabled:!1};var C=function(a){function n(a){S(this,n);var e=M(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,a));return e.state={regions:e.getRegions(a.country)},e.getRegions=e.getRegions.bind(e),e}return g(n,a),A(n,[{key:\"componentDidUpdate\",value:function(a){var n=this.props.country;if(n!==a.country){var e=this.getRegions(n);this.setState({regions:[].concat(B(e),B(this.getCustomOptions(e)))})}}},{key:\"getCustomOptions\",value:function(a){var n=this.props.customOptions,e=this.getDuplicates(a);return e.length?(console.error(\"Error: Duplicate regions present: \"+e.toString()+\".\\nThe above item(s) is/are already getting added to the region dropdown by the library.\"),[]):n.map((function(a){if(a)return{regionName:a,regionShortCode:a}}))}},{key:\"getDuplicates\",value:function(a){var n=this.props,e=n.customOptions,i=n.valueType===l?\"regionName\":\"regionShortCode\";return a.filter((function(a){return-1!==e.indexOf(a[i])})).map((function(a){return a[i]}))}},{key:\"getRegions\",value:function(a){if(!a)return[];var n=this.props,e=n.countryValueType,i=n.whitelist,r=n.blacklist,o=e===l?0:1,t=[];return u.forEach((function(n){n[o]===a&&(t=n)})),t&&0!==t.length?function(a,n,e){var i=b(a,3),r=i[0],o=i[1],t=i[2],u=n.hasOwnProperty(o)?n[o]:[],l=e.hasOwnProperty(o)?e[o]:[],s=t.split(\"|\");return u.length>0&&s.length>0?s=s.filter((function(a){for(var n=0,e=u.length;n<e;n++)if(a.indexOf(u[n])>-1)return!0;return!1})):l.length>0&&s.length>0&&(s=s.filter((function(a){for(var n=0,e=l.length;n<e;n++)if(a.indexOf(l[n])>-1)return!1;return!0}))),[r,o,s.join(\"|\")]}(t,i,r)[2].split(d).map((function(a){var n=a.split(h),e=b(n,2),i=e[0],r=e[1];return{regionName:i,regionShortCode:void 0===r?null:r}})):(console.error(\"Error. Unknown country passed: \"+a+'. If you\\'re passing a country shortcode, be sure to include countryValueType=\"short\" on the RegionDropdown'),[])}},{key:\"getRegionList\",value:function(){var a=this.props,n=a.labelType,e=a.valueType;return this.state.regions.map((function(a){var i=a.regionName,o=a.regionShortCode,t=n===l?i:o,u=e===l?i:o;return r.a.createElement(\"option\",{value:u,key:i},t)}))}},{key:\"getDefaultOption\",value:function(){var a=this.props,n=a.blankOptionLabel,e=a.showDefaultOption,i=a.defaultOptionLabel;return a.country?e?r.a.createElement(\"option\",{value:\"\"},i):null:r.a.createElement(\"option\",{value:\"\"},n)}},{key:\"render\",value:function(){var a=this.props,n=a.value,e=a.country,i=a.onChange,o=a.onBlur,t=a.id,u=a.name,l=a.classes,s=a.disabled,d=(a.blankOptionLabel,a.showDefaultOption,a.defaultOptionLabel,a.labelType,a.valueType,a.countryValueType,a.disableWhenEmpty),h=(a.customOptions,m(a,[\"value\",\"country\",\"onChange\",\"onBlur\",\"id\",\"name\",\"classes\",\"disabled\",\"blankOptionLabel\",\"showDefaultOption\",\"defaultOptionLabel\",\"labelType\",\"valueType\",\"countryValueType\",\"disableWhenEmpty\",\"customOptions\"])),S=c({},h,{name:u,value:n,onChange:function(a){return i(a.target.value,a)},onBlur:function(a){return o(a.target.value,a)},disabled:s||d&&\"\"===e});return t&&(S.id=t),l&&(S.className=l),r.a.createElement(\"select\",S,this.getDefaultOption(),this.getRegionList())}}]),n}(i.PureComponent);C.propTypes={country:t.a.string,countryValueType:t.a.oneOf([l,s]),value:t.a.oneOfType([t.a.string,t.a.number]),name:t.a.string,id:t.a.string,classes:t.a.string,blankOptionLabel:t.a.string,showDefaultOption:t.a.bool,defaultOptionLabel:t.a.string,onChange:t.a.func,onBlur:t.a.func,labelType:t.a.string,valueType:t.a.string,whitelist:t.a.object,blacklist:t.a.object,disabled:t.a.bool,disableWhenEmpty:t.a.bool,customOptions:t.a.array},C.defaultProps={country:\"\",value:\"\",name:\"rcrs-region\",id:\"\",classes:\"\",blankOptionLabel:\"-\",showDefaultOption:!0,defaultOptionLabel:\"Select Region\",onChange:function(){},onBlur:function(){},countryValueType:l,labelType:l,valueType:l,whitelist:{},blacklist:{},disabled:!1,disableWhenEmpty:!1,customOptions:[]}}}]);","name":"static/js/6.a79389df.chunk.js","map":{"version":3,"sources":["static/js/6.a79389df.chunk.js"],"names":["this","push","module","exports","__webpack_require__","__webpack_exports__","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","d","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","_arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","_iterableToArrayLimit","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","CountryDropdown","RegionDropdown","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","CountryRegionData","C","classCallCheck","instance","Constructor","createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_extends","assign","source","inherits","subClass","superClass","objectWithoutProperties","indexOf","possibleConstructorReturn","ReferenceError","slicedToArray","sliceIterator","toConsumableArray","filterCountries","countries","priorityCountries","whitelist","blacklist","countriesListedFirst","filteredCountries","filter","_ref","countrySlug","_ref3","slug","find","_ref5","_ref7","concat","_Component","_this","priorityOptions","_props","valueType","labelType","map","_ref2","countryName","a","createElement","_props2","showDefaultOption","defaultOptionLabel","_props3","id","classes","_onChange","onChange","_onBlur","onBlur","disabled","arbitraryProps","customOptions","attrs","e","className","getDefaultOption","getCountries","propTypes","oneOfType","string","number","bool","array","func","oneOf","defaultProps","_PureComponent","regions","getRegions","country","bind","prevProps","defaultRegions","setState","getCustomOptions","duplicateRegions","getDuplicates","console","option","regionName","regionShortCode","regionKey","region","countryValueType","searchIndex","regionsObject","whitelistObject","blacklistObject","_regionsObject","countryCode","filteredRegions","split","join","filterRegions","regionPair","_regionPair$split","_regionPair$split2","_regionPair$split2$","label","_props4","blankOptionLabel","_props5","disableWhenEmpty","getRegionList"],"mappings":"CAACA,KAAK,4BAA8BA,KAAK,6BAA+B,IAAIC,KAAK,CAAC,CAAC,GAAG,CAEhF,IACA,SAAUC,EAAQC,EAASC,GAEjCF,EAAOC,QAAUC,EAAoB,MAK/B,IACA,SAAUF,EAAQG,EAAqBD,GAE7C,aAEA,SAASE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIvC,SAASS,EAAkBC,GACzB,OAAO,WACL,IAAIC,EAAOtB,KACPuB,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGI,MAAMH,EAAMC,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,GAGnEhB,OAAMiB,OAhCmBvB,EAAoBwB,EAAEvB,EAAqB,KAAK,WAAa,OAAOe,MAuC7F,GACA,SAAUlB,EAAQG,EAAqBD,GAE7C,aAqCA,SAASyB,EAAkBC,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,EAqBT,SAASE,EAAeN,EAAKG,GAC3B,OA5DF,SAAyBH,GACvB,GAAIK,MAAME,QAAQP,GAAM,OAAOA,EA2DxBQ,CAAgBR,IAxDzB,SAA+BA,EAAKG,GAClC,GAAsB,qBAAXM,QAA4BA,OAAOC,YAAYC,OAAOX,GAAjE,CACA,IAAIY,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKlB,EAET,IACE,IAAK,IAAiCmB,EAA7BC,EAAKjB,EAAIS,OAAOC,cAAmBG,GAAMG,EAAKC,EAAGC,QAAQ/B,QAChEyB,EAAKzC,KAAK6C,EAAG/B,QAETkB,GAAKS,EAAKV,SAAWC,GAH8CU,GAAK,IAK9E,MAAOjB,GACPkB,GAAK,EACLC,EAAKnB,EACL,QACA,IACOiB,GAAsB,MAAhBI,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIH,EAAI,MAAMC,GAIlB,OAAOH,GAgCwBO,CAAsBnB,EAAKG,IAlB5D,SAAqCiB,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAOrB,EAAkBqB,EAAGC,GACvD,IAAIC,EAAIX,OAAOY,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBjB,MAAMwB,KAAKT,GACxC,cAANE,GAAqB,2CAA2CQ,KAAKR,GAAWvB,EAAkBqB,EAAGC,QAAzG,GAYgEU,CAA4B/B,EAAKG,IATnG,WACE,MAAM,IAAI6B,UAAU,6IAQmFC,GA/DzG3D,EAAoBwB,EAAEvB,EAAqB,KAAK,WAAa,OAAqB+B,MAoE5E,IACA,SAAUlC,EAAQC,EAASC,GAQjC,IAAI4D,EAAU,SAAU7D,GACtB,aAEA,IAEIwB,EAFAsC,EAAKxB,OAAOY,UACZa,EAASD,EAAGE,eAGZC,EAA4B,oBAAX7B,OAAwBA,OAAS,GAClD8B,EAAiBD,EAAQ5B,UAAY,aACrC8B,EAAsBF,EAAQG,eAAiB,kBAC/CC,EAAoBJ,EAAQK,aAAe,gBAE/C,SAASC,EAAOC,EAAK/D,EAAKG,GAOxB,OANA0B,OAAOmC,eAAeD,EAAK/D,EAAK,CAC9BG,MAAOA,EACP8D,YAAY,EACZC,cAAc,EACdC,UAAU,IAELJ,EAAI/D,GAGb,IAEE8D,EAAO,GAAI,IACX,MAAOhD,GACPgD,EAAS,SAAgBC,EAAK/D,EAAKG,GACjC,OAAO4D,EAAI/D,GAAOG,GAItB,SAASiE,EAAKC,EAASC,EAAS5D,EAAM6D,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQ7B,qBAAqBgC,EAAYH,EAAUG,EAC/EC,EAAY7C,OAAO8C,OAAOH,EAAe/B,WACzCmC,EAAU,IAAIC,EAAQN,GAAe,IAIzC,OADAG,EAAUI,QAyLZ,SAA0BT,EAAS3D,EAAMkE,GACvC,IAAIG,EAAQC,EACZ,OAAO,SAAgBC,EAAQhF,GAC7B,GAAI8E,IAAUG,EACZ,MAAM,IAAIC,MAAM,gCAGlB,GAAIJ,IAAUK,EAAmB,CAC/B,GAAe,UAAXH,EACF,MAAMhF,EAKR,OAAOoF,IAMT,IAHAT,EAAQK,OAASA,EACjBL,EAAQ3E,IAAMA,IAED,CACX,IAAIqF,EAAWV,EAAQU,SAEvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUV,GAEnD,GAAIW,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBX,EAAQK,OAGVL,EAAQc,KAAOd,EAAQe,MAAQf,EAAQ3E,SAClC,GAAuB,UAAnB2E,EAAQK,OAAoB,CACrC,GAAIF,IAAUC,EAEZ,MADAD,EAAQK,EACFR,EAAQ3E,IAGhB2E,EAAQgB,kBAAkBhB,EAAQ3E,SACN,WAAnB2E,EAAQK,QACjBL,EAAQiB,OAAO,SAAUjB,EAAQ3E,KAGnC8E,EAAQG,EACR,IAAIY,EAASC,EAAS1B,EAAS3D,EAAMkE,GAErC,GAAoB,WAAhBkB,EAAOE,KAAmB,CAK5B,GAFAjB,EAAQH,EAAQvE,KAAO+E,EAAoBa,EAEvCH,EAAO7F,MAAQwF,EACjB,SAGF,MAAO,CACLtF,MAAO2F,EAAO7F,IACdI,KAAMuE,EAAQvE,MAES,UAAhByF,EAAOE,OAChBjB,EAAQK,EAGRR,EAAQK,OAAS,QACjBL,EAAQ3E,IAAM6F,EAAO7F,OA7PPiG,CAAiB7B,EAAS3D,EAAMkE,GAC7CF,EAcT,SAASqB,EAAStF,EAAIsD,EAAK9D,GACzB,IACE,MAAO,CACL+F,KAAM,SACN/F,IAAKQ,EAAGkC,KAAKoB,EAAK9D,IAEpB,MAAOa,GACP,MAAO,CACLkF,KAAM,QACN/F,IAAKa,IApBXvB,EAAQ6E,KAAOA,EAyBf,IAAIY,EAAyB,iBACzBiB,EAAyB,iBACzBf,EAAoB,YACpBE,EAAoB,YAGpBK,EAAmB,GAKvB,SAAShB,KAET,SAAS0B,KAET,SAASC,KAIT,IAAIC,EAAoB,GACxBvC,EAAOuC,EAAmB5C,GAAgB,WACxC,OAAOrE,QAET,IAAIkH,EAAWzE,OAAO0E,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAE/DD,GAA2BA,IAA4BnD,GAAMC,EAAOX,KAAK6D,EAAyB/C,KAGpG4C,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2B3D,UAAYgC,EAAUhC,UAAYZ,OAAO8C,OAAO0B,GAOpF,SAASM,EAAsBlE,GAC7B,CAAC,OAAQ,QAAS,UAAUmE,SAAQ,SAAU3B,GAC5CnB,EAAOrB,EAAWwC,GAAQ,SAAUhF,GAClC,OAAOb,KAAK0F,QAAQG,EAAQhF,SAkClC,SAAS4G,EAAcnC,EAAWoC,GAChC,SAASC,EAAO9B,EAAQhF,EAAKL,EAASC,GACpC,IAAIiG,EAASC,EAASrB,EAAUO,GAASP,EAAWzE,GAEpD,GAAoB,UAAhB6F,EAAOE,KAEJ,CACL,IAAIgB,EAASlB,EAAO7F,IAChBE,EAAQ6G,EAAO7G,MAEnB,OAAIA,GAA0B,kBAAVA,GAAsBmD,EAAOX,KAAKxC,EAAO,WACpD2G,EAAYlH,QAAQO,EAAM8G,SAAS1G,MAAK,SAAUJ,GACvD4G,EAAO,OAAQ5G,EAAOP,EAASC,MAC9B,SAAUiB,GACXiG,EAAO,QAASjG,EAAKlB,EAASC,MAI3BiH,EAAYlH,QAAQO,GAAOI,MAAK,SAAU2G,GAI/CF,EAAO7G,MAAQ+G,EACftH,EAAQoH,MACP,SAAU5G,GAGX,OAAO2G,EAAO,QAAS3G,EAAOR,EAASC,MAtBzCA,EAAOiG,EAAO7F,KA2BlB,IAAIkH,EA4BJ/H,KAAK0F,QA1BL,SAAiBG,EAAQhF,GACvB,SAASmH,IACP,OAAO,IAAIN,GAAY,SAAUlH,EAASC,GACxCkH,EAAO9B,EAAQhF,EAAKL,EAASC,MAIjC,OAAOsH,EAYPA,EAAkBA,EAAgB5G,KAAK6G,EAEvCA,GAA8BA,KAuGlC,SAAS5B,EAAoBF,EAAUV,GACrC,IAAIK,EAASK,EAAS1D,SAASgD,EAAQK,QAEvC,GAAIA,IAAWlE,EAAW,CAKxB,GAFA6D,EAAQU,SAAW,KAEI,UAAnBV,EAAQK,OAAoB,CAE9B,GAAIK,EAAS1D,SAAiB,SAG5BgD,EAAQK,OAAS,SACjBL,EAAQ3E,IAAMc,EACdyE,EAAoBF,EAAUV,GAEP,UAAnBA,EAAQK,QAGV,OAAOQ,EAIXb,EAAQK,OAAS,QACjBL,EAAQ3E,IAAM,IAAIiD,UAAU,kDAG9B,OAAOuC,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS1D,SAAUgD,EAAQ3E,KAEzD,GAAoB,UAAhB6F,EAAOE,KAIT,OAHApB,EAAQK,OAAS,QACjBL,EAAQ3E,IAAM6F,EAAO7F,IACrB2E,EAAQU,SAAW,KACZG,EAGT,IAAIvF,EAAO4F,EAAO7F,IAElB,OAAKC,EAODA,EAAKG,MAGPuE,EAAQU,EAAS+B,YAAcnH,EAAKC,MAEpCyE,EAAQxC,KAAOkD,EAASgC,QAOD,WAAnB1C,EAAQK,SACVL,EAAQK,OAAS,OACjBL,EAAQ3E,IAAMc,GASlB6D,EAAQU,SAAW,KACZG,GANEvF,GAxBP0E,EAAQK,OAAS,QACjBL,EAAQ3E,IAAM,IAAIiD,UAAU,oCAC5B0B,EAAQU,SAAW,KACZG,GA8CX,SAAS8B,EAAaC,GACpB,IAAIC,EAAQ,CACVC,OAAQF,EAAK,IAGX,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBpI,KAAK0I,WAAWzI,KAAKoI,GAGvB,SAASM,EAAcN,GACrB,IAAI3B,EAAS2B,EAAMO,YAAc,GACjClC,EAAOE,KAAO,gBACPF,EAAO7F,IACdwH,EAAMO,WAAalC,EAGrB,SAASjB,EAAQN,GAIfnF,KAAK0I,WAAa,CAAC,CACjBJ,OAAQ,SAEVnD,EAAYqC,QAAQW,EAAcnI,MAClCA,KAAK6I,OAAM,GAgCb,SAASxB,EAAOyB,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASzE,GAE9B,GAAI0E,EACF,OAAOA,EAAexF,KAAKuF,GAG7B,GAA6B,oBAAlBA,EAAS9F,KAClB,OAAO8F,EAGT,IAAKE,MAAMF,EAAS9G,QAAS,CAC3B,IAAIC,GAAK,EACLe,EAAO,SAASA,IAClB,OAASf,EAAI6G,EAAS9G,QACpB,GAAIkC,EAAOX,KAAKuF,EAAU7G,GAGxB,OAFAe,EAAKjC,MAAQ+H,EAAS7G,GACtBe,EAAK/B,MAAO,EACL+B,EAMX,OAFAA,EAAKjC,MAAQY,EACbqB,EAAK/B,MAAO,EACL+B,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CACLA,KAAMiD,GAMV,SAASA,IACP,MAAO,CACLlF,MAAOY,EACPV,MAAM,GA+LV,OA/kBA8F,EAAkB1D,UAAY2D,EAC9BtC,EAAO4C,EAAI,cAAeN,GAC1BtC,EAAOsC,EAA4B,cAAeD,GAClDA,EAAkBkC,YAAcvE,EAAOsC,EAA4BxC,EAAmB,qBAWtFrE,EAAQ+I,oBAAsB,SAAUC,GACtC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAO1F,YAClD,QAAO2F,IAAOA,IAASrC,GAEa,uBAAnCqC,EAAKH,aAAeG,EAAK1F,QAG5BvD,EAAQkJ,KAAO,SAAUF,GASvB,OARI1G,OAAO6G,eACT7G,OAAO6G,eAAeH,EAAQnC,IAE9BmC,EAAOI,UAAYvC,EACnBtC,EAAOyE,EAAQ3E,EAAmB,sBAGpC2E,EAAO9F,UAAYZ,OAAO8C,OAAO+B,GAC1B6B,GAOThJ,EAAQqJ,MAAQ,SAAU3I,GACxB,MAAO,CACLgH,QAAShH,IAmEb0G,EAAsBE,EAAcpE,WACpCqB,EAAO+C,EAAcpE,UAAWiB,GAAqB,WACnD,OAAOtE,QAETG,EAAQsH,cAAgBA,EAIxBtH,EAAQsJ,MAAQ,SAAUxE,EAASC,EAAS5D,EAAM6D,EAAauC,QACzC,IAAhBA,IAAwBA,EAAcxG,SAC1C,IAAIwI,EAAO,IAAIjC,EAAczC,EAAKC,EAASC,EAAS5D,EAAM6D,GAAcuC,GACxE,OAAOvH,EAAQ+I,oBAAoBhE,GAAWwE,EAC5CA,EAAK1G,OAAO7B,MAAK,SAAUyG,GAC3B,OAAOA,EAAO3G,KAAO2G,EAAO7G,MAAQ2I,EAAK1G,WAgK7CuE,EAAsBD,GACtB5C,EAAO4C,EAAI9C,EAAmB,aAM9BE,EAAO4C,EAAIjD,GAAgB,WACzB,OAAOrE,QAET0E,EAAO4C,EAAI,YAAY,WACrB,MAAO,wBAsCTnH,EAAQwJ,KAAO,SAAUC,GACvB,IAAID,EAAO,GAEX,IAAK,IAAI/I,KAAOgJ,EACdD,EAAK1J,KAAKW,GAMZ,OAHA+I,EAAKE,UAGE,SAAS7G,IACd,KAAO2G,EAAK3H,QAAQ,CAClB,IAAIpB,EAAM+I,EAAKG,MAEf,GAAIlJ,KAAOgJ,EAGT,OAFA5G,EAAKjC,MAAQH,EACboC,EAAK/B,MAAO,EACL+B,EAQX,OADAA,EAAK/B,MAAO,EACL+B,IA0CX7C,EAAQkH,OAASA,EASjB5B,EAAQpC,UAAY,CAClBI,YAAagC,EACboD,MAAO,SAAekB,GAYpB,GAXA/J,KAAKgK,KAAO,EACZhK,KAAKgD,KAAO,EAGZhD,KAAKsG,KAAOtG,KAAKuG,MAAQ5E,EACzB3B,KAAKiB,MAAO,EACZjB,KAAKkG,SAAW,KAChBlG,KAAK6F,OAAS,OACd7F,KAAKa,IAAMc,EACX3B,KAAK0I,WAAWlB,QAAQmB,IAEnBoB,EACH,IAAK,IAAIrG,KAAQ1D,KAEQ,MAAnB0D,EAAKuG,OAAO,IAAc/F,EAAOX,KAAKvD,KAAM0D,KAAUsF,OAAOtF,EAAKF,MAAM,MAC1ExD,KAAK0D,GAAQ/B,IAKrBuI,KAAM,WACJlK,KAAKiB,MAAO,EACZ,IACIkJ,EADYnK,KAAK0I,WAAW,GACLE,WAE3B,GAAwB,UAApBuB,EAAWvD,KACb,MAAMuD,EAAWtJ,IAGnB,OAAOb,KAAKoK,MAEd5D,kBAAmB,SAA2B6D,GAC5C,GAAIrK,KAAKiB,KACP,MAAMoJ,EAGR,IAAI7E,EAAUxF,KAEd,SAASsK,EAAOC,EAAKC,GAYnB,OAXA9D,EAAOE,KAAO,QACdF,EAAO7F,IAAMwJ,EACb7E,EAAQxC,KAAOuH,EAEXC,IAGFhF,EAAQK,OAAS,OACjBL,EAAQ3E,IAAMc,KAGP6I,EAGX,IAAK,IAAIvI,EAAIjC,KAAK0I,WAAW1G,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIoG,EAAQrI,KAAK0I,WAAWzG,GACxByE,EAAS2B,EAAMO,WAEnB,GAAqB,SAAjBP,EAAMC,OAIR,OAAOgC,EAAO,OAGhB,GAAIjC,EAAMC,QAAUtI,KAAKgK,KAAM,CAC7B,IAAIS,EAAWvG,EAAOX,KAAK8E,EAAO,YAC9BqC,EAAaxG,EAAOX,KAAK8E,EAAO,cAEpC,GAAIoC,GAAYC,EAAY,CAC1B,GAAI1K,KAAKgK,KAAO3B,EAAME,SACpB,OAAO+B,EAAOjC,EAAME,UAAU,GACzB,GAAIvI,KAAKgK,KAAO3B,EAAMG,WAC3B,OAAO8B,EAAOjC,EAAMG,iBAEjB,GAAIiC,GACT,GAAIzK,KAAKgK,KAAO3B,EAAME,SACpB,OAAO+B,EAAOjC,EAAME,UAAU,OAE3B,CAAA,IAAImC,EAKT,MAAM,IAAI3E,MAAM,0CAJhB,GAAI/F,KAAKgK,KAAO3B,EAAMG,WACpB,OAAO8B,EAAOjC,EAAMG,gBAQ9B/B,OAAQ,SAAgBG,EAAM/F,GAC5B,IAAK,IAAIoB,EAAIjC,KAAK0I,WAAW1G,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIoG,EAAQrI,KAAK0I,WAAWzG,GAE5B,GAAIoG,EAAMC,QAAUtI,KAAKgK,MAAQ9F,EAAOX,KAAK8E,EAAO,eAAiBrI,KAAKgK,KAAO3B,EAAMG,WAAY,CACjG,IAAImC,EAAetC,EACnB,OAIAsC,IAA0B,UAAT/D,GAA6B,aAATA,IAAwB+D,EAAarC,QAAUzH,GAAOA,GAAO8J,EAAanC,aAGjHmC,EAAe,MAGjB,IAAIjE,EAASiE,EAAeA,EAAa/B,WAAa,GAItD,OAHAlC,EAAOE,KAAOA,EACdF,EAAO7F,IAAMA,EAET8J,GACF3K,KAAK6F,OAAS,OACd7F,KAAKgD,KAAO2H,EAAanC,WAClBnC,GAGFrG,KAAK4K,SAASlE,IAEvBkE,SAAU,SAAkBlE,EAAQ+B,GAClC,GAAoB,UAAhB/B,EAAOE,KACT,MAAMF,EAAO7F,IAaf,MAVoB,UAAhB6F,EAAOE,MAAoC,aAAhBF,EAAOE,KACpC5G,KAAKgD,KAAO0D,EAAO7F,IACM,WAAhB6F,EAAOE,MAChB5G,KAAKoK,KAAOpK,KAAKa,IAAM6F,EAAO7F,IAC9Bb,KAAK6F,OAAS,SACd7F,KAAKgD,KAAO,OACa,WAAhB0D,EAAOE,MAAqB6B,IACrCzI,KAAKgD,KAAOyF,GAGPpC,GAETwE,OAAQ,SAAgBrC,GACtB,IAAK,IAAIvG,EAAIjC,KAAK0I,WAAW1G,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIoG,EAAQrI,KAAK0I,WAAWzG,GAE5B,GAAIoG,EAAMG,aAAeA,EAGvB,OAFAxI,KAAK4K,SAASvC,EAAMO,WAAYP,EAAMI,UACtCE,EAAcN,GACPhC,IAIbyE,MAAS,SAAgBxC,GACvB,IAAK,IAAIrG,EAAIjC,KAAK0I,WAAW1G,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIoG,EAAQrI,KAAK0I,WAAWzG,GAE5B,GAAIoG,EAAMC,SAAWA,EAAQ,CAC3B,IAAI5B,EAAS2B,EAAMO,WAEnB,GAAoB,UAAhBlC,EAAOE,KAAkB,CAC3B,IAAImE,EAASrE,EAAO7F,IACpB8H,EAAcN,GAGhB,OAAO0C,GAMX,MAAM,IAAIhF,MAAM,0BAElBiF,cAAe,SAAuBlC,EAAUb,EAAYC,GAa1D,OAZAlI,KAAKkG,SAAW,CACd1D,SAAU6E,EAAOyB,GACjBb,WAAYA,EACZC,QAASA,GAGS,SAAhBlI,KAAK6F,SAGP7F,KAAKa,IAAMc,GAGN0E,IAOJlG,EAnrBK,CAwrBND,EAAOC,SAEf,IACE8K,mBAAqBjH,EACrB,MAAOkH,GAWmB,kBAAfC,WACTA,WAAWF,mBAAqBjH,EAEhCoH,SAAS,IAAK,yBAAdA,CAAwCpH,KAMtC,IACA,SAAU9D,EAAQG,EAAqBD,GAE7C,aAC+BA,EAAoBwB,EAAEvB,EAAqB,KAAK,WAAa,OAAOgL,KACpEjL,EAAoBwB,EAAEvB,EAAqB,KAAK,WAAa,OAAOiL,KAE9E,IAAIC,EAAqCnL,EAAoB,GACzDoL,EAA0DpL,EAAoBgD,EAAEmI,GAChFE,EAA0CrL,EAAoB,IAC9DsL,EAA+DtL,EAAoBgD,EAAEqI,GAG1GE,EAAoB,CAAC,CAAC,cAAe,KAAM,iZAAkZ,CAAC,mBAAiB,KAAM,0MAAgL,CAAC,UAAW,KAAM,qJAA2H,CAAC,UAAW,KAAM,imBAA+iB,CAAC,iBAAkB,KAAM,wFAA+E,CAAC,UAAW,KAAM,uHAAkH,CAAC,SAAU,KAAM,wOAAgO,CAAC,WAAY,KAAM,8WAA+W,CAAC,aAAc,KAAM,iBAAkB,CAAC,sBAAuB,KAAM,6iBAA8iB,CAAC,YAAa,KAAM,gTAAkS,CAAC,UAAW,KAAM,+HAAgI,CAAC,QAAS,KAAM,YAAa,CAAC,YAAa,KAAM,+JAAgK,CAAC,UAAW,KAAM,2HAAmH,CAAC,aAAc,KAAM,8nCAA4vB,CAAC,UAAW,KAAM,ilBAA6kB,CAAC,UAAW,KAAM,oHAA+E,CAAC,aAAc,KAAM,sFAAuF,CAAC,WAAY,KAAM,+KAAgL,CAAC,UAAW,KAAM,gIAAiI,CAAC,UAAW,KAAM,0CAA2C,CAAC,SAAU,KAAM,gIAAiI,CAAC,QAAS,KAAM,sKAAiK,CAAC,UAAW,KAAM,0NAA2N,CAAC,SAAU,KAAM,mPAAoP,CAAC,UAAW,KAAM,+FAA6F,CAAC,mCAAoC,KAAM,8CAA+C,CAAC,yBAA0B,KAAM,mFAA+E,CAAC,WAAY,KAAM,kHAAmH,CAAC,gBAAiB,KAAM,oBAAqB,CAAC,SAAU,KAAM,8YAA8W,CAAC,iCAAkC,KAAM,qCAAsC,CAAC,oBAAqB,KAAM,oDAAqD,CAAC,WAAY,KAAM,wUAAyU,CAAC,eAAgB,KAAM,soBAAgmB,CAAC,UAAW,KAAM,wMAAyM,CAAC,WAAY,KAAM,uXAAwX,CAAC,WAAY,KAAM,kHAAgH,CAAC,SAAU,KAAM,qNAAsN,CAAC,aAAc,KAAM,wSAAoR,CAAC,iBAAkB,KAAM,wJAAyJ,CAAC,2BAA4B,KAAM,4QAA4O,CAAC,OAAQ,KAAM,qTAA6S,CAAC,QAAS,KAAM,sWAAsU,CAAC,QAAS,KAAM,+WAAgX,CAAC,mBAAoB,KAAM,uBAAwB,CAAC,0BAA2B,KAAM,iHAAkH,CAAC,WAAY,KAAM,keAA4b,CAAC,UAAW,KAAM,oDAAsC,CAAC,uCAAwC,KAAM,kJAAgJ,CAAC,mDAAoD,KAAM,+JAAuJ,CAAC,eAAgB,KAAM,6NAA8N,CAAC,aAAc,KAAM,qFAAgF,CAAC,gCAA8B,KAAM,iSAA0Q,CAAC,UAAW,KAAM,uwBAAolB,CAAC,OAAQ,KAAM,iQAAgP,CAAC,aAAW,KAAM,iBAAe,CAAC,SAAU,KAAM,yEAA0E,CAAC,iBAAkB,KAAM,6VAA6Q,CAAC,UAAW,KAAM,uPAA0N,CAAC,WAAY,KAAM,yDAA0D,CAAC,WAAY,KAAM,gOAAiO,CAAC,qBAAsB,KAAM,+HAAgI,CAAC,UAAW,KAAM,2TAAuS,CAAC,QAAS,KAAM,kXAAmX,CAAC,cAAe,KAAM,8MAA6L,CAAC,oBAAqB,KAAM,kGAA6F,CAAC,UAAW,KAAM,uFAAwF,CAAC,UAAW,KAAM,wVAA8T,CAAC,WAAY,KAAM,8KAA+K,CAAC,oCAAqC,KAAM,+CAAgD,CAAC,gBAAiB,KAAM,mKAAoK,CAAC,OAAQ,KAAM,+JAAgK,CAAC,UAAW,KAAM,yXAAqW,CAAC,SAAU,KAAM,yfAAke,CAAC,gBAAiB,KAAM,2BAA4B,CAAC,mBAAoB,KAAM,oJAAqJ,CAAC,sCAAuC,KAAM,8GAA+G,CAAC,QAAS,KAAM,6IAA4H,CAAC,cAAe,KAAM,+EAAgF,CAAC,UAAW,KAAM,8NAA+N,CAAC,UAAW,KAAM,iQAA4P,CAAC,QAAS,KAAM,kPAAmP,CAAC,YAAa,KAAM,uBAAwB,CAAC,SAAU,KAAM,0SAA8N,CAAC,YAAa,KAAM,8FAA+F,CAAC,UAAW,KAAM,6HAA8H,CAAC,aAAc,KAAM,wBAAyB,CAAC,OAAQ,KAAM,kBAAmB,CAAC,YAAa,KAAM,gUAA+S,CAAC,WAAY,KAAM,mNAAoN,CAAC,SAAU,KAAM,0FAA4E,CAAC,gBAAiB,KAAM,wGAAmG,CAAC,SAAU,KAAM,4OAA6O,CAAC,QAAS,KAAM,gHAAiH,CAAC,oCAAqC,KAAM,+CAAgD,CAAC,0BAA2B,KAAM,8BAA+B,CAAC,WAAY,KAAM,uQAA6O,CAAC,YAAa,KAAM,gBAAiB,CAAC,UAAW,KAAM,wqBAAujB,CAAC,UAAW,KAAM,uJAA6H,CAAC,QAAS,KAAM,+gBAAghB,CAAC,YAAa,KAAM,6gBAA8gB,CAAC,4BAA6B,KAAM,yuBAA8b,CAAC,OAAQ,KAAM,0UAAyN,CAAC,UAAW,KAAM,mRAAoR,CAAC,cAAe,KAAM,yBAA0B,CAAC,SAAU,KAAM,6EAAyE,CAAC,QAAS,KAAM,wQAAyQ,CAAC,UAAW,KAAM,6MAA8M,CAAC,QAAS,KAAM,8eAA+e,CAAC,SAAU,KAAM,oBAAqB,CAAC,SAAU,KAAM,iOAAkJ,CAAC,aAAc,KAAM,2PAA4P,CAAC,QAAS,KAAM,mhBAAohB,CAAC,WAAY,KAAM,+fAAggB,CAAC,yCAA0C,KAAM,sbAA6a,CAAC,qBAAsB,KAAM,+TAAgU,CAAC,SAAU,KAAM,wFAAoF,CAAC,SAAU,KAAM,kJAA4F,CAAC,aAAc,KAAM,+JAAgK,CAAC,OAAQ,KAAM,mPAAqO,CAAC,SAAU,KAAM,swDAAk8C,CAAC,UAAW,KAAM,sHAA2G,CAAC,UAAW,KAAM,wHAAyH,CAAC,UAAW,KAAM,0LAA2L,CAAC,QAAS,KAAM,iaAAqS,CAAC,gBAAiB,KAAM,gIAAiI,CAAC,YAAa,KAAM,qKAAyH,CAAC,aAAc,KAAM,yJAA0J,CAAC,QAAS,KAAM,mBAAoB,CAAC,yBAA0B,KAAM,++BAAy2B,CAAC,aAAc,KAAM,iFAAkF,CAAC,SAAU,KAAM,2SAA4S,CAAC,WAAY,KAAM,kQAAmQ,CAAC,WAAY,KAAM,8OAA4O,CAAC,OAAQ,KAAM,mHAA8G,CAAC,QAAS,KAAM,g5BAAwvB,CAAC,mBAAoB,KAAM,qPAAsP,CAAC,aAAc,KAAM,wBAAyB,CAAC,aAAc,KAAM,4NAA6N,CAAC,YAAa,KAAM,kRAAmR,CAAC,UAAW,KAAM,0NAA+M,CAAC,SAAU,KAAM,qgBAAif,CAAC,kCAAmC,KAAM,mDAAoD,CAAC,UAAW,KAAM,olBAAwb,CAAC,SAAU,KAAM,0PAAqP,CAAC,WAAY,KAAM,gQAAiQ,CAAC,aAAc,KAAM,sSAAoQ,CAAC,aAAc,KAAM,2EAA4E,CAAC,UAAW,KAAM,4TAA+R,CAAC,aAAc,KAAM,uHAAwH,CAAC,UAAW,KAAM,gKAAiK,CAAC,UAAW,KAAM,wKAAyK,CAAC,QAAS,KAAM,qIAAsI,CAAC,QAAS,KAAM,iIAAkI,CAAC,cAAe,KAAM,oKAAqK,CAAC,gBAAiB,KAAM,uDAAwD,CAAC,cAAe,KAAM,qQAAsQ,CAAC,YAAa,KAAM,mOAAqN,CAAC,QAAS,KAAM,+EAA6E,CAAC,UAAW,KAAM,8XAA+X,CAAC,OAAQ,KAAM,kBAAmB,CAAC,iBAAkB,KAAM,4BAA6B,CAAC,2BAA4B,KAAM,+EAAgF,CAAC,SAAU,KAAM,oSAAsR,CAAC,OAAQ,KAAM,mLAAoL,CAAC,WAAY,KAAM,sNAAsJ,CAAC,QAAS,KAAM,gNAAiN,CAAC,sBAAuB,KAAM,wVAAsO,CAAC,SAAU,KAAM,oLAA0J,CAAC,mBAAoB,KAAM,oUAAqU,CAAC,WAAY,KAAM,mOAAoO,CAAC,OAAQ,KAAM,2VAA4V,CAAC,cAAe,KAAM,wrCAAyrC,CAAC,WAAY,KAAM,8BAA+B,CAAC,SAAU,KAAM,4SAA6P,CAAC,WAAY,KAAM,kPAAoO,CAAC,cAAe,KAAM,01CAA21C,CAAC,QAAS,KAAM,+JAAmH,CAAC,aAAW,KAAM,wBAAsB,CAAC,UAAW,KAAM,ybAA0b,CAAC,qBAAsB,KAAM,8uDAA+uD,CAAC,SAAU,KAAM,2DAA4D,CAAC,sBAAoB,KAAM,8BAA+B,CAAC,+CAAgD,KAAM,oDAAqD,CAAC,wBAAyB,KAAM,yBAA0B,CAAC,cAAe,KAAM,gIAAiI,CAAC,eAAgB,KAAM,0BAA2B,CAAC,4BAA6B,KAAM,6CAA8C,CAAC,mCAAoC,KAAM,8FAA+F,CAAC,QAAS,KAAM,0JAA2J,CAAC,aAAc,KAAM,oIAAqI,CAAC,wBAAyB,KAAM,yBAA0B,CAAC,eAAgB,KAAM,gMAAiM,CAAC,UAAW,KAAM,gKAAiK,CAAC,SAAU,KAAM,0gBAAsb,CAAC,aAAc,KAAM,6XAA8X,CAAC,eAAgB,KAAM,6CAA8C,CAAC,YAAa,KAAM,gFAAiF,CAAC,4BAA6B,KAAM,0BAA2B,CAAC,WAAY,KAAM,mHAAoH,CAAC,WAAY,KAAM,83FAA+3F,CAAC,kBAAmB,KAAM,qIAAsI,CAAC,UAAW,KAAM,iOAAkO,CAAC,eAAgB,KAAM,qIAAsI,CAAC,2CAA4C,KAAM,yMAA0M,CAAC,cAAe,KAAM,4KAA6K,CAAC,QAAS,KAAM,opBAA8mB,CAAC,YAAa,KAAM,qGAAsG,CAAC,QAAS,KAAM,+SAAgT,CAAC,WAAY,KAAM,8HAA+H,CAAC,YAAa,KAAM,iDAAkD,CAAC,SAAU,KAAM,iTAAqQ,CAAC,cAAe,KAAM,kVAAuU,CAAC,uBAAwB,KAAM,+KAAgL,CAAC,SAAU,KAAM,4QAA6Q,CAAC,aAAc,KAAM,gEAA4D,CAAC,+BAAgC,KAAM,kUAAmU,CAAC,WAAY,KAAM,wjCAAyjC,CAAC,cAAe,KAAM,+IAAgJ,CAAC,OAAQ,KAAM,oDAAqD,CAAC,UAAW,KAAM,wDAAyD,CAAC,QAAS,KAAM,sDAAuD,CAAC,sBAAuB,KAAM,sQAAuQ,CAAC,UAAW,KAAM,yPAA0P,CAAC,SAAU,KAAM,+1BAAg2B,CAAC,eAAgB,KAAM,uDAAwD,CAAC,2BAA4B,KAAM,sCAAuC,CAAC,SAAU,KAAM,sGAAuG,CAAC,SAAU,KAAM,q6BAAs6B,CAAC,UAAW,KAAM,4VAA0V,CAAC,uBAAwB,KAAM,4FAA6F,CAAC,iBAAkB,KAAM,0hHAA2hH,CAAC,gBAAiB,KAAM,m3BAAo3B,CAAC,uCAAwC,KAAM,kMAAmM,CAAC,UAAW,KAAM,qPAA0O,CAAC,aAAc,KAAM,uQAA8P,CAAC,UAAW,KAAM,2EAAmE,CAAC,oCAAqC,KAAM,+SAA8R,CAAC,UAAW,KAAM,k6BAAmmB,CAAC,0BAA2B,KAAM,8DAA+D,CAAC,uBAAwB,KAAM,6CAA8C,CAAC,oBAAqB,KAAM,iCAAkC,CAAC,iBAAkB,KAAM,4EAA0E,CAAC,QAAS,KAAM,6UAA2N,CAAC,SAAU,KAAM,gHAAiH,CAAC,WAAY,KAAM,2KAC53mEC,EACiB,OADjBA,EAEkB,QAFlBA,EAGqB,IAHrBA,EAIuB,IAGvBC,EAAiB,SAAwBC,EAAUC,GACrD,KAAMD,aAAoBC,GACxB,MAAM,IAAIjI,UAAU,sCAIpBkI,EAAc,WAChB,SAASC,EAAiBC,EAAQC,GAChC,IAAK,IAAIlK,EAAI,EAAGA,EAAIkK,EAAMnK,OAAQC,IAAK,CACrC,IAAImK,EAAaD,EAAMlK,GACvBmK,EAAWvH,WAAauH,EAAWvH,aAAc,EACjDuH,EAAWtH,cAAe,EACtB,UAAWsH,IAAYA,EAAWrH,UAAW,GACjDtC,OAAOmC,eAAesH,EAAQE,EAAWxL,IAAKwL,IAIlD,OAAO,SAAUL,EAAaM,EAAYC,GAGxC,OAFID,GAAYJ,EAAiBF,EAAY1I,UAAWgJ,GACpDC,GAAaL,EAAiBF,EAAaO,GACxCP,GAdO,GAkBdQ,EAAW9J,OAAO+J,QAAU,SAAUN,GACxC,IAAK,IAAIjK,EAAI,EAAGA,EAAIT,UAAUQ,OAAQC,IAAK,CACzC,IAAIwK,EAASjL,UAAUS,GAEvB,IAAK,IAAIrB,KAAO6L,EACVhK,OAAOY,UAAUc,eAAeZ,KAAKkJ,EAAQ7L,KAC/CsL,EAAOtL,GAAO6L,EAAO7L,IAK3B,OAAOsL,GAGLQ,EAAW,SAAkBC,EAAUC,GACzC,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAI9I,UAAU,kEAAoE8I,GAG1FD,EAAStJ,UAAYZ,OAAO8C,OAAOqH,GAAcA,EAAWvJ,UAAW,CACrEI,YAAa,CACX1C,MAAO4L,EACP9H,YAAY,EACZE,UAAU,EACVD,cAAc,KAGd8H,IAAYnK,OAAO6G,eAAiB7G,OAAO6G,eAAeqD,EAAUC,GAAcD,EAASpD,UAAYqD,IAGzGC,EAA0B,SAAiClI,EAAKgF,GAClE,IAAIuC,EAAS,GAEb,IAAK,IAAIjK,KAAK0C,EACRgF,EAAKmD,QAAQ7K,IAAM,GAClBQ,OAAOY,UAAUc,eAAeZ,KAAKoB,EAAK1C,KAC/CiK,EAAOjK,GAAK0C,EAAI1C,IAGlB,OAAOiK,GAGLa,EAA4B,SAAmCzL,EAAMiC,GACvE,IAAKjC,EACH,MAAM,IAAI0L,eAAe,6DAG3B,OAAOzJ,GAAyB,kBAATA,GAAqC,oBAATA,EAA8BjC,EAAPiC,GAGxE0J,EA2BK,SAAUnL,EAAKG,GACpB,GAAIE,MAAME,QAAQP,GAChB,OAAOA,EACF,GAAIS,OAAOC,YAAYC,OAAOX,GACnC,OA9BJ,SAAuBA,EAAKG,GAC1B,IAAIS,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKlB,EAET,IACE,IAAK,IAAiCmB,EAA7BC,EAAKjB,EAAIS,OAAOC,cAAmBG,GAAMG,EAAKC,EAAGC,QAAQ/B,QAChEyB,EAAKzC,KAAK6C,EAAG/B,QAETkB,GAAKS,EAAKV,SAAWC,GAH8CU,GAAK,IAK9E,MAAOjB,GACPkB,GAAK,EACLC,EAAKnB,EACL,QACA,KACOiB,GAAMI,EAAW,QAAGA,EAAW,SACpC,QACA,GAAIH,EAAI,MAAMC,GAIlB,OAAOH,EAOEwK,CAAcpL,EAAKG,GAE1B,MAAM,IAAI6B,UAAU,yDAKtBqJ,EAAoB,SAA2BrL,GACjD,GAAIK,MAAME,QAAQP,GAAM,CACtB,IAAK,IAAIG,EAAI,EAAGC,EAAOC,MAAML,EAAIE,QAASC,EAAIH,EAAIE,OAAQC,IACxDC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,EAEP,OAAOC,MAAMwB,KAAK7B,IAMlBsL,EAAkB,SAAyBC,EAAWC,EAAmBC,EAAWC,GACtF,IAAIC,EAAuB,GACvBC,EAAoBL,EAwCxB,OAtCIE,EAAUvL,OAAS,EACrB0L,EAAoBL,EAAUM,QAAO,SAAUC,GAC7C,IACIC,EADQZ,EAAcW,EAAM,GACR,GAExB,OAAOL,EAAUT,QAAQe,IAAgB,KAElCL,EAAUxL,OAAS,IAC5B0L,EAAoBL,EAAUM,QAAO,SAAUG,GAC7C,IACID,EADQZ,EAAca,EAAO,GACT,GAExB,OAA2C,IAApCN,EAAUV,QAAQe,OAIzBP,EAAkBtL,OAAS,IAE7BsL,EAAkB9F,SAAQ,SAAUuG,GAClC,IAAInG,EAAS8F,EAAkBM,MAAK,SAAUC,GAI5C,OAHYhB,EAAcgB,EAAO,GACT,KAEDF,KAGrBnG,GACF6F,EAAqBxN,KAAK2H,MAG9B8F,EAAoBA,EAAkBC,QAAO,SAAUO,GACrD,IACIL,EADQZ,EAAciB,EAAO,GACT,GAExB,OAAmD,IAA5CZ,EAAkBR,QAAQe,OAI9BJ,EAAqBzL,OAAS,GAAGmM,OAAOV,EAAsBN,EAAkBO,IAAsBA,GAwC3GrC,EAAkB,SAAU+C,GAG9B,SAAS/C,EAAgBc,GACvBN,EAAe7L,KAAMqL,GAErB,IAAIgD,EAAQtB,EAA0B/M,MAAOqL,EAAgB9B,WAAa9G,OAAO0E,eAAekE,IAAkB9H,KAAKvD,KAAMmM,IAK7H,OAHAkC,EAAM1I,MAAQ,CACZ0H,UAAWD,EAAgBzB,EAAmBQ,EAAMmC,gBAAiBnC,EAAMoB,UAAWpB,EAAMqB,YAEvFa,EAiFT,OA3FA3B,EAASrB,EAAiB+C,GAa1BpC,EAAYX,EAAiB,CAAC,CAC5BzK,IAAK,eACLG,MAAO,WACL,IAAIwN,EAASvO,KAAKmM,MACdqC,EAAYD,EAAOC,UACnBC,EAAYF,EAAOE,UACvB,OAAOzO,KAAK2F,MAAM0H,UAAUqB,KAAI,SAAUd,GACxC,IAAIe,EAAQ1B,EAAcW,EAAM,GAC5BgB,EAAcD,EAAM,GACpBd,EAAcc,EAAM,GAExB,OAAOnD,EAA2CqD,EAAEC,cAAc,SAAU,CAC1E/N,MAAOyN,IAAc5C,EAAuBiC,EAAce,EAC1DhO,IAAKiN,GACJY,IAAc7C,EAAuBiC,EAAce,QAGzD,CACDhO,IAAK,mBACLG,MAAO,WACL,IAAIgO,EAAU/O,KAAKmM,MACf6C,EAAoBD,EAAQC,kBAC5BC,EAAqBF,EAAQE,mBAEjC,OAAKD,EAIExD,EAA2CqD,EAAEC,cAAc,SAAU,CAC1E/N,MAAO,GACPH,IAAK,WACJqO,GANM,OAQV,CACDrO,IAAK,SACLG,MAAO,WAEL,IAAImO,EAAUlP,KAAKmM,MACfzI,EAAOwL,EAAQxL,KACfyL,EAAKD,EAAQC,GACbC,EAAUF,EAAQE,QAClBrO,EAAQmO,EAAQnO,MAChBsO,EAAYH,EAAQI,SACpBC,EAAUL,EAAQM,OAClBC,EAAWP,EAAQO,SASnBC,GARoBR,EAAQF,kBACPE,EAAQD,mBACjBC,EAAQT,UACRS,EAAQV,UACRU,EAAQ3B,UACR2B,EAAQ1B,UACJ0B,EAAQS,cACNT,EAAQZ,gBACTzB,EAAwBqC,EAAS,CAAC,OAAQ,KAAM,UAAW,QAAS,WAAY,SAAU,WAAY,oBAAqB,qBAAsB,YAAa,YAAa,YAAa,YAAa,gBAAiB,qBAEvOU,EAAQrD,EAAS,GAAImD,EAAgB,CACvChM,KAAMA,EACN3C,MAAOA,EACPuO,SAAU,SAAkBO,GAC1B,OAAOR,EAAUQ,EAAE3D,OAAOnL,MAAO8O,IAEnCL,OAAQ,SAAgBK,GACtB,OAAON,EAAQM,EAAE3D,OAAOnL,MAAO8O,IAEjCJ,SAAUA,IAWZ,OARIN,IACFS,EAAMT,GAAKA,GAGTC,IACFQ,EAAME,UAAYV,GAGb5D,EAA2CqD,EAAEC,cAAc,SAAUc,EAAO5P,KAAK+P,mBAAoB/P,KAAKgQ,oBAG9G3E,EA5Fa,CA6FpBE,EAA8C,WAEhDF,EAAgB4E,UAAY,CAC1BlP,MAAO2K,EAAgDmD,EAAEqB,UAAU,CAACxE,EAAgDmD,EAAEsB,OAAQzE,EAAgDmD,EAAEuB,SAChL1M,KAAMgI,EAAgDmD,EAAEsB,OACxDhB,GAAIzD,EAAgDmD,EAAEsB,OACtDf,QAAS1D,EAAgDmD,EAAEsB,OAC3DnB,kBAAmBtD,EAAgDmD,EAAEwB,KACrEpB,mBAAoBvD,EAAgDmD,EAAEqB,UAAU,CAACxE,EAAgDmD,EAAEsB,OAAQzE,EAAgDmD,EAAEuB,SAC7L9B,gBAAiB5C,EAAgDmD,EAAEyB,MACnEhB,SAAU5D,EAAgDmD,EAAE0B,KAC5Df,OAAQ9D,EAAgDmD,EAAE0B,KAC1D9B,UAAW/C,EAAgDmD,EAAE2B,MAAM,CAAC5E,EAAqBA,IACzF4C,UAAW9C,EAAgDmD,EAAE2B,MAAM,CAAC5E,EAAqBA,IACzF2B,UAAW7B,EAAgDmD,EAAEyB,MAC7D9C,UAAW9B,EAAgDmD,EAAEyB,MAC7Db,SAAU/D,EAAgDmD,EAAEwB,MAE9DhF,EAAgBoF,aAAe,CAC7B1P,MAAO,GACP2C,KAAM,eACNyL,GAAI,GACJC,QAAS,GACTJ,mBAAmB,EACnBC,mBAAoB,iBACpBX,gBAAiB,GACjBgB,SAAU,aACVE,OAAQ,aACRf,UAAW7C,EACX4C,UAAW5C,EACX2B,UAAW,GACXC,UAAW,GACXiC,UAAU,GAGZ,IAAInE,EAAiB,SAAUoF,GAG7B,SAASpF,EAAea,GACtBN,EAAe7L,KAAMsL,GAErB,IAAI+C,EAAQtB,EAA0B/M,MAAOsL,EAAe/B,WAAa9G,OAAO0E,eAAemE,IAAiB/H,KAAKvD,KAAMmM,IAM3H,OAJAkC,EAAM1I,MAAQ,CACZgL,QAAStC,EAAMuC,WAAWzE,EAAM0E,UAElCxC,EAAMuC,WAAavC,EAAMuC,WAAWE,KAAKzC,GAClCA,EAiLT,OA5LA3B,EAASpB,EAAgBoF,GAczB1E,EAAYV,EAAgB,CAAC,CAC3B1K,IAAK,qBACLG,MAAO,SAA4BgQ,GACjC,IAAIF,EAAU7Q,KAAKmM,MAAM0E,QAEzB,GAAIA,IAAYE,EAAUF,QAA1B,CAIA,IAAIG,EAAiBhR,KAAK4Q,WAAWC,GACrC7Q,KAAKiR,SAAS,CACZN,QAAS,GAAGxC,OAAOhB,EAAkB6D,GAAiB7D,EAAkBnN,KAAKkR,iBAAiBF,UAGjG,CACDpQ,IAAK,mBACLG,MAAO,SAA0B4P,GAC/B,IAAIhB,EAAgB3P,KAAKmM,MAAMwD,cAC3BwB,EAAmBnR,KAAKoR,cAAcT,GAE1C,OAAIQ,EAAiBnP,QACnBqP,QAAQrQ,MAAM,qCAAuCmQ,EAAiB7N,WAAa,4FAC5E,IAGFqM,EAAcjB,KAAI,SAAU4C,GACjC,GAAIA,EACF,MAAO,CACLC,WAAYD,EACZE,gBAAiBF,QAKxB,CACD1Q,IAAK,gBACLG,MAAO,SAAuB4P,GAC5B,IAAIpC,EAASvO,KAAKmM,MACdwD,EAAgBpB,EAAOoB,cAEvB8B,EADYlD,EAAOC,YACO5C,EAAsB,aAAe,kBACnE,OAAO+E,EAAQhD,QAAO,SAAU+D,GAC9B,OAAqD,IAA9C/B,EAAc7C,QAAQ4E,EAAOD,OACnC/C,KAAI,SAAUgD,GACf,OAAOA,EAAOD,QAGjB,CACD7Q,IAAK,aACLG,MAAO,SAAoB8P,GACzB,IAAKA,EACH,MAAO,GAGT,IAAI9B,EAAU/O,KAAKmM,MACfwF,EAAmB5C,EAAQ4C,iBAC3BpE,EAAYwB,EAAQxB,UACpBC,EAAYuB,EAAQvB,UACpBoE,EAAcD,IAAqB/F,EAAsB,EAAI,EAC7D+E,EAAU,GAQd,OAPAhF,EAAkBnE,SAAQ,SAAUvF,GAC9BA,EAAE2P,KAAiBf,IACrBF,EAAU1O,MAKT0O,GAA8B,IAAnBA,EAAQ3O,OArPV,SAAuB6P,EAAeC,EAAiBC,GACzE,IAAIC,EAAiB/E,EAAc4E,EAAe,GAC9ChB,EAAUmB,EAAe,GACzBC,EAAcD,EAAe,GAC7BrB,EAAUqB,EAAe,GAEzBzE,EAAYuE,EAAgB3N,eAAe8N,GAAeH,EAAgBG,GAAe,GACzFzE,EAAYuE,EAAgB5N,eAAe8N,GAAeF,EAAgBE,GAAe,GACzFC,EAAkBvB,EAAQwB,MAAM,KAwBpC,OAtBI5E,EAAUvL,OAAS,GAAKkQ,EAAgBlQ,OAAS,EACnDkQ,EAAkBA,EAAgBvE,QAAO,SAAU+D,GACjD,IAAK,IAAIzP,EAAI,EAAGmB,EAAImK,EAAUvL,OAAQC,EAAImB,EAAGnB,IAC3C,GAAIyP,EAAO5E,QAAQS,EAAUtL,KAAO,EAClC,OAAO,EAIX,OAAO,KAEAuL,EAAUxL,OAAS,GAAKkQ,EAAgBlQ,OAAS,IAC1DkQ,EAAkBA,EAAgBvE,QAAO,SAAU+D,GACjD,IAAK,IAAIzP,EAAI,EAAGmB,EAAIoK,EAAUxL,OAAQC,EAAImB,EAAGnB,IAC3C,GAAIyP,EAAO5E,QAAQU,EAAUvL,KAAO,EAClC,OAAO,EAIX,OAAO,MAIJ,CAAC4O,EAASoB,EAAaC,EAAgBE,KAAK,MA0NzBC,CAAc1B,EAASpD,EAAWC,GACjC,GAAG2E,MAAMvG,GAAyB8C,KAAI,SAAU4D,GACrE,IAAIC,EAAoBD,EAAWH,MAAMvG,GACrC4G,EAAqBvF,EAAcsF,EAAmB,GACtDhB,EAAaiB,EAAmB,GAChCC,EAAsBD,EAAmB,GAG7C,MAAO,CACLjB,WAAYA,EACZC,qBAJ4C7P,IAAxB8Q,EAAoC,KAAOA,OAVjEpB,QAAQrQ,MAAM,kCAAoC6P,EAAU,+GACrD,MAiBV,CACDjQ,IAAK,gBACLG,MAAO,WACL,IAAImO,EAAUlP,KAAKmM,MACfsC,EAAYS,EAAQT,UACpBD,EAAYU,EAAQV,UACxB,OAAOxO,KAAK2F,MAAMgL,QAAQjC,KAAI,SAAUd,GACtC,IAAI2D,EAAa3D,EAAK2D,WAClBC,EAAkB5D,EAAK4D,gBACvBkB,EAAQjE,IAAc7C,EAAsB2F,EAAaC,EACzDzQ,EAAQyN,IAAc5C,EAAsB2F,EAAaC,EAC7D,OAAOhG,EAA2CqD,EAAEC,cAAc,SAAU,CAC1E/N,MAAOA,EACPH,IAAK2Q,GACJmB,QAKN,CACD9R,IAAK,mBACLG,MAAO,WACL,IAAI4R,EAAU3S,KAAKmM,MACfyG,EAAmBD,EAAQC,iBAC3B5D,EAAoB2D,EAAQ3D,kBAC5BC,EAAqB0D,EAAQ1D,mBAGjC,OAFc0D,EAAQ9B,QAQlB7B,EACKxD,EAA2CqD,EAAEC,cAAc,SAAU,CAC1E/N,MAAO,IACNkO,GAGE,KAXEzD,EAA2CqD,EAAEC,cAAc,SAAU,CAC1E/N,MAAO,IACN6R,KAWN,CACDhS,IAAK,SACLG,MAAO,WACL,IAAI8R,EAAU7S,KAAKmM,MACfpL,EAAQ8R,EAAQ9R,MAChB8P,EAAUgC,EAAQhC,QAClBxB,EAAYwD,EAAQvD,SACpBC,EAAUsD,EAAQrD,OAClBL,EAAK0D,EAAQ1D,GACbzL,EAAOmP,EAAQnP,KACf0L,EAAUyD,EAAQzD,QAClBK,EAAWoD,EAAQpD,SAOnBqD,GANmBD,EAAQD,iBACPC,EAAQ7D,kBACP6D,EAAQ5D,mBACjB4D,EAAQpE,UACRoE,EAAQrE,UACDqE,EAAQlB,iBACRkB,EAAQC,kBAE3BpD,GADgBmD,EAAQlD,cACP9C,EAAwBgG,EAAS,CAAC,QAAS,UAAW,WAAY,SAAU,KAAM,OAAQ,UAAW,WAAY,mBAAoB,oBAAqB,qBAAsB,YAAa,YAAa,mBAAoB,mBAAoB,mBAGnQjD,EAAQrD,EAAS,GAAImD,EAAgB,CACvChM,KAAMA,EACN3C,MAAOA,EACPuO,SAAU,SAAkBO,GAC1B,OAAOR,EAAUQ,EAAE3D,OAAOnL,MAAO8O,IAEnCL,OAAQ,SAAgBK,GACtB,OAAON,EAAQM,EAAE3D,OAAOnL,MAAO8O,IAEjCJ,SAXeA,GAAYqD,GAAgC,KAAZjC,IAsBjD,OARI1B,IACFS,EAAMT,GAAKA,GAGTC,IACFQ,EAAME,UAAYV,GAGb5D,EAA2CqD,EAAEC,cAAc,SAAUc,EAAO5P,KAAK+P,mBAAoB/P,KAAK+S,qBAG9GzH,EA7LY,CA8LnBC,EAAkD,eAEpDD,EAAe2E,UAAY,CACzBY,QAASnF,EAAgDmD,EAAEsB,OAC3DwB,iBAAkBjG,EAAgDmD,EAAE2B,MAAM,CAAC5E,EAAqBA,IAChG7K,MAAO2K,EAAgDmD,EAAEqB,UAAU,CAACxE,EAAgDmD,EAAEsB,OAAQzE,EAAgDmD,EAAEuB,SAChL1M,KAAMgI,EAAgDmD,EAAEsB,OACxDhB,GAAIzD,EAAgDmD,EAAEsB,OACtDf,QAAS1D,EAAgDmD,EAAEsB,OAC3DyC,iBAAkBlH,EAAgDmD,EAAEsB,OACpEnB,kBAAmBtD,EAAgDmD,EAAEwB,KACrEpB,mBAAoBvD,EAAgDmD,EAAEsB,OACtEb,SAAU5D,EAAgDmD,EAAE0B,KAC5Df,OAAQ9D,EAAgDmD,EAAE0B,KAC1D9B,UAAW/C,EAAgDmD,EAAEsB,OAC7D3B,UAAW9C,EAAgDmD,EAAEsB,OAC7D5C,UAAW7B,EAAgDmD,EAAEjF,OAC7D4D,UAAW9B,EAAgDmD,EAAEjF,OAC7D6F,SAAU/D,EAAgDmD,EAAEwB,KAC5DyC,iBAAkBpH,EAAgDmD,EAAEwB,KACpEV,cAAejE,EAAgDmD,EAAEyB,OAEnEhF,EAAemF,aAAe,CAC5BI,QAAS,GACT9P,MAAO,GACP2C,KAAM,cACNyL,GAAI,GACJC,QAAS,GACTwD,iBAAkB,IAClB5D,mBAAmB,EACnBC,mBAAoB,gBACpBK,SAAU,aACVE,OAAQ,aACRmC,iBAAkB/F,EAClB6C,UAAW7C,EACX4C,UAAW5C,EACX2B,UAAW,GACXC,UAAW,GACXiC,UAAU,EACVqD,kBAAkB,EAClBnD,cAAe"},"input":"(this[\"webpackJsonptw2-01-music\"] = this[\"webpackJsonptw2-01-music\"] || []).push([[6],{\n\n/***/ 175:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(772);\n\n\n/***/ }),\n\n/***/ 176:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return _asyncToGenerator; });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\n/***/ }),\n\n/***/ 72:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ _slicedToArray; });\n\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\n\n\n\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\n/***/ }),\n\n/***/ 772:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  define(Gp, iteratorSymbol, function () {\n    return this;\n  });\n  define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n true ? module.exports : undefined);\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n\n/***/ }),\n\n/***/ 773:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CountryDropdown; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return RegionDropdown; });\n/* unused harmony export CountryRegionData */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar CountryRegionData = [[\"Afghanistan\", \"AF\", \"Badakhshan~BDS|Badghis~BDG|Baghlan~BGL|Balkh~BAL|Bamyan~BAM|Daykundi~DAY|Farah~FRA|Faryab~FYB|Ghazni~GHA|Ghor~GHO|Helmand~HEL|Herat~HER|Jowzjan~JOW|Kabul~KAB|Kandahar~KAN|Kapisa~KAP|Khost~KHO|Kunar~KNR|Kunduz~KDZ|Laghman~LAG|Logar~LOW|Maidan Wardak~WAR|Nangarhar~NAN|Nimruz~NIM|Nuristan~NUR|Paktia~PIA|Paktika~PKA|Panjshir~PAN|Parwan~PAR|Samangan~SAM|Sar-e Pol~SAR|Takhar~TAK|Urozgan~ORU|Zabul~ZAB\"], [\"Åland Islands\", \"AX\", \"Brändö~BR|Eckerö~EC|Finström~FN|Föglö~FG|Geta~GT|Hammarland~HM|Jomala~JM|Kumlinge~KM|Kökar~KK|Lemland~LE|Lumparland~LU|Mariehamn~MH|Saltvik~SV|Sottunga~ST|Sund~SD|Vårdö~VR\"], [\"Albania\", \"AL\", \"Berat~01|Dibër~09|Durrës~02|Elbasan~03|Fier~04|Gjirokastër~05|Korçë~06|Kukës~07|Lezhë~08|Shkodër~10|Tirana~11|Vlorë~12\"], [\"Algeria\", \"DZ\", \"Adrar~01|Aïn Defla~44|Aïn Témouchent~46|Algiers~16|Annaba~23|Batna~05|Béchar~08|Béjaïa~06|Biskra~07|Blida~09|Bordj Bou Arréridj~34|Bouïra~10|Boumerdès~35|Chlef~02|Constantine~25|Djelfa~17|El Bayadh~32|El Oued~39|El Tarf~36|Ghardaïa~47|Guelma~24|Illizi~33|Jijel~18|Khenchela~40|Laghouat~03|Mascara~29|Médéa~26|Mila~43|Mostaganem~27|Msila~28|Naâma~45|Oran~31|Ouargla~30|Oum el Bouaghi~04|Relizane~48|Saïda~20|Sétif~19|Sidi Bel Abbès~22|Skikda~21|Souk Ahras~41|Tamanghasset~11|Tébessa~12|Tiaret~14|Tindouf~37|Tipaza~42|Tissemsilt~38|Tizi Ouzou~15|Tlemcen~13\"], [\"American Samoa\", \"AS\", \"Tutuila~01|Aunu'u~02|Ta'ū~03|Ofu‑Olosega~04|Rose Atoll~21|Swains Island~22\"], [\"Andorra\", \"AD\", \"Andorra la Vella~07|Canillo~02|Encamp~03|Escaldes-Engordany~08|La Massana~04|Ordino~05|Sant Julià de Lòria~06\"], [\"Angola\", \"AO\", \"Bengo~BGO|Benguela~BGU|Bié~BIE|Cabinda~CAB|Cuando Cubango~CCU|Cuanza Norte~CNO|Cuanza Sul~CUS|Cunene~CNN|Huambo~HUA|Huíla~HUI|Luanda~LUA|Lunda Norte~LNO|Lunda Sul~LSU|Malanje~MAL|Moxico~MOX|Namibe~NAM|Uíge~UIG|Zaire~ZAI\"], [\"Anguilla\", \"AI\", \"Anguilla~01|Anguillita Island~02|Blowing Rock~03|Cove Cay~04|Crocus Cay~05|Deadman's Cay~06|Dog Island~07|East Cay~08|Little Island~09|Little Scrub Island~10|Mid Cay~11|North Cay~12|Prickly Pear Cays~13|Rabbit Island~14|Sandy Island/Sand Island~15|Scilly Cay~16|Scrub Island~17|Seal Island~18|Sombrero/Hat Island~19|South Cay~20|South Wager Island~21|West Cay~22\"], [\"Antarctica\", \"AQ\", \"Antarctica~AQ\"], [\"Antigua and Barbuda\", \"AG\", \"Antigua Island~01|Barbuda Island~02|Bird Island~04|Bishop Island~05|Blake Island~06|Crump Island~09|Dulcina Island~10|Exchange Island~11|Five Islands~12|Great Bird Island~13|Green Island~14|Guiana Island~15|Hawes Island~17|Hells Gate Island~16|Henry Island~18|Johnson Island~19|Kid Island~20|Lobster Island~22|Maiden Island~24|Moor Island~25|Nanny Island~26|Pelican Island~27|Prickly Pear Island~28|Rabbit Island~29|Red Head Island~31|Redonda Island~03|Sandy Island~32|Smith Island~33|The Sisters~34|Vernon Island~35|Wicked Will Island~36|York Island~37\"], [\"Argentina\", \"AR\", \"Buenos Aires~B|Capital Federal~C|Catamarca~K|Chaco~H|Chubut~U|Córdoba~X|Corrientes~W|Entre Ríos~E|Formosa~P|Jujuy~Y|La Pampa~L|La Rioja~F|Mendoza~M|Misiones~N|Neuquén~Q|Río Negro~R|Salta~A|San Juan~J|San Luis~D|Santa Cruz~Z|Santa Fe~S|Santiago del Estero~G|Tierra del Fuego~V|Tucumán~T\"], [\"Armenia\", \"AM\", \"Aragatsotn~AG|Ararat~AR|Armavir~AV|Gegharkunik~GR|Kotayk~KT|Lori~LO|Shirak~SH|Syunik~SU|Tavush~TV|Vayots Dzor~VD|Yerevan~ER\"], [\"Aruba\", \"AW\", \"Aruba~AW\"], [\"Australia\", \"AU\", \"Australian Capital Territory~ACT|New South Wales~NSW|Northern Territory~NT|Queensland~QLD|South Australia~SA|Tasmania~TAS|Victoria~VIC|Western Australia~WA\"], [\"Austria\", \"AT\", \"Burgenland~1|Kärnten~2|Niederösterreich~3|Oberösterreich~4|Salzburg~5|Steiermark~6|Tirol~7|Vorarlberg~8|Wien~9\"], [\"Azerbaijan\", \"AZ\", \"Abşeron~ABS|Ağcabədi~AGC|Ağdam~AGM|Ağdaş~AGS|Ağstafa~AGA|Ağsu~AGU|Astara~AST|Bakı~BAK|Babək~BAB|Balakən~BAL|Bərdə~BAR|Beyləqan~BEY|Biləsuvar~BIL|Cəbrayıl~CAB|Cəlilabad~CAL|Culfa~CUL|Daşkəsən~DAS|Füzuli~FUZ|Gədəbəy~GAD|Goranboy~GOR|Göyçay~GOY|Göygöl~GYG|Hacıqabul~HAC|İmişli~IMI|İsmayıllı~ISM|Kəlbəcər~KAL|Kǝngǝrli~KAN|Kürdəmir~KUR|Laçın~LAC|Lənkəran~LAN|Lerik~LER|Masallı~MAS|Neftçala~NEF|Oğuz~OGU|Ordubad~ORD|Qəbələ~QAB|Qax~QAX|Qazax~QAZ|Qobustan~QOB|Quba~QBA|Qubadli~QBI|Qusar~QUS|Saatlı~SAT|Sabirabad~SAB|Şabran~SBN|Sədərək~SAD|Şahbuz~SAH|Şəki~SAK|Salyan~SAL|Şamaxı~SMI|Şəmkir~SKR|Samux~SMX|Şərur~SAR|Siyəzən~SIY|Şuşa~SUS|Tərtər~TAR|Tovuz~TOV|Ucar~UCA|Xaçmaz~XAC|Xızı~XIZ|Xocalı~XCI|Xocavənd~XVD|Yardımlı~YAR|Yevlax~YEV|Zəngilan~ZAN|Zaqatala~ZAQ|Zərdab~ZAR\"], [\"Bahamas\", \"BS\", \"Acklins Island~01|Berry Islands~22|Bimini~02|Black Point~23|Cat Island~03|Central Abaco~24|Crooked Island and Long Cay~28|East Grand Bahama~29|Exuma~04|Freeport~05|Fresh Creek~06|Governor's Harbour~07|Green Turtle Cay~08|Harbour Island~09|High Rock~10|Inagua~11|Kemps Bay~12|Long Island~13|Marsh Harbour~14|Mayaguana~15|Moore’s Island~40|New Providence~16|Nichollstown and Berry Islands~17|North Abaco~42|North Andros~41|North Eleuthera~33|Ragged Island~18|Rock Sound~19|San Salvador and Rum Cay~20|Sandy Point~21|South Abaco~35|South Andros~36|South Eleuthera~37|West Grand Bahama~39\"], [\"Bahrain\", \"BH\", \"Al Janūbīyah~14|Al Manāmah~13|Al Muḩarraq~15|Al Wusţá~16|Ash Shamālīyah~17\"], [\"Bangladesh\", \"BD\", \"Barisal~A|Chittagong~B|Dhaka~C|Khulna~D|Mymensingh~M|Rajshahi~E|Rangpur~F|Sylhet~G\"], [\"Barbados\", \"BB\", \"Christ Church~01|Saint Andrew~02|Saint George~03|Saint James~04|Saint John~05|Saint Joseph~06|Saint Lucy~07|Saint Michael~08|Saint Peter~09|Saint Philip~10|Saint Thomas~11\"], [\"Belarus\", \"BY\", \"Brest voblast~BR|Gorod Minsk~HM|Homiel voblast~HO|Hrodna voblast~HR|Mahilyow voblast~MA|Minsk voblast~MI|Vitsebsk voblast~VI\"], [\"Belgium\", \"BE\", \"Brussels~BRU|Flanders~VLG|Wallonia~WAL\"], [\"Belize\", \"BZ\", \"Belize District~BZ|Cayo District~CY|Corozal District~CZL|Orange Walk District~OW|Stann Creek District~SC|Toledo District~TOL\"], [\"Benin\", \"BJ\", \"Alibori~AL|Atakora~AK|Atlantique~AQ|Borgou~BO|Collines Department~CO|Donga~DO|Kouffo~KO|Littoral Department~LI|Mono Department~MO|Ouémé~OU|Plateau~PL|Zou~ZO\"], [\"Bermuda\", \"BM\", \"City of Hamilton~03|Devonshire Parish~01|Hamilton Parish~02|Paget Parish~04|Pembroke Parish~05|Sandys Parish~08|Smith's Parish~09|Southampton Parish~10|St. George's Parish~07|Town of St. George~06|Warwick Parish~11\"], [\"Bhutan\", \"BT\", \"Bumthang~33|Chhukha~12|Dagana~22|Gasa~GA|Haa~13|Lhuntse~44|Mongar~42|Paro~11|Pemagatshel~43|Punakha~23|Samdrup Jongkhar~45|Samtse~14|Sarpang~31|Thimphu~15|Trashigang~41|Trashiyangtse~TY|Trongsa~32|Tsirang~21|Wangdue Phodrang~24|Zhemgang~34\"], [\"Bolivia\", \"BO\", \"Beni~B|Chuquisaca~H|Cochabamba~C|La Paz~L|Oruro~O|Pando~N|Potosí~P|Santa Cruz~S|Tarija~T\"], [\"Bonaire, Sint Eustatius and Saba\", \"BQ\", \"Bonaire~BO|Saba Isand~SA|Sint Eustatius~SE\"], [\"Bosnia and Herzegovina\", \"BA\", \"Brčko Distrikt~BRC|Federacija Bosne i Hercegovine~BIH|Republika Srpska~SRP\"], [\"Botswana\", \"BW\", \"Central~CE|Ghanzi~GH|Kgalagadi~KG|Kgatleng~KL|Kweneng~KW|North West~NW|North-East~NE|South East~SE|Southern~SO\"], [\"Bouvet Island\", \"BV\", \"Bouvet Island~BV\"], [\"Brazil\", \"BR\", \"Acre~AC|Alagoas~AL|Amapá~AP|Amazonas~AM|Bahia~BA|Ceará~CE|Distrito Federal~DF|Espírito Santo~ES|Goiás~GO|Maranhão~MA|Mato Grosso~MT|Mato Grosso do Sul~MS|Minas Gerais~MG|Pará~PA|Paraíba~PB|Paraná~PR|Pernambuco~PE|Piauí~PI|Rio de Janeiro~RJ|Rio Grande do Norte~RN|Rio Grande do Sul~RS|Rondônia~RO|Roraima~RR|Santa Catarina~SC|São Paulo~SP|Sergipe~SE|Tocantins~TO\"], [\"British Indian Ocean Territory\", \"IO\", \"British Indian Ocean Territory~IO\"], [\"Brunei Darussalam\", \"BN\", \"Belait~BE|Brunei Muara~BM|Temburong~TE|Tutong~TU\"], [\"Bulgaria\", \"BG\", \"Blagoevgrad~01|Burgas~02|Dobrich~08|Gabrovo~07|Jambol~28|Khaskovo~26|Kjustendil~10|Kurdzhali~09|Lovech~11|Montana~12|Pazardzhik~13|Pernik~14|Pleven~15|Plovdiv~16|Razgrad~17|Ruse~18|Shumen~27|Silistra~19|Sliven~20|Smoljan~21|Sofija~23|Sofija-Grad~22|Stara Zagora~24|Turgovishhe~25|Varna~03|Veliko Turnovo~04|Vidin~05|Vraca~06\"], [\"Burkina Faso\", \"BF\", \"Balé~BAL|Bam/Lake Bam~BAM|Banwa Province~BAN|Bazèga~BAZ|Bougouriba~BGR|Boulgou Province~BLG|Boulkiemdé~BLK|Comoé/Komoe~COM|Ganzourgou Province~GAN|Gnagna~GNA|Gourma Province~GOU|Houet~HOU|Ioba~IOB|Kadiogo~KAD|Kénédougou~KEN|Komondjari~KMD|Kompienga~KMP|Kossi Province~KOS|Koulpélogo~KOP|Kouritenga~KOT|Kourwéogo~KOW|Léraba~LER|Loroum~LOR|Mouhoun~MOU|Namentenga~NAM|Naouri/Nahouri~NAO|Nayala~NAY|Noumbiel~NOU|Oubritenga~OUB|Oudalan~OUD|Passoré~PAS|Poni~PON|Sanguié~SNG|Sanmatenga~SMT|Séno~SEN|Sissili~SIS|Soum~SOM|Sourou~SOR|Tapoa~TAP|Tui/Tuy~TUI|Yagha~YAG|Yatenga~YAT|Ziro~ZIR|Zondoma~ZON|Zoundwéogo~ZOU\"], [\"Burundi\", \"BI\", \"Bubanza~BB|Bujumbura Mairie~BM|Bujumbura Rural~BL|Bururi~BR|Cankuzo~CA|Cibitoke~CI|Gitega~GI|Karuzi~KR|Kayanza~KY|Kirundo~KI|Makamba~MA|Muramvya~MU|Muyinga~MY|Mwaro~MW|Ngozi~NG|Rutana~RT|Ruyigi~RY\"], [\"Cambodia\", \"KH\", \"Baat Dambang~2|Banteay Mean Chey~1|Kampong Chaam~3|Kampong Chhnang~4|Kampong Spueu~5|Kampong Thum~6|Kampot~7|Kandaal~8|Kaoh Kong~9|Kracheh~10|Krong Kaeb~23|Krong Pailin~24|Krong Preah Sihanouk~18|Mondol Kiri~11|Otdar Mean Chey~22|Phnom Penh~12|Pousaat~15|Preah Vihear~13|Prey Veaeng~14|Rotanah Kiri~16|Siem Reab~17|Stueng Treng~19|Svaay Rieng~20|Taakaev~21|Tbong Khmum~25\"], [\"Cameroon\", \"CM\", \"Adamaoua~AD|Centre~CE|Est~ES|Extrême-Nord~EN|Littoral~LT|Nord~NO|Nord-Ouest~NW|Ouest~OU|Sud~SU|Sud-Ouest~SW\"], [\"Canada\", \"CA\", \"Alberta~AB|British Columbia~BC|Manitoba~MB|New Brunswick~NB|Newfoundland and Labrador~NL|Northwest Territories~NT|Nova Scotia~NS|Nunavut~NU|Ontario~ON|Prince Edward Island~PE|Quebec~QC|Saskatchewan~SK|Yukon~YT\"], [\"Cape Verde\", \"CV\", \"Boa Vista~BV|Brava~BR|Calheta de São Miguel~CS|Maio~MA|Mosteiros~MO|Paúl~PA|Porto Novo~PN|Praia~PR|Ribeira Brava~RB|Ribeira Grande~RG|Sal~SL|Santa Catarina~CA|Santa Cruz~CR|São Domingos~SD|São Filipe~SF|São Nicolau~SN|São Vicente~SV|Tarrafal~TA|Tarrafal de São Nicolau~TS\"], [\"Cayman Islands\", \"KY\", \"Creek~undefined|Eastern~undefined|Midland~undefined|South Town~undefined|Spot Bay~undefined|Stake Bay~undefined|West End~undefined|Western~undefined\"], [\"Central African Republic\", \"CF\", \"Bamingui-Bangoran~BB|Bangui~BGF|Basse-Kotto~BK|Haute-Kotto~HK|Haut-Mbomou~HM|Kémo~KG|Lobaye~LB|Mambéré-Kadéï~HS|Mbomou~MB|Nana-Grebizi~10|Nana-Mambéré~NM|Ombella-M'Poko~MP|Ouaka~UK|Ouham~AC|Ouham Péndé~OP|Sangha-Mbaéré~SE|Vakaga~VK\"], [\"Chad\", \"TD\", \"Bahr el Ghazal~BG|Batha~BA|Borkou~BO|Chari-Baguirmi~CB|Ennedi-Est~EE|Ennedi-Ouest~EO|Guéra~GR|Hadjer Lamis~HL|Kanem~KA|Lac~LC|Logone Occidental~LO|Logone Oriental~LR|Mondoul~MA|Mayo-Kébbi-Est~ME|Moyen-Chari~MC|Ouaddai~OD|Salamat~SA|Sila~SI|Tandjilé~TA|Tibesti~TI|Ville de Ndjamena~ND|Wadi Fira~WF\"], [\"Chile\", \"CL\", \"Aisén del General Carlos Ibáñez del Campo~AI|Antofagasta~AN|Araucanía~AR|Arica y Parinacota~AP|Atacama~AT|Bío-Bío~BI|Coquimbo~CO|Libertador General Bernardo O'Higgins~LI|Los Lagos~LL|Los Ríos~LR|Magallanes y Antartica Chilena~MA|Marga-Marga~|Maule~ML|Ñuble~NB|Región Metropolitana de Santiago~RM|Tarapacá~TA|Valparaíso~VS\"], [\"China\", \"CN\", \"Anhui~AH|Beijing~BJ|Chongqing~CQ|Fujian~FJ|Gansu~GS|Guangdong~GD|Guangxi~GX|Guizhou~GZ|Hainan~HI|Hebei~HE|Heilongjiang~HL|Henan~HA|Hong Kong~HK|Hubei~HB|Hunan~HN|Inner Mongolia~NM|Jiangsu~JS|Jiangxi~JX|Jilin~JL|Liaoning~LN|Macau~MO|Ningxia~NX|Qinghai~QH|Shaanxi~SN|Shandong~SD|Shanghai~SH|Shanxi~SX|Sichuan~SC|Tianjin~TJ|Tibet~XZ|Xinjiang~XJ|Yunnan~YN|Zhejiang~ZJ\"], [\"Christmas Island\", \"CX\", \"Christmas Island~CX\"], [\"Cocos (Keeling) Islands\", \"CC\", \"Direction Island~DI|Home Island~HM|Horsburgh Island~HR|North Keeling Island~NK|South Island~SI|West Island~WI\"], [\"Colombia\", \"CO\", \"Amazonas~AMA|Antioquia~ANT|Arauca~ARA|Archipiélago de San Andrés~SAP|Atlántico~ATL|Bogotá D.C.~DC|Bolívar~BOL|Boyacá~BOY|Caldas~CAL|Caquetá~CAQ|Casanare~CAS|Cauca~CAU|Cesar~CES|Chocó~CHO|Córdoba~COR|Cundinamarca~CUN|Guainía~GUA|Guaviare~GUV|Huila~HUI|La Guajira~LAG|Magdalena~MAG|Meta~MET|Nariño~NAR|Norte de Santander~NSA|Putumayo~PUT|Quindío~QUI|Risaralda~RIS|Santander~SAN|Sucre~SUC|Tolima~TOL|Valle del Cauca~VAC|Vaupés~VAU|Vichada~VID\"], [\"Comoros\", \"KM\", \"Andjazîdja~G|Andjouân~A|Moûhîlî~M\"], [\"Congo, Republic of the (Brazzaville)\", \"CG\", \"Bouenza~11|Brazzaville~BZV|Cuvette~8|Cuvette-Ouest~15|Kouilou~5|Lékoumou~2|Likouala~7|Niari~9|Plateaux~14|Pointe-Noire~16|Pool~12|Sangha~13\"], [\"Congo, the Democratic Republic of the (Kinshasa)\", \"CD\", \"Bandundu~BN|Bas-Congo~BC|Équateur~EQ|Kasaï-Occidental~KE|Kasaï-Oriental~KW|Katanga~KA|Kinshasa~KN|Maniema~MA|Nord-Kivu~NK|Orientale~OR|Sud-Kivu~SK\"], [\"Cook Islands\", \"CK\", \"Aitutaki~undefined|Atiu~undefined|Avarua~undefined|Mangaia~undefined|Manihiki~undefined|Ma'uke~undefined|Mitiaro~undefined|Nassau~undefined|Palmerston~undefined|Penrhyn~undefined|Pukapuka~undefined|Rakahanga~undefined\"], [\"Costa Rica\", \"CR\", \"Alajuela~2|Cartago~3|Guanacaste~5|Heredia~4|Limón~7|Puntarenas~6|San José~1\"], [\"Côte d'Ivoire, Republic of\", \"CI\", \"Agnéby~16|Bafing~17|Bas-Sassandra~09|Denguélé~10|Dix-Huit Montagnes~06|Fromager~18|Haut-Sassandra~02|Lacs~07|Lagunes~01|Marahoué~12|Moyen-Cavally~19|Moyen-Comoé~05|N'zi-Comoé~11|Savanes~03|Sud-Bandama~15|Sud-Comoé~13|Vallée du Bandama~04|Worodougou~14|Zanzan~08\"], [\"Croatia\", \"HR\", \"Bjelovarsko-bilogorska županija~07|Brodsko-posavska županija~12|Dubrovačko-neretvanska županija~19|Grad Zagreb~21|Istarska županija~18|Karlovačka županija~04|Koprivničko-križevačka županija~06|Krapinsko-zagorska županija~02|Ličko-senjska županija~09|Međimurska županija~20|Osječko-baranjska županija~14|Požeško-slavonska županija~11|Primorsko-goranska županija~08|Sisačko-moslavačka županija~03|Splitsko-dalmatinska županija~17|Šibensko-kninska županija~15|Varaždinska županija~05|Virovitičko-podravska županija~10|Vukovarsko-srijemska županija~16|Zadarska županija~13|Zagrebačka županija~01\"], [\"Cuba\", \"CU\", \"Artemisa~15|Camagüey~09|Ciego de Ávila~08|Cienfuegos~06|Granma~12|Guantánamo~14|Holguín~11|Isla de la Juventud~99|La Habana~03|Las Tunas~10|Matanzas~04|Mayabeque~16|Pinar del Río~01|Sancti Spíritus~07|Santiago de Cuba~13|Villa Clara~05\"], [\"Curaçao\", \"CW\", \"Curaçao~CW\"], [\"Cyprus\", \"CY\", \"Ammochostos~04|Keryneia~06|Larnaka~03|Lefkosia~01|Lemesos~02|Pafos~05\"], [\"Czech Republic\", \"CZ\", \"Hlavní město Praha~PR|Jihočeský kraj~JC|Jihomoravský kraj~JM|Karlovarský kraj~KA|Královéhradecký kraj~KR|Liberecký kraj~LI|Moravskoslezský kraj~MO|Olomoucký kraj~OL|Pardubický kraj~PA|Plzeňský kraj~PL|Středočeský kraj~ST|Ústecký kraj~US|Vysočina~VY|Zlínský kraj~ZL\"], [\"Denmark\", \"DK\", \"Hovedstaden~84|Kujalleq~GL-KU|Midtjylland~82|Norderøerne~FO-01|Nordjylland~81|Østerø~FO-06|Qaasuitsup~GL-QA|Qeqqata~GL-QE|Sandø~FO-02|Sermersooq~GL-SM|Sjælland~85|Strømø~FO-03|Suderø~FO-04|Syddanmark~83|Vågø~FO-05\"], [\"Djibouti\", \"DJ\", \"Ali Sabieh~AS|Arta~AR|Dikhil~DI|Obock~OB|Tadjourah~TA\"], [\"Dominica\", \"DM\", \"Saint Andrew Parish~02|Saint David Parish~03|Saint George Parish~04|Saint John Parish~05|Saint Joseph Parish~06|Saint Luke Parish~07|Saint Mark Parish~08|Saint Patrick Parish~09|Saint Paul Parish~10|Saint Peter Parish~11\"], [\"Dominican Republic\", \"DO\", \"Cibao Central~02|Del Valle~37|Distrito Nacional~01|Enriquillo~38|Norcentral~04|Nordeste~33|Noroeste~34|Norte~35|Valdesia~42\"], [\"Ecuador\", \"EC\", \"Azuay~A|Bolívar~B|Cañar~F|Carchi~C|Chimborazo~H|Cotopaxi~X|El Oro~O|Esmeraldas~E|Galápagos~W|Guayas~G|Imbabura~I|Loja~L|Los Ríos~R|Manabí~M|Morona-Santiago~S|Napo~N|Orellana~D|Pastaza~Y|Pichincha~P|Santa Elena~SE|Santo Domingo de los Tsáchilas~SD|Sucumbíos~U|Tungurahua~T|Zamora-Chinchipe~Z\"], [\"Egypt\", \"EG\", \"Alexandria~ALX|Aswan~ASN|Asyout~AST|Bani Sueif~BNS|Beheira~BH|Cairo~C|Daqahlia~DK|Dumiat~DT|El Bahr El Ahmar~BA|El Ismailia~IS|El Suez~SUZ|El Wadi El Gedeed~WAD|Fayoum~FYM|Gharbia~GH|Giza~GZ|Helwan~HU|Kafr El Sheikh~KFS|Luxor~LX|Matrouh~MT|Menia~MN|Menofia~MNF|North Sinai~SIN|Port Said~PTS|Qalubia~KB|Qena~KN|Sharqia~SHR|Sixth of October~SU|Sohag~SHG|South Sinai~JS\"], [\"El Salvador\", \"SV\", \"Ahuachapán~AH|Cabañas~CA|Cuscatlán~CU|Chalatenango~CH|La Libertad~LI|La Paz~PA|La Unión~UN|Morazán~MO|San Miguel~SM|San Salvador~SS|Santa Ana~SA|San Vicente~SV|Sonsonate~SO|Usulután~US\"], [\"Equatorial Guinea\", \"GQ\", \"Annobón~AN|Bioko Norte~BN|Bioko Sur~BS|Centro Sur~CS|Kié-Ntem~KN|Litoral~LI|Wele-Nzas~WN\"], [\"Eritrea\", \"ER\", \"Anseba~AN|Debub~DU|Debub-Keih-Bahri~DK|Gash-Barka~GB|Maekel~MA|Semien-Keih-Bahri~SK\"], [\"Estonia\", \"EE\", \"Harjumaa (Tallinn)~37|Hiiumaa (Kardla)~39|Ida-Virumaa (Johvi)~44|Järvamaa (Paide)~41|Jõgevamaa (Jogeva)~49|Läänemaa~57|Lääne-Virumaa (Rakvere)~59|Pärnumaa (Parnu)~67|Põlvamaa (Polva)~65|Raplamaa (Rapla)~70|Saaremaa (Kuessaare)~74|Tartumaa (Tartu)~78|Valgamaa (Valga)~82|Viljandimaa (Viljandi)~84|Võrumaa (Voru)~86\"], [\"Ethiopia\", \"ET\", \"Addis Ababa~AA|Afar~AF|Amhara~AM|Benshangul-Gumaz~BE|Dire Dawa~DD|Gambela~GA|Harari~HA|Oromia~OR|Somali~SO|Southern Nations Nationalities and People's Region~SN|Tigray~TI\"], [\"Falkland Islands (Islas Malvinas)\", \"FK\", \"Falkland Islands (Islas Malvinas)~undefined\"], [\"Faroe Islands\", \"FO\", \"Bordoy~undefined|Eysturoy~undefined|Mykines~undefined|Sandoy~undefined|Skuvoy~undefined|Streymoy~undefined|Suduroy~undefined|Tvoroyri~undefined|Vagar~undefined\"], [\"Fiji\", \"FJ\", \"Ba~01|Bua~02|Cakaudrove~03|Kadavu~04|Lau~05|Lomaiviti~06|Macuata~07|Nadroga and Navosa~08|Naitasiri~09|Namosi~10|Ra~11|Rewa~12|Rotuma~R|Serua~13|Tailevu~14\"], [\"Finland\", \"FI\", \"Ahvenanmaan maakunta~FI-01|Etelä-Karjala~FI-02|Etelä-Pohjanmaa~FI-03|Etelä-Savo~FI-04|Kainuu~FI-05|Kanta-Häme~FI-06|Keski-Pohjanmaa~FI-07|Keski-Suomi~FI-08|Kymenlaakso~FI-09|Lappi~FI-10|Pirkanmaa~FI-11|Pohjanmaa~FI-12|Pohjois-Karjala~FI-13|Pohjois-Pohjanmaa~FI-14|Pohjois-Savo~FI-15|Päijät-Häme~FI-16|Satakunta~FI-17|Uusimaa~FI-18|Varsinais-Suomi~FI-19\"], [\"France\", \"FR\", \"Auvergne-Rhône-Alpes~ARA|Bourgogne-Franche-Comté~BFC|Bretagne~BRE|Centre-Val de Loire~CVL|Corse~COR|Grand Est~GES|Hauts-de-France~HDF|Île-de-France~IDF|Normandie~NOR|Nouvelle-Aquitaine~NAQ|Occitanie~OCC|Pays de la Loire~PDL|Provence-Alpes-Cote d'Azur~PAC|Clipperton~CP|Guadeloupe~GP|Guyane~GF|Martinique~MQ|Mayotte~YT|Novelle-Calédonie~NC|Polynésie~PF|Saint-Pierre-et-Miquelon~PM|Saint Barthélemy~BL|Saint Martin~MF|Réunion~RE|Terres Australes Françaises~TF|Wallis-et-Futuna~WF\"], [\"French Guiana\", \"GF\", \"French Guiana~undefined\"], [\"French Polynesia\", \"PF\", \"Archipel des Marquises~undefined|Archipel des Tuamotu~undefined|Archipel des Tubuai~undefined|Iles du Vent~undefined|Iles Sous-le-Vent~undefined\"], [\"French Southern and Antarctic Lands\", \"TF\", \"Adelie Land~undefined|Ile Crozet~undefined|Iles Kerguelen~undefined|Iles Saint-Paul et Amsterdam~undefined\"], [\"Gabon\", \"GA\", \"Estuaire~1|Haut-Ogooué~2|Moyen-Ogooué~3|Ngounié~4|Nyanga~5|Ogooué-Ivindo~6|Ogooué-Lolo~7|Ogooué-Maritime~8|Woleu-Ntem~9\"], [\"Gambia, The\", \"GM\", \"Banjul~B|Central River~M|Lower River~L|North Bank~N|Upper River~U|Western~W\"], [\"Georgia\", \"GE\", \"Abkhazia (Sokhumi)~AB|Ajaria (Bat'umi)~AJ|Guria~GU|Imereti~IM|K'akheti~KA|Kvemo Kartli~KK|Mtshkheta-Mtianeti~MM|Rach'a-Lexhkumi-KvemoSvaneti~RL|Samegrelo-Zemo Svaneti~SZ|Samtskhe-Javakheti~SJ|Shida Kartli~SK|Tbilisi~TB\"], [\"Germany\", \"DE\", \"Baden-Württemberg~BW|Bayern~BY|Berlin~BE|Brandenburg~BB|Bremen~HB|Hamburg~HH|Hessen~HE|Mecklenburg-Vorpommern~MV|Niedersachsen~NI|Nordrhein-Westfalen~NW|Rheinland-Pfalz~RP|Saarland~SL|Sachsen~SN|Sachsen-Anhalt~ST|Schleswig-Holstein~SH|Thüringen~TH\"], [\"Ghana\", \"GH\", \"Ahafo~undefined|Ashanti~AH|Bono~undefined|Bono East~undefined|Central~CP|Eastern~EP|Greater Accra~AA|Northern~NP|North East~undefined|Oti~undefined|Savannah~undefined|Upper East~UE|Upper West~UW|Volta~TV|Western~WP|Western North~undefined\"], [\"Gibraltar\", \"GI\", \"Gibraltar~undefined\"], [\"Greece\", \"GR\", \"Anatolikí Makedonía kai Thráki~A|Attikḯ~I|Dytikí Elláda~G|Dytikí Makedonía~C|Ionía Nísia~F|Kentrikí Makedonía~B|Krítí~M|Notío Aigaío~L|Peloponnísos~J|Stereá Elláda~H|Thessalía~E|Voreío Aigaío~K|Ípeiros~D|Ágion Óros~69\"], [\"Greenland\", \"GL\", \"Kommune Kujalleq~KU|Kommuneqarfik Sermersooq~SM|Qaasuitsup Kommunia~QA|Qeqqata Kommunia~QE\"], [\"Grenada\", \"GD\", \"Saint Andrew~01|Saint David~02|Saint George~03|Saint John~04|Saint Mark~05|Saint Patrick~06|Southern Grenadine Islands~10\"], [\"Guadeloupe\", \"GP\", \"Guadeloupe~undefined\"], [\"Guam\", \"GU\", \"Guam~undefined\"], [\"Guatemala\", \"GT\", \"Alta Verapaz~AV|Baja Verapaz~BV|Chimaltenango~CM|Chiquimula~CQ|El Progreso~PR|Escuintla~ES|Guatemala~GU|Huehuetenango~HU|Izabal~IZ|Jalapa~JA|Jutiapa~JU|Petén~PE|Quetzaltenango~QZ|Quiché~QC|Retalhuleu~Re|Sacatepéquez~SA|San Marcos~SM|Santa Rosa~SR|Sololá~SO|Suchitepéquez~SU|Totonicapán~TO|Zacapa~ZA\"], [\"Guernsey\", \"GG\", \"Castel~undefined|Forest~undefined|St. Andrew~undefined|St. Martin~undefined|St. Peter Port~undefined|St. Pierre du Bois~undefined|St. Sampson~undefined|St. Saviour~undefined|Torteval~undefined|Vale~undefined\"], [\"Guinea\", \"GN\", \"Boké~B|Conakry~C|Faranah~F|Kankan~K|Kindia~D|Labé~L|Mamou~M|Nzérékoré~N\"], [\"Guinea-Bissau\", \"GW\", \"Bafatá~BA|Biombo~BM|Bissau~BS|Bolama-Bijagos~BL|Cacheu~CA|Gabú~GA|Oio~OI|Quinara~QU|Tombali~TO\"], [\"Guyana\", \"GY\", \"Barima-Waini~BA|Cuyuni-Mazaruni~CU|Demerara-Mahaica~DE|East Berbice-Corentyne~EB|Essequibo Islands-West Demerara~ES|Mahaica-Berbice~MA|Pomeroon-Supenaam~PM|Potaro-Siparuni~PT|Upper Demerara-Berbice~UD|Upper Takutu-Upper Essequibo~UT\"], [\"Haiti\", \"HT\", \"Artibonite~AR|Centre~CE|Grand'Anse~GA|Nippes~NI|Nord~ND|Nord-Est~NE|Nord-Ouest~NO|Ouest~OU|Sud~SD|Sud-Est~SE\"], [\"Heard Island and McDonald Islands\", \"HM\", \"Heard Island and McDonald Islands~undefined\"], [\"Holy See (Vatican City)\", \"VA\", \"Holy See (Vatican City)~01\"], [\"Honduras\", \"HN\", \"Atlántida~AT|Choluteca~CH|Colón~CL|Comayagua~CM|Copán~CP|Cortés~CR|El Paraíso~EP|Francisco Morazán~FM|Gracias a Dios~GD|Intibucá~IN|Islas de la Bahía~IB|La Paz~LP|Lempira~LE|Ocotepeque~OC|Olancho~OL|Santa Bárbara~SB|Valle~VA|Yoro~YO\"], [\"Hong Kong\", \"HK\", \"Hong Kong~HK\"], [\"Hungary\", \"HU\", \"Bács-Kiskun~BK|Baranya~BA|Békés~BE|Békéscsaba~BC|Borsod-Abauj-Zemplen~BZ|Budapest~BU|Csongrád~CS|Debrecen~DE|Dunaújváros~DU|Eger~EG|Érd~ER|Fejér~FE|Győr~GY|Győr-Moson-Sopron~GS|Hajdú-Bihar~HB|Heves~HE|Hódmezővásárhely~HV|Jász-Nagykun-Szolnok~N|Kaposvár~KV|Kecskemét~KM|Komárom-Esztergom~KE|Miskolc~MI|Nagykanizsa~NK|Nógrád~NO|Nyíregyháza~NY|Pécs~PS|Pest~PE|Salgótarján~ST|Somogy~SO|Sopron~SN|Szabolcs-á-Bereg~SZ|Szeged~SD|Székesfehérvár~SF|Szekszárd~SS|Szolnok~SK|Szombathely~SH|Tatabánya~TB|Tolna~TO|Vas~VA|Veszprém~VE|Veszprém (City)~VM|Zala~ZA|Zalaegerszeg~ZE\"], [\"Iceland\", \"IS\", \"Austurland~7|Höfuðborgarsvæði~1|Norðurland eystra~6|Norðurland vestra~5|Suðurland~8|Suðurnes~2|Vestfirðir~4|Vesturland~3\"], [\"India\", \"IN\", \"Andaman and Nicobar Islands~AN|Andhra Pradesh~AP|Arunachal Pradesh~AR|Assam~AS|Bihar~BR|Chandigarh~CH|Chhattisgarh~CT|Dadra and Nagar Haveli and Daman and Diu~DH|Delhi~DL|Goa~GA|Gujarat~GJ|Haryana~HR|Himachal Pradesh~HP|Jammu and Kashmir~JK|Jharkhand~JH|Karnataka~KA|Kerala~KL|Ladakh~LA|Lakshadweep~LD|Madhya Pradesh~MP|Maharashtra~MH|Manipur~MN|Meghalaya~ML|Mizoram~MZ|Nagaland~NL|Odisha~OR|Puducherry~PY|Punjab~PB|Rajasthan~RJ|Sikkim~SK|Tamil Nadu~TN|Telangana~TG|Tripura~TR|Uttarakhand~UT|Uttar Pradesh~UP|West Bengal~WB\"], [\"Indonesia\", \"ID\", \"Aceh~AC|Bali~BA|Bangka Belitung~BB|Banten~BT|Bengkulu~BE|Gorontalo~GO|Jakarta Raya~JK|Jambi~JA|Jawa Barat~JB|Jawa Tengah~JT|Jawa Timur~JI|Kalimantan Barat~KB|Kalimantan Selatan~KS|Kalimantan Tengah~KT|Kalimantan Timur~KI|Kalimantan Utara~KU|Kepulauan Riau~KR|Lampung~LA|Maluku~MA|Maluku Utara~MU|Nusa Tenggara Barat~NB|Nusa Tenggara Timur~NT|Papua~PA|Papua Barat~PB|Riau~RI|Sulawesi Selatan~SR|Sulawesi Tengah~ST|Sulawesi Tenggara~SG|Sulawesi Utara~SA|Sumatera Barat~SB|Sumatera Selatan~SS|Sumatera Utara~SU|Yogyakarta~YO\"], [\"Iran, Islamic Republic of\", \"IR\", \"Alborz~32|Ardabīl~03|Āz̄arbāyjān-e Gharbī~02|Āz̄arbāyjān-e Sharqī~01|Būshehr~06|Chahār Maḩāl va Bakhtīārī~08|Eşfahān~04|Fārs~14|Gīlān~19|Golestān~27|Hamadān~24|Hormozgān~23|Īlām~05|Kermān~15|Kermānshāh~17|Khorāsān-e Jonūbī~29|Khorāsān-e Raẕavī~30|Khorāsān-e Shomālī~61|Khūzestān~10|Kohgīlūyeh va Bowyer Aḩmad~18|Kordestān~16|Lorestān~20|Markazi~22|Māzandarān~21|Qazvīn~28|Qom~26|Semnān~12|Sīstān va Balūchestān~13|Tehrān~07|Yazd~25|Zanjān~11\"], [\"Iraq\", \"IQ\", \"Al Anbār~AN|Al Başrah~BA|Al Muthanná~MU|Al Qādisīyah~QA|An Najaf~NA|Arbīl~AR|As Sulaymānīyah~SU|Bābil~BB|Baghdād~BG|Dohuk~DA|Dhī Qār~DQ|Diyālá~DI|Karbalā'~KA|Kirkuk~KI|Maysān~MA|Nīnawá~NI|Şalāḩ ad Dīn~SD|Wāsiţ~WA\"], [\"Ireland\", \"IE\", \"Carlow~CW|Cavan~CN|Clare~CE|Cork~CO|Donegal~DL|Dublin~D|Galway~G|Kerry~KY|Kildare~KE|Kilkenny~KK|Laois~LS|Leitrim~LM|Limerick~LK|Longford~LD|Louth~LH|Mayo~MO|Meath~MH|Monaghan~MN|Offaly~OY|Roscommon~RN|Sligo~SO|Tipperary~TA|Waterford~WD|Westmeath~WH|Wexford~WX|Wicklow~WW\"], [\"Isle of Man\", \"IM\", \"Isle of Man~undefined\"], [\"Israel\", \"IL\", \"HaDarom~D|HaMerkaz~M|HaTsafon~Z|H̱efa~HA|Tel-Aviv~TA|Yerushalayim~JM\"], [\"Italy\", \"IT\", \"Abruzzo~65|Basilicata~77|Calabria~78|Campania~72|Emilia-Romagna~45|Friuli-Venezia Giulia~36|Lazio~62|Liguria~42|Lombardia~25|Marche~57|Molise~67|Piemonte~21|Puglia~75|Sardegna~88|Sicilia~82|Toscana~52|Trentino-Alto Adige~32|Umbria~55|Valle d'Aosta~23|Veneto~34\"], [\"Jamaica\", \"JM\", \"Clarendon~13|Hanover~09|Kingston~01|Manchester~12|Portland~04|Saint Andrew~02|Saint Ann~06|Saint Catherine~14|Saint Elizabeth~11|Saint James~08|Saint Mary~05|Saint Thomas~03|Trelawny~07|Westmoreland~10\"], [\"Japan\", \"JP\", \"Aichi~23|Akita~05|Aomori~02|Chiba~12|Ehime~38|Fukui~18|Fukuoka~40|Fukushima~07|Gifu~21|Gunma~10|Hiroshima~34|Hokkaido~01|Hyogo~28|Ibaraki~08|Ishikawa~17|Iwate~03|Kagawa~37|Kagoshima~46|Kanagawa~14|Kochi~39|Kumamoto~43|Kyoto~26|Mie~24|Miyagi~04|Miyazaki~45|Nagano~20|Nagasaki~42|Nara~29|Niigata~15|Oita~44|Okayama~33|Okinawa~47|Osaka~27|Saga~41|Saitama~11|Shiga~25|Shimane~32|Shizuoka~22|Tochigi~09|Tokushima~36|Tokyo~13|Tottori~31|Toyama~16|Wakayama~30|Yamagata~06|Yamaguchi~35|Yamanashi~19\"], [\"Jersey\", \"JE\", \"Jersey~undefined\"], [\"Jordan\", \"JO\", \"‘Ajlūn~AJ|Al 'Aqabah~AQ|Al Balqā’~BA|Al Karak~KA|Al Mafraq~MA|Al ‘A̅şimah~AM|Aţ Ţafīlah~AT|Az Zarqā’~AZ|Irbid~IR|Jarash~JA|Ma‘ān~MN|Mādabā~MD\"], [\"Kazakhstan\", \"KZ\", \"Almaty~ALA|Aqmola~AKM|Aqtobe~AKT|Astana~AST|Atyrau~ATY|Batys Qazaqstan~ZAP|Bayqongyr~undefined|Mangghystau~MAN|Ongtustik Qazaqstan~YUZ|Pavlodar~PAV|Qaraghandy~KAR|Qostanay~KUS|Qyzylorda~KZY|Shyghys Qazaqstan~VOS|Soltustik Qazaqstan~SEV|Zhambyl~ZHA\"], [\"Kenya\", \"KE\", \"Baringo~01|Bomet~02|Bungoma~03|Busia~04|Eleyo/Marakwet~05|Embu~06|Garissa~07|Homa Bay~08|Isiolo~09|Kajiado~10|Kakamega~11|Kericho~12|Kiambu~13|Kilifi~14|Kirinyaga~15|Kisii~16|Kisumu~17|Kitui~18|Kwale~19|Laikipia~20|Lamu~21|Machakos~22|Makueni~23|Mandera~24|Marsabit~25|Meru~26|Migori~27|Mombasa~28|Murang'a~29|Nairobi City~30|Nakuru~31|Nandi~32|Narok~33|Nyamira~34|Nyandarua~35|Nyeri~36|Samburu~37|Siaya~38|Taita/Taveta~39|Tana River~40|Tharaka-Nithi~41|Trans Nzoia~42|Turkana~43|Uasin Gishu~44|Vihiga~45|Wajir~46|West Pokot~47\"], [\"Kiribati\", \"KI\", \"Abaiang~undefined|Abemama~undefined|Aranuka~undefined|Arorae~undefined|Banaba~undefined|Beru~undefined|Butaritari~undefined|Central Gilberts~undefined|Gilbert Islands~G|Kanton~undefined|Kiritimati~undefined|Kuria~undefined|Line Islands~L|Maiana~undefined|Makin~undefined|Marakei~undefined|Nikunau~undefined|Nonouti~undefined|Northern Gilberts~undefined|Onotoa~undefined|Phoenix Islands~P|Southern Gilberts~undefined|Tabiteuea~undefined|Tabuaeran~undefined|Tamana~undefined|Tarawa~undefined|Teraina~undefined\"], [\"Korea, Democratic People's Republic of\", \"KP\", \"Chagang-do (Chagang Province)~04|Hamgyong-bukto (North Hamgyong Province)~09|Hamgyong-namdo (South Hamgyong Province)~08|Hwanghae-bukto (North Hwanghae Province)~06|Hwanghae-namdo (South Hwanghae Province)~05|Kangwon-do (Kangwon Province)~07|Nasŏn (Najin-Sŏnbong)~13|P'yongan-bukto (North P'yongan Province)~03|P'yongan-namdo (South P'yongan Province)~02|P'yongyang-si (P'yongyang City)~01|Yanggang-do (Yanggang Province)~10\"], [\"Korea, Republic of\", \"KR\", \"Ch'ungch'ongbuk-do~43|Ch'ungch'ongnam-do~44|Cheju-do~49|Chollabuk-do~45|Chollanam-do~46|Inch'on-Kwangyokhi~28|Kang-won-do~42|Kwangju-Kwangyokshi~29|Kyonggi-do~41|Kyongsangbuk-do~47|Kyongsangnam-do~48|Pusan-Kwangyokshi~26|Seoul-T'ukpyolshi~11|Sejong~50|Taegu-Kwangyokshi~27|Taejon-Kwangyokshi~30|Ulsan-Kwangyokshi~31\"], [\"Kosovo\", \"XK\", \"Farizaj~FZ|Gjakova~GK|Gjilan~GL|Mitrovica~MI|Peja/Peć~PE|Pristina~PR|Prizren~PZ\"], [\"Kuwait\", \"KW\", \"Al Aḩmadi~AH|Al Farwānīyah~FA|Al Jahrā’~JA|Al ‘Āşimah~KU|Ḩawallī~HA|Mubārak al Kabir~MU\"], [\"Kyrgyzstan\", \"KG\", \"Batken Oblasty~B|Bishkek Shaary~GB|Chuy Oblasty (Bishkek)~C|Jalal-Abad Oblasty~J|Naryn Oblasty~N|Osh Oblasty~O|Talas Oblasty~T|Ysyk-Kol Oblasty (Karakol)~Y\"], [\"Laos\", \"LA\", \"Attapu~AT|Bokèo~BK|Bolikhamxai~BL|Champasak~CH|Houaphan~HO|Khammouan~KH|Louang Namtha~LM|Louangphabang~LP|Oudômxai~OU|Phôngsali~PH|Salavan~SL|Savannakhét~SV|Vientiane~VI|Xaignabouli~XA|Xékong~XE|Xaisomboun~XS|Xiangkhouang~XI\"], [\"Latvia\", \"LV\", \"Aglona~001|Aizkraukle~002|Aizpute~003|Aknīste~004|Aloja~005|Alsunga~06|Alūksne~007|Amata~008|Ape~009|Auce~010|Ādaži~011|Babīte~012|Baldone~013|Baltinava~014|Balvi~015|Bauska~016|Beverīna~017|Brocēni~018|Burtnieki~019|Carnikava~020|Cesvaine~021|Cēsis~022|Cibla~023|Dagda~024|Daugavpils~025|Daugavpils (City)~DGV|Dobele~026|Dundaga~027|Durbe~028|Engure~029|Ērgļi~030|Garkalne~031|Grobiņa~032|Gulbene~033|Iecava~034|Ikšķile~035|Ilūkste~036|Inčukalns~037|Jaunjelgava~038|Jaunpiebalga~039|Jaunpils~040|Jelgava~041|Jelgava (City)~JEL|Jēkabpils~042|Jēkabpils (City)~JKB|Jūrmala (City)~JUR|Kandava~043|Kārsava~044|Kocēni~045|Koknese~046|Krāslava~047|Krimulda~048|Krustpils~049|Kuldīga~050|Ķegums~051|Ķekava~052|Lielvārde~053|Liepāja~LPX|Limbaži~054|Līgatne~055|Līvāni~056|Lubāna~057|Ludza~058|Madona~059|Mazsalaca~060|Mālpils~061|Mārupe~062|Mērsrags~063|Naukšēni~064|Nereta~065|Nīca~066|Ogre~067|Olaine~068|Ozolnieki~069|Pārgauja~070|Pāvilosta~071|Pļaviņas~072|Preiļi~073|Priekule~074|Priekuļi~075|Rauna~076|Rēzekne~077|Rēzekne (City)~REZ|Riebiņi~078|Rīga~RIX|Roja~079|Ropaži~080|Rucava~081|Rugāji~082|Rundāle~083|Rūjiena~084|Sala~085|Salacgrīva~086|Salaspils~087|Saldus~088|Saulkrasti~089|Sēja~090|Sigulda~091|Skrīveri~092|Skrunda~093|Smiltene~094|Stopiņi~095|Strenči~096|Talsi~097|Tērvete~098|Tukums~099|Vaiņode~100|Valka~101|Valmiera~VMR|Varakļāni~102|Vārkava~103|Vecpiebalga~104|Vecumnieki~105|Ventspils~106|Ventspils (City)~VEN|Viesīte~107|Viļaka~108|Viļāni~109|Zilupe~110\"], [\"Lebanon\", \"LB\", \"Aakkâr~AK|Baalbelk-Hermel~BH|Béqaa~BI|Beyrouth~BA|Liban-Nord~AS|Liban-Sud~JA|Mont-Liban~JL|Nabatîyé~NA\"], [\"Lesotho\", \"LS\", \"Berea~D|Butha-Buthe~B|Leribe~C|Mafeteng~E|Maseru~A|Mohales Hoek~F|Mokhotlong~J|Qacha's Nek~H|Quthing~G|Thaba-Tseka~K\"], [\"Liberia\", \"LR\", \"Bomi~BM|Bong~BG|Gbarpolu~GP|Grand Bassa~GB|Grand Cape Mount~CM|Grand Gedeh~GG|Grand Kru~GK|Lofa~LO|Margibi~MG|Maryland~MY|Montserrado~MO|Nimba~NI|River Cess~RI|River Geee~RG|Sinoe~SI\"], [\"Libya\", \"LY\", \"Al Buţnān~BU|Al Jabal al Akhḑar~JA|Al Jabal al Gharbī~JG|Al Jafārah~JI|Al Jufrah~JU|Al Kufrah~FK|Al Marj~MJ|Al Marquab~MB|Al Wāḩāt~WA|An Nuqaţ al Khams~NQ|Az Zāwiyah~ZA|Banghāzī~BA|Darnah~DR|Ghāt~GH|Mişrātah~MI|Murzuq~MQ|Nālūt~NL|Sabhā~SB|Surt~SR|Ţarābulus~TB|Yafran~WD|Wādī ash Shāţiʾ~WS\"], [\"Liechtenstein\", \"LI\", \"Balzers~01|Eschen~02|Gamprin~03|Mauren~04|Planken~05|Ruggell~06|Schaan~07|Schellenberg~08|Triesen~09|Triesenberg~10|Vaduz~11\"], [\"Lithuania\", \"LT\", \"Alytaus~AL|Kauno~KU|Klaipėdos~KL|Marijampolės~MR|Panevėžio~PN|Šiaulių~SA|Tauragės~TA|Telšių~TE|Utenos~UT|Vilniaus~VL\"], [\"Luxembourg\", \"LU\", \"Capellen~CA|Clevaux~CL|Diekirch~DI|Echternach~EC|Esch-sur-Alzette~ES|Grevenmacher~GR|Luxembourg~LU|Mersch~ME|Redange~RD|Remich~RM|Vianden~VD|Wiltz~WI\"], [\"Macao\", \"MO\", \"Macao~undefined\"], [\"Macedonia, Republic of\", \"MK\", \"Aračinovo~02|Berovo~03|Bitola~04|Bogdanci~05|Bogovinje~06|Bosilovo~07|Brvenica~08|Centar Župa~78|Čaška~80|Češinovo-Obleševo~81|Čučer Sandevo~82|Debar~21|Debarca~22|Delčevo~23|Demir Hisar~25|Demir Kapija~24|Doran~26|Dolneni~27|Gevgelija~18|Gostivar~19|Gradsko~20|Ilinden~34|Jegunovce~35|Karbinci~37|Kavadarci~36|Kičevo~40|Kočani~42|Konče~41|Kratovo~43|Kriva Palanka~44|Krivogaštani~45|Kruševo~46|Kumanovo~47|Lipkovo~48|Lozovo~49|Makedonska Kamenica~51|Makedonski Brod~52|Mavrovo i Rostuša~50|Mogila~53|Negotino~54|Novaci~55|Novo Selo~56|Ohrid~58|Pehčevo~60|Petrovec~59|Plasnica~61|Prilep~62|Probištip~63|Radoviš~|Rankovce~65|Resen~66|Rosoman~67|Skopje~85|Sopište~70|Staro Nagoričane~71|Struga~72|Strumica~73|Studeničani~74|Sveti Nikole~69|Štip~83|Tearce~75|Tetovo~76|Valandovo~10|Vasilevo~11|Veles~13|Vevčani~12|Vinica~14|Vrapčište~16|Zelenikovo~32|Zrnovci~33|Želino~30\"], [\"Madagascar\", \"MG\", \"Antananarivo~T|Antsiranana~D|Fianarantsoa~F|Mahajanga~M|Toamasina~A|Toliara~U\"], [\"Malawi\", \"MW\", \"Balaka~BA|Blantyre~BL|Chikwawa~CK|Chiradzulu~CR|Chitipa~CT|Dedza~DE|Dowa~DO|Karonga~KR|Kasungu~KS|Likoma~LK|Lilongwe~LI|Machinga~MH|Mangochi~MG|Mchinji~MC|Mulanje~MU|Mwanza~MW|Mzimba~MZ|Nkhata Bay~NE|Nkhotakota~NB|Nsanje~NS|Ntcheu~NU|Ntchisi~NI|Phalombe~PH|Rumphi~RU|Salima~SA|Thyolo~TH|Zomba~ZO\"], [\"Malaysia\", \"MY\", \"Johor~01|Kedah~02|Kelantan~03|Melaka~04|Negeri Sembilan~05|Pahang~06|Perak~08|Perlis~09|Pulau Pinang~07|Sabah~12|Sarawak~13|Selangor~10|Terengganu~11|Wilayah Persekutuan (Kuala Lumpur)~14|Wilayah Persekutuan (Labuan)~15|Wilayah Persekutuan (Putrajaya)~16\"], [\"Maldives\", \"MV\", \"Alifu Alifu~02|Alifu Dhaalu~00|Baa~20|Dhaalu~17|Faafu~14|Gaafu Alifu~27|Gaafu Dhaalu~28|Gnaviyani~29|Haa Alifu~07|Haa Dhaalu~23|Kaafu~26|Laamu~05|Lhaviyani~03|Malé~MLE|Meemu~12|Noonu~25|Raa~13|Seenu~01|Shaviyani~24|Thaa~08|Vaavu~04\"], [\"Mali\", \"ML\", \"Bamako~BKO|Gao~7|Kayes~1|Kidal~8|Koulikoro~2|Mopti~5|Segou~4|Sikasso~3|Tombouctou~6|Taoudénit~9|Ménaka~10\"], [\"Malta\", \"MT\", \"Attard~01|Balzan~02|Birgu~03|Birkirkara~04|Birżebbuġa~05|Bormla~06|Dingli~07|Fgura~08|Floriana~09|Fontana~10|Guda~11|Gżira~12|Għajnsielem~13|Għarb~14|Għargħur~15|Għasri~16|Għaxaq~17|Ħamrun~18|Iklin~19|Isla~20|Kalkara~21|Kerċem~22|Kirkop~23|Lija~24|Luqa~25|Marsa~26|Marsaskala~27|Marsaxlokk~28|Mdina~29|Mellieħa~30|Mġarr~31|Mosta~32|Mqabba~33|Msida~34|Mtarfa~35|Munxar~36|Nadur~37|Naxxar~38|Paola~39|Pembroke~40|Pietà~41|Qala~42|Qormi~43|Qrendi~44|Rabat Għawdex~45|Rabat Malta~46|Safi~47|San Ġiljan~48|San Ġwann~49|San Lawrenz~50|San Pawl il-Baħar~51|Sannat~52|Santa Luċija~53|Santa Venera~54|Siġġiewi~55|Sliema~56|Swieqi~57|Tai Xbiex~58|Tarzien~59|Valletta~60|Xagħra~61|Xewkija~62|Xgħajra~63|Żabbar~64|Żebbuġ Għawde~65|Żebbuġ Malta~66|Żejtun~67|Żurrieq~68\"], [\"Marshall Islands\", \"MH\", \"Ailinglaplap~ALL|Ailuk~ALK|Arno~ARN|Aur~AUR|Bikini and Kili~KIL|Ebon~EBO|Jabat~JAB|Jaluit~JAL|Kwajalein~KWA|Lae~LAE|Lib~LIB|Likiep~LIK|Majuro~MAJ|Maloelap~MAL|Mejit~MEJ|Namdrik~NMK|Namu~NMU|Rongelap~RON|Ujae~UJA|Utrik~UTI|Wotho~WTH|Wotje~WTJ\"], [\"Martinique\", \"MQ\", \"Martinique~undefined\"], [\"Mauritania\", \"MR\", \"Adrar~07|Assaba~03|Brakna~05|Dakhlet Nouadhibou~08|Gorgol~04|Guidimaka~10|Hodh Ech Chargui~01|Hodh El Gharbi~02|Inchiri~12|Nouakchott Nord~14|Nouakchott Ouest~13|Nouakchott Sud~15|Tagant~09|Tiris Zemmour~11|Trarza~06\"], [\"Mauritius\", \"MU\", \"Agalega Islands~AG|Beau Bassin-Rose Hill~BR|Black River~BL|Cargados Carajos Shoals~CC|Curepipe~CU|Flacq~FL|Grand Port~GP|Moka~MO|Pamplemousses~PA|Plaines Wilhems~PW|Port Louis (City)~PU|Port Louis~PL|Riviere du Rempart~RR|Rodrigues Island~RO|Savanne~SA|Vacoas-Phoenix~CP\"], [\"Mayotte\", \"YT\", \"Dzaoudzi~01|Pamandzi~02|Mamoudzou~03|Dembeni~04|Bandrélé~05|Kani-Kéli~06|Bouéni~07|Chirongui~08|Sada~09|Ouangani~10|Chiconi~11|Tsingoni~12|M'Tsangamouji~13|Acoua~14|Mtsamboro~15|Bandraboua~16|Koungou~17\"], [\"Mexico\", \"MX\", \"Aguascalientes~AGU|Baja California~BCN|Baja California Sur~BCS|Campeche~CAM|Ciudad de México~DIF|Chiapas~CHP|Chihuahua~CHH|Coahuila de Zaragoza~COA|Colima~COL|Durango~DUR|Estado de México~MEX|Guanajuato~GUA|Guerrero~GRO|Hidalgo~HID|Jalisco~JAL|Michoacán de Ocampo~MIC|Morelos~MOR|Nayarit~NAY|Nuevo León~NLE|Oaxaca~OAX|Puebla~PUE|Querétaro de Arteaga~QUE|Quintana Roo~ROO|San Luis Potosí~SLP|Sinaloa~SIN|Sonora~SON|Tabasco~TAB|Tamaulipas~TAM|Tlaxcala~TLA|Veracruz~VER|Yucatán~YUC|Zacatecas~ZAC\"], [\"Micronesia, Federated States of\", \"FM\", \"Chuuk (Truk)~TRK|Kosrae~KSA|Pohnpei~PNI|Yap~YAP\"], [\"Moldova\", \"MD\", \"Aenii Noi~AN|Basarabeasca~BS|Bălți~BA|Bender~BD|Briceni~BR|Cahul~CA|Cantemir~CT|Călărași~CL|Căușeni~CS|Chișinău~CU|Cimișlia~CM|Criuleni~CR|Dondușeni~DO|Drochia~DR|Dubăsari~DU|Edineț~ED|Fălești~FA|Florești~FL|Găgăuzia~GA|Glodeni~GL|Hîncești~HI|Ialoveni~IA|Leova~LE|Nisporeni~NI|Ocnița~OC|Orhei~OR|Rezina~RE|Rîșcani~RI|Sîngerei~SI|Soroca~SO|Stânga Nistrului~SN|Strășeni~ST|Șoldănești~SD|Ștefan Vodă~SV|Taraclia~TA|Telenești~TE|Ungheni~UN\"], [\"Monaco\", \"MC\", \"Colle~CL|Condamine~CO|Fontvieille~FO|Gare~GA|Jardin Exotique~JE|Larvotto~LA|Malbousquet~MA|Monaco-Ville~MO|Moneghetti~MG|Monte-Carlo~MC|Moulins~MU|Port-Hercule~PH|Saint-Roman~SR|Sainte-Dévote~SD|Source~SO|Spélugues~SP|Vallon de la Rousse~VR\"], [\"Mongolia\", \"MN\", \"Arhangay~073|Bayan-Olgiy~071|Bayanhongor~069|Bulgan~067|Darhan~037|Dornod~061|Dornogovi~063|Dundgovi~059|Dzavhan~057|Govi-Altay~065|Govi-Sumber~064|Hovd~043|Hovsgol~041|Omnogovi~053|Ovorhangay~055|Selenge~049|Suhbaatar~051|Tov~047|Ulaanbaatar~1|Uvs~046\"], [\"Montenegro\", \"ME\", \"Andrijevica~01|Bar~02|Berane~03|Bijelo Polje~04|Budva~05|Cetinje~06|Danilovgrad~07|Gusinje~22|Herceg Novi~08|Kolašin~09|Kotor~10|Mojkovac~11|Nikšić~12|Petnica~23|Plav~13|Plužine~14|Pljevlja~15|Podgorica~16|Rožaje~17|Šavnik~18|Tivat~19|Ulcinj~20|Žabljak~21\"], [\"Montserrat\", \"MS\", \"Saint Anthony~undefined|Saint Georges~undefined|Saint Peter's~undefined\"], [\"Morocco\", \"MA\", \"Tanger-Tétouan-Al Hoceïma~MA-01|L'Oriental~MA-02|Fès-Meknès~MA-03|Rabat-Salé-Kénitra~MA-04|Béni Mellal-Khénifra~MA-05|Casablanca-Settat~MA-06|Marrakech-Safi~MA-07|Drâa-Tafilalet~MA-08|Souss-Massa~MA-09|Guelmim-Oued Noun~MA-10|Laâyoune-Sakia El Hamra~MA-11|Dakhla-Oued Ed-Dahab~MA-12\"], [\"Mozambique\", \"MZ\", \"Cabo Delgado~P|Gaza~G|Inhambane~I|Manica~B|Maputo~L|Maputo (City)~MPM|Nampula~N|Niassa~A|Sofala~S|Tete~T|Zambezia~Q\"], [\"Myanmar\", \"MM\", \"Ayeyarwady~07|Bago~02|Chin~14|Kachin~11|Kayah~12|Kayin~13|Magway~03|Mandalay~04|Mon~15|Nay Pyi Taw~18|Rakhine~16|Sagaing~01|Shan~17|Tanintharyi~05|Yangon~06\"], [\"Namibia\", \"NA\", \"Erongo~ER|Hardap~HA|Kavango East~KE|Kavango West~KW|Karas~KA|Khomas~KH|Kunene~KU|Ohangwena~OW|Omaheke~OH|Omusati~OS|Oshana~ON|Oshikoto~OT|Otjozondjupa~OD|Zambezi~CA\"], [\"Nauru\", \"NR\", \"Aiwo~01|Anabar~02|Anetan~03|Anibare~04|Baiti~05|Boe~06|Buada~07|Denigomodu~08|Ewa~09|Ijuw~10|Meneng~11|Nibok~12|Uaboe~13|Yaren~14\"], [\"Nepal\", \"NP\", \"Province No. 1~1|Province No. 2~2|Bagmati Province~3|Gandaki Province~4|Lumbini Province~5|Karnali Province~6|Sudurpashchim~7\"], [\"Netherlands\", \"NL\", \"Drenthe~DR|Flevoland~FL|Friesland~FR|Gelderland~GE|Groningen~GR|Limburg~LI|Noord-Brabant~NB|Noord-Holland~NH|Overijssel~OV|Utrecht~UT|Zeeland~ZE|Zuid-Holland~ZH\"], [\"New Caledonia\", \"NC\", \"Iles Loyaute~undefined|Nord~undefined|Sud~undefined\"], [\"New Zealand\", \"NZ\", \"Auckland~AUK|Bay of Plenty~BOP|Canterbury~CAN|Gisborne~GIS|Hawke's Bay~HKB|Marlborough~MBH|Manawatu-Wanganui~MWT|Northland~NTL|Nelson~NSN|Otago~OTA|Southland~STL|Taranaki~TKI|Tasman~TAS|Waikato~WKO|Wellington~WGN|West Coast~WTC|Chatham Islands Territory~CIT\"], [\"Nicaragua\", \"NI\", \"Boaco~BO|Carazo~CA|Chinandega~CI|Chontales~CO|Estelí~ES|Granada~GR|Jinotega~JI|León~LE|Madriz~MD|Managua~MN|Masaya~MS|Matagalpa~MT|Nueva Segovia~NS|Río San Juan~SJ|Rivas~RI|Atlántico Norte~AN|Atlántico Sur~AS\"], [\"Niger\", \"NE\", \"Agadez~1|Diffa~2|Dosso~3|Maradi~4|Niamey~8|Tahoua~5|Tillabéri~6|Zinder~7\"], [\"Nigeria\", \"NG\", \"Abia~AB|Abuja Federal Capital Territory~FC|Adamawa~AD|Akwa Ibom~AK|Anambra~AN|Bauchi~BA|Bayelsa~BY|Benue~BE|Borno~BO|Cross River~CR|Delta~DE|Ebonyi~EB|Edo~ED|Ekiti~EK|Enugu~EN|Gombe~GO|Imo~IM|Jigawa~JI|Kaduna~KD|Kano~KN|Katsina~KT|Kebbi~KE|Kogi~KO|Kwara~KW|Lagos~LA|Nassarawa~NA|Niger~NI|Ogun~OG|Ondo~ON|Osun~OS|Oyo~OY|Plateau~PL|Rivers~RI|Sokoto~SO|Taraba~TA|Yobe~YO|Zamfara~ZA\"], [\"Niue\", \"NU\", \"Niue~undefined\"], [\"Norfolk Island\", \"NF\", \"Norfolk Island~undefined\"], [\"Northern Mariana Islands\", \"MP\", \"Northern Islands~undefined|Rota~undefined|Saipan~undefined|Tinian~undefined\"], [\"Norway\", \"NO\", \"Akershus~02|Aust-Agder~09|Buskerud~06|Finnmark~20|Hedmark~04|Hordaland~12|Møre og Romsdal~15|Nordland~18|Nord-Trøndelag~17|Oppland~05|Oslo~03|Rogaland~11|Sogn og Fjordane~14|Sør-Trøndelag~16|Telemark~08|Troms~19|Vest-Agder~10|Vestfold~07|Østfold~01|Jan Mayen~22|Svalbard~21\"], [\"Oman\", \"OM\", \"Ad Dakhiliyah~DA|Al Buraymi~BU|Al Wusta~WU|Az Zahirah~ZA|Janub al Batinah~BS|Janub ash Sharqiyah~SS|Masqat~MA|Musandam~MU|Shamal al Batinah~BJ|Shamal ash Sharqiyah~SJ|Zufar~ZU\"], [\"Pakistan\", \"PK\", \"Āzād Kashmīr~JK|Balōchistān~BA|Gilgit-Baltistān~GB|Islāmābād~IS|Khaībar Pakhtūnkhwās~KP|Punjāb~PB|Sindh~SD|Federally Administered Tribal Areas~TA\"], [\"Palau\", \"PW\", \"Aimeliik~002|Airai~004|Angaur~010|Hatobohei~050|Kayangel~100|Koror~150|Melekeok~212|Ngaraard~214|Ngarchelong~218|Ngardmau~222|Ngatpang~224|Ngchesar~226|Ngeremlengui~227|Ngiwal~228|Peleliu~350|Sonsoral~370\"], [\"Palestine, State of\", \"PS\", \"Ak Khalīl~HBN|Al Quds~JEM|Arīḩā wal Aghwār~JRH|Bayt Laḩm~BTH|Dayr al Balaḩ~DEB|Ghazzah~GZA|Janīn~JEN|Khān Yūnis~KYS|Nāblus~NBS|Qalqīyah~QQA|Rafaḩ~RFH|Rām Allāh wal Bīrah~RBH|Salfīt~SLT|Shamāl Ghazzah~NGZ|Ţūbās~TBS|Ţūlkarm~TKM\"], [\"Panama\", \"PA\", \"Bocas del Toro~1|Chiriquí~4|Coclé~2|Colón~3|Darién~5|Emberá~EM|Herrera~6|Kuna Yala~KY|Los Santos~7|Ngäbe-Buglé~NB|Panamá~8|Panamá Oeste~10|Veraguas~9\"], [\"Papua New Guinea\", \"PG\", \"Bougainville~NSB|Central~CPM|Chimbu~CPK|East New Britain~EBR|East Sepik~ESW|Eastern Highlands~EHG|Enga~EPW|Gulf~GPK|Hela~HLA|Jiwaka~JWK|Madang~MOM|Manus~MRL|Milne Bay~MBA|Morobe~MPL|Port Moresby~NCD|New Ireland~NIK|Northern~NPP|Southern Highlands~SHM|West New Britain~WBK|West Sepik~SAN|Western~WPD|Western Highlands~WHM\"], [\"Paraguay\", \"PY\", \"Alto Paraguay~16|Alto Parana~10|Amambay~13|Asuncion~ASU|Caaguazu~5|Caazapa~6|Canindeyu~14|Central~11|Concepcion~1|Cordillera~3|Boqueron~17|Guaira~4|Itapua~7|Misiones~8|Neembucu~12|Paraguari~9|Presidente Hayes~15|San Pedro~2\"], [\"Peru\", \"PE\", \"Amazonas~AMA|Ancash~ANC|Apurimac~APU|Arequipa~ARE|Ayacucho~AYA|Cajamarca~CAJ|Callao~CAL|Cusco~CUS|Huancavelica~HUV|Huanuco~HUC|Ica~ICA|Junin~JUN|La Libertad~LAL|Lambayeque~LAM|Lima~LIM|Loreto~LOR|Madre de Dios~MDD|Moquegua~MOQ|Municipalidad Metropolitana de Lima~LMA|Pasco~PAS|Piura~PIU|Puno~PUN|San Martin~SAM|Tacna~TAC|Tumbes~TUM|Ucayali~UCA\"], [\"Philippines\", \"PH\", \"Abra~ABR|Agusan del Norte~AGN|Agusan del Sur~AGS|Aklan~AKL|Albay~ALB|Antique~ANT|Apayao~APA|Aurora~AUR|Basilan~BAS|Bataan~BAN|Batanes~BTN|Batangas~BTG|Benguet~BEN|Biliran~BIL|Bohol~BOH|Bukidnon~BUK|Bulacan~BUL|Cagayan~CAG|Camarines Norte~CAN|Camarines Sur~CAS|Camiguin~CAM|Capiz~CAP|Catanduanes~CAT|Cavite~CAV|Cebu~CEB|Compostela~COM|Cotabato~NCO|Davao del Norte~DAV|Davao del Sur~DAS|Davao Occidental~DVO|Davao Oriental~DAO|Dinagat Islands~DIN|Eastern Samar~EAS|Guimaras~GUI|Ifugao~IFU|Ilocos Norte~ILN|Ilocos Sur~ILS|Iloilo~ILI|Isabela~ISA|Kalinga~KAL|La Union~LUN|Laguna~LAG|Lanao del Norte~LAN|Lanao del Sur~LAS|Leyte~LEY|Maguindanao~MAG|Masbate~MAS|Metro Manila~00|Mindoro Occidental~MDC|Mindoro Oriental~MDR|Misamis Occidental~MSC|Misamis Oriental~MSR|Mountain Province~MOU|Negros Occidental~NEC|Negros Oriental~NER|Northern Samar~NSA|Nueva Ecija~NUE|Nueva Vizcaya~NUV|Palawan~PLW|Pampanga~PAM|Pangasinan~PAN|Quezon~QUE|Quirino~QUI|Rizal~RIZ|Romblon~ROM|Samar~WSA|Sarangani~SAR|Siquijor~SIG|Sorsogon~SOR|Southern Leyte~SLE|Sultan Kudarat~AUK|Sulu~SLU|Surigao del Norte~SUN|Surigao del Sur~SUR|Tarlac~TAR|Tawi-Tawi~TAW|Zambales~ZMB|Zamboanga del Norte~ZAN|Zamboanga del Sur~ZAS|Zamboanga Sibugay~ZSI\"], [\"Pitcairn\", \"PN\", \"Pitcairn Islands~undefined\"], [\"Poland\", \"PL\", \"Dolnośląskie~DS|Kujawsko-pomorskie~KP|Łódzkie~LD|Lubelskie~LU|Lubuskie~LB|Małopolskie~MA|Mazowieckie~MZ|Opolskie~OP|Podkarpackie~PK|Podlaskie~PD|Pomorskie~PM|Śląskie~SL|Świętokrzyskie~SK|Warmińsko-mazurskie~WN|Wielkopolskie~WP|Zachodniopomorskie~ZP\"], [\"Portugal\", \"PT\", \"Açores~20|Aveiro~01|Beja~02|Braga~03|Bragança~04|Castelo Branco~05|Coimbra~06|Évora~07|Faro~08|Guarda~09|Leiria~10|Lisboa~11|Madeira~30|Portalegre~12|Porto~13|Santarém~14|Setúbal~15|Viana do Castelo~16|Vila Real~17|Viseu~18\"], [\"Puerto Rico\", \"PR\", \"Adjuntas~undefined|Aguada~undefined|Aguadilla~undefined|Aguas Buenas~undefined|Aibonito~undefined|Anasco~undefined|Arecibo~undefined|Arroyo~undefined|Barceloneta~undefined|Barranquitas~undefined|Bayamon~undefined|Cabo Rojo~undefined|Caguas~undefined|Camuy~undefined|Canovanas~undefined|Carolina~undefined|Cat~undefined|Ceiba~undefined|Ciales~undefined|Cidra~undefined|Coamo~undefined|Comerio~undefined|Corozal~undefined|Culebra~undefined|Dorado~undefined|Fajardo~undefined|Florida~undefined|Guanica~undefined|Guayama~undefined|Guayanilla~undefined|Guaynabo~undefined|Gurabo~undefined|Hatillo~undefined|Hormigueros~undefined|Humacao~undefined|Isabe~undefined|Juana Diaz~undefined|Juncos~undefined|Lajas~undefined|Lares~undefined|Las Marias~undefined|Las oiza~undefined|Luquillo~undefined|Manati~undefined|Maricao~undefined|Maunabo~undefined|Mayaguez~undefined|Moca~undefined|Morovis~undefined|Naguabo~undefined|Naranjito~undefined|Orocovis~undefined|Patillas~undefined|Penuelas~undefined|Ponce~undefined|Quebradillas~undefined|Rincon~undefined|Rio Grande~undefined|Sabana linas~undefined|San German~undefined|San Juan~undefined|San Lorenzo~undefined|San Sebastian~undefined|Santa Isabel~undefined|Toa Alta~undefined|Toa Baja~undefined|Trujillo Alto~undefined|Utuado~undefined|Vega Alta~undefined|Vega ues~undefined|Villalba~undefined|Yabucoa~undefined|Yauco~undefined\"], [\"Qatar\", \"QA\", \"Ad Dawḩah~DA|Al Khawr wa adh Dhakhīrah~KH|Al Wakrah~WA|Ar Rayyān~RA|Ash Shamāl~MS|Az̧ Za̧`āyin~ZA|Umm Şalāl~US\"], [\"Réunion\", \"RE\", \"Réunion~undefined\"], [\"Romania\", \"RO\", \"Alba~AB|Arad~AR|Arges~AG|Bacau~BC|Bihor~BH|Bistrita-Nasaud~BN|Botosani~BT|Braila~BR|Brasov~BV|Bucuresti~B|Buzau~BZ|Calarasi~CL|Caras-Severin~CS|Cluj~CJ|Constanta~CT|Covasna~CV|Dambovita~DB|Dolj~DJ|Galati~GL|Giurgiu~GR|Gorj~GJ|Harghita~HR|Hunedoara~HD|Ialomita~IL|Iasi~IS|Maramures~MM|Mehedinti~MH|Mures~MS|Neamt~NT|Olt~OT|Prahova~PH|Salaj~SJ|Satu Mare~SM|Sibiu~SB|Suceava~SV|Teleorman~TR|Timis~TM|Tulcea~TL|Valcea~VL|Vaslui~VS|Vrancea~VN\"], [\"Russian Federation\", \"RU\", \"Republic of Adygea~AD|Republic of Altai (Gorno-Altaysk)~AL|Altai Krai~ALT|Amur Oblast~AMU|Arkhangelsk Oblast~ARK|Astrakhan Oblast~AST|Republic of Bashkortostan~BA|Belgorod Oblast~BEL|Bryansk Oblast~BRY|Republic of Buryatia~BU|Chechen Republic~CE|Chelyabinsk Oblast~CHE|Chukotka Autonomous Okrug~CHU|Chuvash Republic~CU|Republic of Dagestan~DA|Republic of Ingushetia~IN|Irkutsk Oblast~IRK|Ivanovo Oblast~IVA|Jewish Autonomous Oblast~JEW|Kabardino-Balkar Republic~KB|Kaliningrad Oblast~KLN|Republic of Kalmykia~KL|Kaluga Oblast~KLU|Kamchatka Krai~KAM|Karachay-Cherkess Republic~KC|Republic of Karelia~KR|Khabarovsk Krai~KHA|Republic of Khakassia~KK|Khanty-Mansi Autonomous Okrug - Yugra~KHM|Kemerovo Oblast~KEM|Kirov Oblast~KIR|Komi Republic~KO|Kostroma Oblast~KOS|Krasnodar Krai~KDA|Krasnoyarsk Krai~KYA|Kurgan Oblast~KGN|Kursk Oblast~KRS|Leningrad Oblast~LEN|Lipetsk Oblast~LIP|Magadan Oblast~MAG|Mari El Republic~ME|Republic of Mordovia~MO|Moscow Oblast~MOS|Moscow~MOW|Murmansk Oblast~MU|Nenets Autonomous Okrug~NEN|Nizhny Novgorod Oblast~NIZ|Novgorod Oblast~NGR|Novosibirsk Oblast~NVS|Omsk Oblast~OMS|Orenburg Oblast~ORE|Oryol Oblast~ORL|Penza Oblast~PNZ|Perm Krai~PER|Primorsky Krai~PRI|Pskov Oblast~PSK|Rostov Oblast~ROS|Ryazan Oblast~RYA|Saint Petersburg~SPE|Sakha (Yakutia) Republic~SA|Sakhalin Oblast~SAK|Samara Oblast~SAM|Saratov Oblast~SAR|Republic of North Ossetia-Alania~NOA|Smolensk Oblast~SMO|Stavropol Krai~STA|Sverdlovsk Oblast~SVE|Tambov Oblast~TAM|Republic of Tatarstan~TA|Tomsk Oblast~TOM|Tuva Republic~TU|Tula Oblast~TUL|Tver Oblast~TVE|Tyumen Oblast~TYU|Udmurt Republic~UD|Ulyanovsk Oblast~ULY|Vladimir Oblast~VLA|Volgograd Oblast~VGG|Vologda Oblast~VLG|Voronezh Oblast~VOR|Yamalo-Nenets Autonomous Okrug~YAN|Yaroslavl Oblast~YAR|Zabaykalsky Krai~ZAB\"], [\"Rwanda\", \"RW\", \"Kigali~01|Eastern~02|Northern~03|Western~04|Southern~05\"], [\"Saint Barthélemy\", \"BL\", \"Au Vent~02|Sous le Vent~01\"], [\"Saint Helena, Ascension and Tristan da Cunha\", \"SH\", \"Ascension~AC|Saint Helena~HL|Tristan da Cunha~TA\"], [\"Saint Kitts and Nevis\", \"KN\", \"Saint Kitts~K|Nevis~N\"], [\"Saint Lucia\", \"LC\", \"Anse-la-Raye~01|Canaries~12|Castries~02|Choiseul~03|Dennery~05|Gros Islet~06|Laborie~07|Micoud~08|Soufriere~10|Vieux Fort~11\"], [\"Saint Martin\", \"MF\", \"Saint Martin~undefined\"], [\"Saint Pierre and Miquelon\", \"PM\", \"Miquelon~undefined|Saint Pierre~undefined\"], [\"Saint Vincent and the Grenadines\", \"VC\", \"Charlotte~01|Grenadines~06|Saint Andrew~02|Saint David~03|Saint George~04|Saint Patrick~05\"], [\"Samoa\", \"WS\", \"A'ana~AA|Aiga-i-le-Tai~AL|Atua~AT|Fa'asaleleaga~FA|Gaga'emauga~GE|Gagaifomauga~GI|Palauli~PA|Satupa'itea~SA|Tuamasaga~TU|Va'a-o-Fonoti~VF|Vaisigano~VS\"], [\"San Marino\", \"SM\", \"Acquaviva~01|Borgo Maggiore~06|Chiesanuova~02|Domagnano~03|Faetano~04|Fiorentino~05|Montegiardino~08|San Marino~07|Serravalle~09\"], [\"Sao Tome and Principe\", \"ST\", \"Principe~P|Sao Tome~S\"], [\"Saudi Arabia\", \"SA\", \"'Asir~14|Al Bahah~11|Al Hudud ash Shamaliyah~08|Al Jawf~12|Al Madinah al Munawwarah~03|Al Qasim~05|Ar Riyad~01|Ash Sharqiyah~04|Ha'il~06|Jazan~09|Makkah al Mukarramah~02|Najran~10|Tabuk~07\"], [\"Senegal\", \"SN\", \"Dakar~DK|Diourbel~DB|Fatick~FK|Kaffrine~KA|Kaolack~KL|Kedougou~KE|Kolda~KD|Louga~LG|Matam~MT|Saint-Louis~SL|Sedhiou~SE|Tambacounda~TC|Thies~TH|Ziguinchor~ZG\"], [\"Serbia\", \"RS\", \"Beograd (Belgrade)~00|Borski~14|Braničevski~11|Jablanički~23|Južnobački~06|Južnobanatski~04|Kolubarski~09|Kosovski~25|Kosovsko-Mitrovački~28|Kosovsko-Pomoravski~29|Mačvanski~08|Moravički~17|Nišavski~20|Pčinjski~24|Pećki~26|Pirotski~22|Podunavski~10|Pomoravski~13|Prizrenski~27|Rasinski~19|Raški~18|Severnobački~01|Severnobanatski~03|Srednjebanatski~02|Sremski~07|Šumadijski~12|Toplički~21|Zaječarski~15|Zapadnobački~05|Zlatiborski~16\"], [\"Seychelles\", \"SC\", \"Anse aux Pins~01|Anse Boileau~02|Anse Etoile~03|Anse Royale~05|Anu Cap~04|Baie Lazare~06|Baie Sainte Anne~07|Beau Vallon~08|Bel Air~09|Bel Ombre~10|Cascade~11|Glacis~12|Grand'Anse Mahe~13|Grand'Anse Praslin~14|La Digue~15|La Riviere Anglaise~16|Les Mamelles~24|Mont Buxton~17|Mont Fleuri~18|Plaisance~19|Pointe La Rue~20|Port Glaud~21|Roche Caiman~25|Saint Louis~22|Takamaka~23\"], [\"Sierra Leone\", \"SL\", \"Eastern~E|Northern~N|Southern~S|Western~W\"], [\"Singapore\", \"SG\", \"Central Singapore~01|North East~02|North West~03|South East~04|South West~05\"], [\"Sint Maarten (Dutch part)\", \"SX\", \"Sint Maarten~undefined\"], [\"Slovakia\", \"SK\", \"Banskobystricky~BC|Bratislavsky~BL|Kosicky~KI|Nitriansky~NI|Presovsky~PV|Trenciansky~TC|Trnavsky~TA|Zilinsky~ZI\"], [\"Slovenia\", \"SI\", \"Ajdovscina~001|Apace~195|Beltinci~002|Benedikt~148|Bistrica ob Sotli~149|Bled~003|Bloke~150|Bohinj~004|Borovnica~005|Bovec~006|Braslovce~151|Brda~007|Brezice~009|Brezovica~008|Cankova~152|Celje~011|Cerklje na Gorenjskem~012|Cerknica~013|Cerkno~014|Cerkvenjak~153|Cirkulane~196|Crensovci~015|Crna na Koroskem~016|Crnomelj~017|Destrnik~018|Divaca~019|Dobje~154|Dobrepolje~020|Dobrna~155|Dobrova-Polhov Gradec~021|Dobrovnik~156|Dol pri Ljubljani~022|Dolenjske Toplice~157|Domzale~023|Dornava~024|Dravograd~025|Duplek~026|Gorenja Vas-Poljane~027|Gorisnica~028|Gorje~207|Gornja Radgona~029|Gornji Grad~030|Gornji Petrovci~031|Grad~158|Grosuplje~032|Hajdina~159|Hoce-Slivnica~160|Hodos~161|Horjul~162|Hrastnik~034|Hrpelje-Kozina~035|Idrija~036|Ig~037|Ilirska Bistrica~038|Ivancna Gorica~039|Izola~040|Jesenice~041|Jursinci~042|Kamnik~043|Kanal~044|Kidricevo~045|Kobarid~046|Kobilje~047|Kocevje~048|Komen~049|Komenda~164|Koper~050|Kodanjevica na Krki~197|Kostel~165|Kozje~051|Kranj~052|Kranjska Gora~053|Krizevci~166|Krsko~054|Kungota~055|Kuzma~056|Lasko~057|Lenart~058|Lendava~059|Litija~060|Ljubljana~061|Ljubno~062|Ljutomer~063|Log-Dragomer~208|Logatec~064|Loska Dolina~065|Loski Potok~066|Lovrenc na Pohorju~167|Lukovica~068|Luce~067|Majsperk~069|Makole~198|Maribor~070|Markovci~168|Medvode~071|Menges~072|Metlika~073|Mezica~074|Miklavz na Dravskem Polju~169|Miren-Kostanjevica~075|Mirna~212|Mirna Pec~170|Mislinja~076|Mokronog-Trebelno~199|Moravce~077|Moravske Toplice~078|Mozirje~079|Murska Sobota~080|Naklo~082|Nazarje~083|Nova Gorica~084|Novo Mesto~085|Odranci~086|Ormoz~087|Osilnica~088|Pesnica~089|Piran~090|Pivka~091|Podcetrtek~092|Podlehnik~172|Podvelka~093|Poljcane~200|Postojna~094|Prebold~174|Preddvor~095|Prevalje~175|Ptuj~096|Race-Fram~098|Radece~099|Radenci~100|Radlje ob Dravi~101|Radovljica~102|Ravne na Koroskem~103|Razkrizje~176|Recica ob Savinji~209|Rence-Vogrsko~201|Ribnica~104|Ribnica na Poboriu~177|Rogaska Slatina~106|Rogasovci~105|Rogatec~107|Ruse~108|Salovci~033|Selnica ob Dravi~178|Semic~109|Sempeter-Vrtojba~183|Sencur~117|Sentilj~118|Sentjernej~119|Sentjur~120|Sentrupert~211|Sevnica~110|Sezana~111|Skocjan~121|Skofja Loka~122|Skofljica~123|Slovenj Gradec~112|Slovenska Bistrica~113|Slovenske Konjice~114|Smarje pri elsah~124|Smarjeske Toplice~206|Smartno ob Paki~125|Smartno pri Litiji~194|Sodrazica~179|Solcava~180|Sostanj~126|Sredisce ob Dravi~202|Starse~115|Store~127|Straza~203|Sveta Ana~181|Sveta Trojica v Slovenskih Goricah~204|Sveta Andraz v Slovenskih Goricah~182|Sveti Jurij~116|Sveti Jurij v Slovenskih Goricah~210|Sveti Tomaz~205|Tabor~184|Tisina~010|Tolmin~128|Trbovlje~129|Trebnje~130|Trnovska Vas~185|Trzin~186|Trzic~131|Turnisce~132|Velenje~133|Velika Polana~187|Velike Lasce~134|Verzej~188|Videm~135|Vipava~136|Vitanje~137|Vodice~138|Vojnik~139|Vransko~189|Vrhnika~140|Vuzenica~141|Zagorje ob Savi~142|Zavrc~143|Zrece~144|Zalec~190|Zelezniki~146|Zetale~191|Ziri~147|Zirovnica~192|Zuzemberk~193\"], [\"Solomon Islands\", \"SB\", \"Central~CE|Choiseul~CH|Guadalcanal~GU|Honiara~CT|Isabel~IS|Makira-Ulawa~MK|Malaita~ML|Rennell and Bellona~RB|Temotu~TE|Western~WE\"], [\"Somalia\", \"SO\", \"Awdal~AW|Bakool~BK|Banaadir~BN|Bari~BR|Bay~BY|Galguduud~GA|Gedo~GE|Hiiraan~HI|Jubbada Dhexe~JD|Jubbada Hoose~JH|Mudug~MU|Nugaal~NU|Sanaag~SA|Shabeellaha Dhexe~SD|Shabeellaha Hoose~SH|Sool~SO|Togdheer~TO|Woqooyi Galbeed~WO\"], [\"South Africa\", \"ZA\", \"Eastern Cape~EC|Free State~FS|Gauteng~GT|KwaZulu-Natal~NL|Limpopo~LP|Mpumalanga~MP|Northern Cape~NC|North West~NW|Western Cape~WC\"], [\"South Georgia and South Sandwich Islands\", \"GS\", \"Bird Island~undefined|Bristol Island~undefined|Clerke Rocks~undefined|Montagu Island~undefined|Saunders Island~undefined|South Georgia~undefined|Southern Thule~undefined|Traversay Islands~undefined\"], [\"South Sudan\", \"SS\", \"Central Equatoria~CE|Eastern Equatoria~EE|Jonglei~JG|Lakes~LK|Northern Bahr el Ghazal~BN|Unity~UY|Upper Nile~NU|Warrap~WR|Western Bahr el Ghazal~BW|Western Equatoria~EW\"], [\"Spain\", \"ES\", \"Albacete~AB|Alicante~A|Almería~AN|Araba/Álava~VI|Asturias~O|Ávila~AV|Badajoz~BA|Barcelona~B|Bizkaia~BI|Burgos~BU|Cáceres~CC|Cádiz~CA|Cantabria~S|Castellón/Castelló~CS|Ceuta~CE|Ciudad Real~CR|Córdoba~CO|A Coruña~C|Cuenca~CU|Gipuzkoa~SS|Girona~GI|Granada~GR|Guadalajara~GU|Huelva~H|Huesca~HU|Illes Balears~PM|Jaén~J|León~LE|Lleida~L|Lugo~LU|Madrid~M|Málaga~MA|Melilla~ML|Murcia~MU|Navarra/Nafarroa~NA|Ourense~OR|Palencia~P|Las Palmas~GC|Pontevedra~PO|La Rioja~LO|Salamanca~SA|Santa Cruz de Tenerife~TF|Segovia~SG|Sevilla~SE|Soria~SO|Tarragona~T|Teruel~TE|Toledo~TO|Valencia/València~V|Valladolid~VA|Zamora~ZA|Zaragoza~Z\"], [\"Sri Lanka\", \"LK\", \"Basnahira~1|Dakunu~3|Madhyama~2|Naegenahira~5|Sabaragamuwa~9|Uturu~4|Uturumaeda~7|Vayamba~6|Uva~8\"], [\"Sudan\", \"SD\", \"Al Bahr al Ahmar~RS|Al Jazirah~GZ|Al Khartum~KH|Al Qadarif~GD|An Nil al Abyad~NW|An Nil al Azraq~NB|Ash Shamaliyah~NO|Gharb Darfur~DW|Gharb Kurdufan~GK|Janub Darfur~DS|Janub Kurdufan~KS|Kassala~KA|Nahr an Nil~NR|Shamal Darfur~DN|Sharq Darfur~DE|Shiamal Kurdufan~KN|Sinnar~SI|Wasat Darfur Zalinjay~DC\"], [\"Suriname\", \"SR\", \"Brokopondo~BR|Commewijne~CM|Coronie~CR|Marowijne~MA|Nickerie~NI|Para~PR|Paramaribo~PM|Saramacca~SA|Sipaliwini~SI|Wanica~WA\"], [\"Swaziland\", \"SZ\", \"Hhohho~HH|Lubombo~LU|Manzini~MA|Shiselweni~SH\"], [\"Sweden\", \"SE\", \"Blekinge~K|Dalarna~W|Gävleborg~X|Gotland~I|Halland~N|Jämtland~Z|Jönköping~F|Kalmar~H|Kronoberg~G|Norrbotten~BD|Örebro~T|Östergötland~E|Skåne~M|Södermanland~D|Stockholm~AB|Uppsala~C|Värmland~S|Västerbotten~AC|Västernorrland~Y|Västmanland~U|Västra Götaland~O\"], [\"Switzerland\", \"CH\", \"Aargau~AG|Appenzell Ausserrhoden~AR|Appenzell Innerhoden~AI|Basel-Landschaft~BL|Basel-Stadt~BS|Bern~BE|Fribourg~FR|Genève~GE|Glarus~GL|Graubünden~GR|Jura~JU|Luzern~LU|Neuchâtel~NE|Nidwalden~NW|Obwalden~OW|Sankt Gallen~SG|Schaffhausen~SH|Schwyz~SZ|Solothurn~SO|Thurgau~TG|Ticino~TI|Uri~UR|Valais~VS|Vaud~VD|Zug~ZG|Zürich~ZH\"], [\"Syrian Arab Republic\", \"SY\", \"Al Hasakah~HA|Al Ladhiqiyah~LA|Al Qunaytirah~QU|Ar Raqqah~RA|As Suwayda'~SU|Dar'a~DR|Dayr az Zawr~DY|Dimashq~DI|Halab~HL|Hamah~HM|Hims~HI|Idlib~ID|Rif Dimashq~RD|Tartus~TA\"], [\"Taiwan\", \"TW\", \"Chang-hua~CHA|Chia-i~CYQ|Hsin-chu~HSQ|Hua-lien~HUA|Kao-hsiung~KHH|Keelung~KEE|Kinmen~KIN|Lienchiang~LIE|Miao-li~MIA|Nan-t'ou~NAN|P'eng-hu~PEN|New Taipei~NWT|P'ing-tung~PING|T'ai-chung~TXG|T'ai-nan~TNN|T'ai-pei~TPE|T'ai-tung~TTT|T'ao-yuan~TAO|Yi-lan~ILA|Yun-lin~YUN\"], [\"Tajikistan\", \"TJ\", \"Dushanbe~DU|Kŭhistoni Badakhshon~GB|Khatlon~KT|Sughd~SU\"], [\"Tanzania, United Republic of\", \"TZ\", \"Arusha~01|Coast~19|Dar es Salaam~02|Dodoma~03|Iringa~04|Kagera~05|Kigoma~08|Kilimanjaro~09|Lindi~12|Manyara~26|Mara~13|Mbeya~14|Morogoro~16|Mtwara~17|Mwanza~18|Pemba North~06|Pemba South~10|Rukwa~20|Ruvuma~21|Shinyanga~22|Singida~23|Tabora~24|Tanga~25|Zanzibar North~07|Zanzibar Central/South~11|Zanzibar Urban/West~15\"], [\"Thailand\", \"TH\", \"Amnat Charoen~37|Ang Thong~15|Bueng Kan~38|Buri Ram~31|Chachoengsao~24|Chai Nat~18|Chaiyaphum~36|Chanthaburi~22|Chiang Mai~50|Chiang Rai~57|Chon Buri~20|Chumphon~86|Kalasin~46|Kamphaeng Phet~62|Kanchanaburi~71|Khon Kaen~40|Krabi~81|Krung Thep Mahanakhon (Bangkok)~10|Lampang~52|Lamphun~51|Loei~42|Lop Buri~16|Mae Hong Son~58|Maha Sarakham~44|Mukdahan~49|Nakhon Nayok~26|Nakhon Phathom~73|Nakhon Phanom~48|Nakhon Ratchasima~30|Nakhon Sawan~60|Nakhon Si Thammarat~80|Nan~55|Narathiwat~96|Nong Bua Lam Phu~39|Nong Khai~43|Nonthaburi~12|Pathum Thani~13|Pattani~94|Phangnga~82|Phatthalung~93|Phayao~56|Phetchabun~67|Phetchaburi~76|Phichit~66|Phitsanulok~65|Phra Nakhon Si Ayutthaya~14|Phrae~54|Phuket~83|Prachin Buri~25|Prachuap Khiri Khan~77|Ranong~85|Ratchaburi~70|Rayong~21|Roi Et~45|Sa Kaeo~27|Sakon Nakhon~47|Samut Prakan~11|Samut Sakhon~74|Samut Songkhram~75|Saraburi~19|Satun~91|Sing Buri~17|Si Sa ket~33|Songkhla~90|Sukhothai~64|Suphan Buri~72|Surat Thani~84|Surin~32|Tak~63|Trang~92|Trat~23|Ubon Ratchathani~34|Udon Thani~41|Uthai Thani~61|Uttaradit~53|Yala~95|Yasothon~35\"], [\"Timor-Leste\", \"TL\", \"Aileu~AL|Ainaro~AN|Baucau~BA|Bobonaro~BO|Cova Lima~CO|Dili~DI|Ermera~ER|Lautem~LA|Liquica~LI|Manatuto~MT|Manufahi~MF|Oecussi~OE|Viqueque~VI\"], [\"Togo\", \"TG\", \"Centre~C|Kara~K|Maritime~M|Plateaux~P|Savannes~S\"], [\"Tokelau\", \"TK\", \"Atafu~undefined|Fakaofo~undefined|Nukunonu~undefined\"], [\"Tonga\", \"TO\", \"'Eua~01|Ha'apai~02|Niuas~03|Tongatapu~04|Vava'u~05\"], [\"Trinidad and Tobago\", \"TT\", \"Arima~ARI|Chaguanas~CHA|Couva-Tabaquite-Talparo~CTT|Diefo Martin~DMN|Mayaro-Rio Claro~MRC|Penal-Debe~PED|Point Fortin~PTF|Port-of-Spain~POS|Princes Town~PRT|San Fernando~SFO|San Juan-Laventille~SJL|Sangre Grande~SGE|Siparia~SIP|Tobago~TOB|Tunapuna-Piarco~TUP\"], [\"Tunisia\", \"TN\", \"Ariana~12|Beja~31|Ben Arous~13|Bizerte~23|Gabes~81|Gafsa~71|Jendouba~32|Kairouan~41|Kasserine~42|Kebili~73|Kef~33|Mahdia~53|Medenine~82|Monastir~52|Nabeul~21|Sfax~61|Sidi Bouzid~43|Siliana~34|Sousse~51|Tataouine~83|Tozeur~72|Tunis~11|Zaghouan~22\"], [\"Turkey\", \"TR\", \"Adana~01|Adiyaman~02|Afyonkarahisar~03|Agri~04|Aksaray~68|Amasya~05|Ankara~06|Antalya~07|Ardahan~75|Artvin~08|Aydin~09|Balikesir~10|Bartin~74|Batman~72|Bayburt~69|Bilecik~11|Bingol~12|Bitlis~13|Bolu~14|Burdur~15|Bursa~16|Canakkale~17|Cankiri~18|Corum~19|Denizli~20|Diyarbakir~21|Duzce~81|Edirne~22|Elazig~23|Erzincan~24|Erzurum~25|Eskisehir~26|Gaziantep~27|Giresun~28|Gumushane~29|Hakkari~30|Hatay~31|Igdir~76|Isparta~32|Istanbul~34|Izmir~35|Kahramanmaras~46|Karabuk~78|Karaman~70|Kars~36|Kastamonu~37|Kayseri~38|Kilis~79|Kirikkale~71|Kirklareli~39|Kirsehir~40|Kocaeli~41|Konya~42|Kutahya~43|Malatya~44|Manisa~45|Mardin~47|Mersin~33|Mugla~48|Mus~49|Nevsehir~50|Nigde~51|Ordu~52|Osmaniye~80|Rize~53|Sakarya~54|Samsun~55|Sanliurfa~63|Siirt~56|Sinop~57|Sirnak~73|Sivas~58|Tekirdag~59|Tokat~60|Trabzon~61|Tunceli~62|Usak~64|Van~65|Yalova~77|Yozgat~66|Zonguldak~67\"], [\"Turkmenistan\", \"TM\", \"Ahal~A|Asgabat~S|Balkan~B|Dashoguz~D|Lebap~L|Mary~M\"], [\"Turks and Caicos Islands\", \"TC\", \"Turks and Caicos Islands~undefined\"], [\"Tuvalu\", \"TV\", \"Funafuti~FUN|Nanumanga~NMG|Nanumea~NMA|Niutao~NIT|Nui~NUI|Nukufetau~NKF|Nukulaelae~NKL|Vaitupu~VAU\"], [\"Uganda\", \"UG\", \"Abim~317|Adjumani~301|Amolatar~314|Amuria~216|Amuru~319|Apac~302|Arua~303|Budaka~217|Bududa~223|Bugiri~201|Bukedea~224|Bukwa~218|Buliisa~419|Bundibugyo~401|Bushenyi~402|Busia~202|Butaleja~219|Dokolo~318|Gulu~304|Hoima~403|Ibanda~416|Iganga~203|Isingiro~417|Jinja~204|Kaabong~315|Kabale~404|Kabarole~405|Kaberamaido~213|Kalangala~101|Kaliro~220|Kampala~102|Kamuli~205|Kamwenge~413|Kanungu~414|Kapchorwa~206|Kasese~406|Katakwi~207|Kayunga~112|Kibaale~407|Kiboga~103|Kiruhura~418|Kisoro~408|Kitgum~305|Koboko~316|Kotido~306|Kumi~208|Kyenjojo~415|Lira~307|Luwero~104|Lyantonde~116|Manafwa~221|Maracha~320|Masaka~105|Masindi~409|Mayuge~214|Mbale~209|Mbarara~410|Mityana~114|Moroto~308|Moyo~309|Mpigi~106|Mubende~107|Mukono~108|Nakapiripirit~311|Nakaseke~115|Nakasongola~109|Namutumba~222|Nebbi~310|Ntungamo~411|Oyam~321|Pader~312|Pallisa~210|Rakai~110|Rukungiri~412|Sembabule~111|Sironko~215|Soroti~211|Tororo~212|Wakiso~113|Yumbe~313\"], [\"Ukraine\", \"UA\", \"Cherkasy~71|Chernihiv~74|Chernivtsi~77|Dnipropetrovsk~12|Donetsk~14|Ivano-Frankivsk~26|Kharkiv~63|Kherson~65|Khmelnytskyi~68|Kiev~32|Kirovohrad~35|Luhansk~09|Lviv~46|Mykolaiv~48|Odessa~51|Poltava~53|Rivne~56|Sumy~59|Ternopil~61|Vinnytsia~05|Volyn~07|Zakarpattia~21|Zaporizhia~23|Zhytomyr~18|Avtonomna Respublika Krym~43|Kyïv~30|Sevastopol~40\"], [\"United Arab Emirates\", \"AE\", \"Abu Dhabi~AZ|Ajman~AJ|Dubai~DU|Fujairah~FU|Ras al Khaimah~RK|Sharjah~SH|Umm Al Quwain~UQ\"], [\"United Kingdom\", \"GB\", \"Aberdeen City~ABE|Aberdeenshire~ABD|Angus~ANS|Antrim and Newtownabbey~ANN|Ards and North Down~AND|Argyll and Bute~AGB|Armagh, Banbridge and Craigavon~ABC|Barking and Dagenham~BDG|Barnet~BNE|Barnsley~BNS|Bath and North East Somerset~BAS|Bedford~BDF|Belfast~BFS|Bexley~BEX|Birmingham~BIR|Blackburn with Darwen~BBD|Blackpool~BPL|Blaenau Gwent~BGW|Bolton~BOL|Bournemouth~BMH|Bracknell Forest~BRC|Bradford~BRD|Brent~BEN|Bridgend~BGE|Brighton and Hove~BNH|Bristol, City of~BST|Bromley~BRY|Buckinghamshire~BKM|Bury~BUR|Caerphilly~CAY|Calderdale~CLD|Cambridgeshire~CAM|Camden~CMD|Cardiff~CRF|Carmarthenshire~CMN|Causeway Coast and Glens~CCG|Central Bedfordshire~CBF|Ceredigion~CGN|Cheshire East~CHE|Cheshire West and Chester~CHW|Clackmannanshire~CLK|Conwy~CWY|Cornwall~CON|Coventry~COV|Croydon~CRY|Cumbria~CMA|Darlington~DAL|Denbighshire~DEN|Derby~DER|Derbyshire~DBY|Derry and Strabane~DRS|Devon~DEV|Doncaster~DNC|Dorset~DOR|Dudley~DUD|Dumfries and Galloway~DGY|Dundee City~DND|Durham County~DUR|Ealing~EAL|East Ayrshire~EAY|East Dunbartonshire~EDU|East Lothian~ELN|East Renfrewshire~ERW|East Riding of Yorkshire~ERY|East Sussex~ESX|Edinburgh, City of~EDH|Eilean Siar~ELS|Enfield~ENF|Essex~ESS|Falkirk~FAL|Fermanagh and Omagh~FMO|Fife~FIF|Flintshire~FLN|Gateshead~GAT|Glasgow City~GLG|Gloucestershire~GLS|Greenwich~GRE|Gwynedd~GWN|Hackney~HCK|Halton~HAL|Hammersmith and Fulham~HMF|Hampshire~HAM|Haringey~HRY|Harrow~HRW|Hartlepool~HPL|Havering~HAV|Herefordshire~HEF|Hertfordshire~HRT|Highland~HLD|Hillingdon~HIL|Hounslow~HNS|Inverclyde~IVC|Isle of Anglesey~AGY|Isle of Wight~IOW|Isles of Scilly~IOS|Islington~ISL|Kensington and Chelsea~KEC|Kent~KEN|Kingston upon Hull~KHL|Kingston upon Thames~KTT|Kirklees~KIR|Knowsley~KWL|Lambeth~LBH|Lancashire~LAN|Leeds~LDS|Leicester~LCE|Leicestershire~LEC|Lewisham~LEW|Lincolnshire~LIN|Lisburn and Castlereagh~LBC|Liverpool~LIV|London, City of~LND|Luton~LUT|Manchester~MAN|Medway~MDW|Merthyr Tydfil~MTY|Merton~MRT|Mid and East Antrim~MEA|Mid Ulster~MUL|Middlesbrough~MDB|Midlothian~MLN|Milton Keynes~MIK|Monmouthshire~MON|Moray~MRY|Neath Port Talbot~NTL|Newcastle upon Tyne~NET|Newham~NWM|Newport~NWP|Newry, Mourne and Down~NMD|Norfolk~NFK|North Ayrshire~NAY|North East Lincolnshire~NEL|North Lanarkshire~NLK|North Lincolnshire~NLN|North Somerset~NSM|North Tyneside~NTY|North Yorkshire~NYK|Northamptonshire~NTH|Northumberland~NBL|Nottingham~NGM|Nottinghamshire~NTT|Oldham~OLD|Orkney Islands~ORK|Oxfordshire~OXF|Pembrokeshire~PEM|Perth and Kinross~PKN|Peterborough~PTE|Plymouth~PLY|Poole~POL|Portsmouth~POR|Powys~POW|Reading~RDG|Redbridge~RDB|Redcar and Cleveland~RCC|Renfrewshire~RFW|Rhondda, Cynon, Taff~RCT|Richmond upon Thames~RIC|Rochdale~RCH|Rotherham~ROT|Rutland~RUT|St. Helens~SHN|Salford~SLF|Sandwell~SAW|Scottish Borders, The~SCB|Sefton~SFT|Sheffield~SHF|Shetland Islands~ZET|Shropshire~SHR|Slough~SLG|Solihull~SOL|Somerset~SOM|South Ayrshire~SAY|South Gloucestershire~SGC|South Lanarkshire~SLK|South Tyneside~STY|Southampton~STH|Southend-on-Sea~SOS|Southwark~SWK|Staffordshire~STS|Stirling~STG|Stockport~SKP|Stockton-on-Tees~STT|Stoke-on-Trent~STE|Suffolk~SFK|Sunderland~SND|Surrey~SRY|Sutton~STN|Swansea~SWA|Swindon~SWD|Tameside~TAM|Telford and Wrekin~TFW|Thurrock~THR|Torbay~TOB|Torfaen~TOF|Tower Hamlets~TWH|Trafford~TRF|Vale of Glamorgan, The~VGL|Wakefield~WKF|Walsall~WLL|Waltham Forest~WFT|Wandsworth~WND|Warrington~WRT|Warwickshire~WAR|West Berkshire~WBK|West Dunbartonshire~WDU|West Lothian~WLN|West Sussex~WSX|Westminster~WSM|Wigan~WGN|Wiltshire~WIL|Windsor and Maidenhead~WNM|Wirral~WRL|Wokingham~WOK|Wolverhampton~WLV|Worcestershire~WOR|Wrexham~WRX|York~YOR\"], [\"United States\", \"US\", \"Alabama~AL|Alaska~AK|American Samoa~AS|Arizona~AZ|Arkansas~AR|California~CA|Colorado~CO|Connecticut~CT|Delaware~DE|District of Columbia~DC|Micronesia~FM|Florida~FL|Georgia~GA|Guam~GU|Hawaii~HI|Idaho~ID|Illinois~IL|Indiana~IN|Iowa~IA|Kansas~KS|Kentucky~KY|Louisiana~LA|Maine~ME|Marshall Islands~MH|Maryland~MD|Massachusetts~MA|Michigan~MI|Minnesota~MN|Mississippi~MS|Missouri~MO|Montana~MT|Nebraska~NE|Nevada~NV|New Hampshire~NH|New Jersey~NJ|New Mexico~NM|New York~NY|North Carolina~NC|North Dakota~ND|Northern Mariana Islands~MP|Ohio~OH|Oklahoma~OK|Oregon~OR|Palau~PW|Pennsylvania~PA|Puerto Rico~PR|Rhode Island~RI|South Carolina~SC|South Dakota~SD|Tennessee~TN|Texas~TX|Utah~UT|Vermont~VT|Virgin Islands~VI|Virginia~VA|Washington~WA|West Virginia~WV|Wisconsin~WI|Wyoming~WY|Armed Forces Americas~AA|Armed Forces Europe, Canada, Africa and Middle East~AE|Armed Forces Pacific~AP\"], [\"United States Minor Outlying Islands\", \"UM\", \"Baker Island~81|Howland Island~84|Jarvis Island~86|Johnston Atoll~67|Kingman Reef~89|Midway Islands~71|Navassa Island~76|Palmyra Atoll~95|Wake Island~79|Bajo Nuevo Bank~BN|Serranilla Bank~SB\"], [\"Uruguay\", \"UY\", \"Artigas~AR|Canelones~CA|Cerro Largo~CL|Colonia~CO|Durazno~DU|Flores~FS|Florida~FD|Lavalleja~LA|Maldonado~MA|Montevideo~MO|Paysandú~PA|Río Negro~RN|Rivera~RV|Rocha~RO|Salto~SA|San José~SJ|Soriano~SO|Tacuarembó~TA|Treinta y Tres~TT\"], [\"Uzbekistan\", \"UZ\", \"Toshkent shahri~TK|Andijon~AN|Buxoro~BU|Farg‘ona~FA|Jizzax~JI|Namangan~NG|Navoiy~NW|Qashqadaryo (Qarshi)~QA|Samarqand~SA|Sirdaryo (Guliston)~SI|Surxondaryo (Termiz)~SU|Toshkent wiloyati~TO|Xorazm (Urganch)~XO|Qoraqalpog‘iston Respublikasi (Nukus)~QR\"], [\"Vanuatu\", \"VU\", \"Malampa~MAP|Pénama~PAM|Sanma~SAM|Shéfa~SEE|Taféa~TAE|Torba~TOB\"], [\"Venezuela, Bolivarian Republic of\", \"VE\", \"Dependencias Federales~W|Distrito Federal~A|Amazonas~Z|Anzoátegui~B|Apure~C|Aragua~D|Barinas~E|Bolívar~F|Carabobo~G|Cojedes~H|Delta Amacuro~Y|Falcón~I|Guárico~J|Lara~K|Mérida~L|Miranda~M|Monagas~N|Nueva Esparta~O|Portuguesa~P|Sucre~R|Táchira~S|Trujillo~T|Vargas~X|Yaracuy~U|Zulia~V\"], [\"Vietnam\", \"VN\", \"Đồng Nai~39|Đồng Tháp~45|Gia Lai~30|Hà Giang~03|Hà Nam~63|Hà Tây~15|Hà Tĩnh~23|Hải Dương~61|Hậu Giang~73|Hòa Bình~14|Hưng Yên~66|Khánh Hòa~34|Kiên Giang~47|Kon Tum~28|Lai Châu~01|Lâm Đồng~35|Lạng Sơn~09|Lào Cai~02|Long An~41|Nam Định~67|Nghệ An~22|Ninh Bình~18|Ninh Thuận~36|Phú Thọ~68|Phú Yên~32|Quảng Bình~24|Quảng Nam~27|Quảng Ngãi~29|Quảng Ninh~13|Quảng Trị~25|Sóc Trăng~52|Sơn La~05|Tây Ninh~37|Thái Bình~20|Thái Nguyên~69|Thanh Hóa~21|Thừa Thiên–Huế~26|Tiền Giang~46|Trà Vinh~51|Tuyên Quang~07|Vĩnh Long~49|Vĩnh Phúc~70|Yên Bái~06|Cần Thơ~CT|Đà Nẵng~DN|Hà Nội~HN|Hải Phòng~HP|Hồ Chí Minh (Sài Gòn)~SG\"], [\"Virgin Islands, British\", \"VG\", \"Anegada~ANG|Jost Van Dyke~JVD|Tortola~TTA|Virgin Gorda~VGD\"], [\"Virgin Islands, U.S.\", \"VI\", \"St. Thomas~STH|St. John~SJO|St. Croix~SCR\"], [\"Wallis and Futuna\", \"WF\", \"Alo~ALO|Sigave~SIG|Wallis~WAL\"], [\"Western Sahara\", \"EH\", \"Es Smara~ESM|Boujdour~BOD|Laâyoune~LAA|Aousserd~AOU|Oued ed Dahab~OUD\"], [\"Yemen\", \"YE\", \"Abyān~AB|'Adan~AD|Aḑ Ḑāli'~DA|Al Bayḑā'~BA|Al Ḩudaydah~HU|Al Jawf~JA|Al Mahrah~MR|Al Maḩwīt~MW|'Amrān~AM|Dhamār~DH|Ḩaḑramawt~HD|Ḩajjah~HJ|Ibb~IB|Laḩij~LA|Ma'rib~MA|Raymah~RA|Şā‘dah~SD|Şan‘ā'~SN|Shabwah~SH|Tā‘izz~TA\"], [\"Zambia\", \"ZM\", \"Central~02|Copperbelt~08|Eastern~03|Luapula~04|Lusaka~09|Northern~05|North-Western~06|Southern~07|Western~01\"], [\"Zimbabwe\", \"ZW\", \"Bulawayo~BU|Harare~HA|Manicaland~MA|Mashonaland Central~MC|Mashonaland East~ME|Mashonaland West~MW|Masvingo~MV|Matabeleland North~MN|Matabeleland South~MS|Midlands~MI\"]];\nvar C = {\n  DISPLAY_TYPE_FULL: 'full',\n  DISPLAY_TYPE_SHORT: 'short',\n  REGION_LIST_DELIMITER: '|',\n  SINGLE_REGION_DELIMITER: '~'\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}; // reduces the subset of countries depending on whether the user specified a white/blacklist, and lists priority\n// countries first\n\n\nvar filterCountries = function filterCountries(countries, priorityCountries, whitelist, blacklist) {\n  var countriesListedFirst = [];\n  var filteredCountries = countries;\n\n  if (whitelist.length > 0) {\n    filteredCountries = countries.filter(function (_ref) {\n      var _ref2 = slicedToArray(_ref, 2),\n          countrySlug = _ref2[1];\n\n      return whitelist.indexOf(countrySlug) > -1;\n    });\n  } else if (blacklist.length > 0) {\n    filteredCountries = countries.filter(function (_ref3) {\n      var _ref4 = slicedToArray(_ref3, 2),\n          countrySlug = _ref4[1];\n\n      return blacklist.indexOf(countrySlug) === -1;\n    });\n  }\n\n  if (priorityCountries.length > 0) {\n    // ensure the countries are added in the order in which they are specified by the user\n    priorityCountries.forEach(function (slug) {\n      var result = filteredCountries.find(function (_ref5) {\n        var _ref6 = slicedToArray(_ref5, 2),\n            countrySlug = _ref6[1];\n\n        return countrySlug === slug;\n      });\n\n      if (result) {\n        countriesListedFirst.push(result);\n      }\n    });\n    filteredCountries = filteredCountries.filter(function (_ref7) {\n      var _ref8 = slicedToArray(_ref7, 2),\n          countrySlug = _ref8[1];\n\n      return priorityCountries.indexOf(countrySlug) === -1;\n    });\n  }\n\n  return countriesListedFirst.length ? [].concat(countriesListedFirst, toConsumableArray(filteredCountries)) : filteredCountries;\n}; // called when requesting new regions. It reduces the subset of regions depending on whether the user specifies\n// a white/blacklist\n\n\nvar filterRegions = function filterRegions(regionsObject, whitelistObject, blacklistObject) {\n  var _regionsObject = slicedToArray(regionsObject, 3),\n      country = _regionsObject[0],\n      countryCode = _regionsObject[1],\n      regions = _regionsObject[2];\n\n  var whitelist = whitelistObject.hasOwnProperty(countryCode) ? whitelistObject[countryCode] : [];\n  var blacklist = blacklistObject.hasOwnProperty(countryCode) ? blacklistObject[countryCode] : [];\n  var filteredRegions = regions.split('|');\n\n  if (whitelist.length > 0 && filteredRegions.length > 0) {\n    filteredRegions = filteredRegions.filter(function (region) {\n      for (var i = 0, n = whitelist.length; i < n; i++) {\n        if (region.indexOf(whitelist[i]) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  } else if (blacklist.length > 0 && filteredRegions.length > 0) {\n    filteredRegions = filteredRegions.filter(function (region) {\n      for (var i = 0, n = blacklist.length; i < n; i++) {\n        if (region.indexOf(blacklist[i]) > -1) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  return [country, countryCode, filteredRegions.join('|')];\n};\n\nvar CountryDropdown = function (_Component) {\n  inherits(CountryDropdown, _Component);\n\n  function CountryDropdown(props) {\n    classCallCheck(this, CountryDropdown);\n\n    var _this = possibleConstructorReturn(this, (CountryDropdown.__proto__ || Object.getPrototypeOf(CountryDropdown)).call(this, props));\n\n    _this.state = {\n      countries: filterCountries(CountryRegionData, props.priorityOptions, props.whitelist, props.blacklist)\n    };\n    return _this;\n  }\n\n  createClass(CountryDropdown, [{\n    key: 'getCountries',\n    value: function getCountries() {\n      var _props = this.props,\n          valueType = _props.valueType,\n          labelType = _props.labelType;\n      return this.state.countries.map(function (_ref) {\n        var _ref2 = slicedToArray(_ref, 2),\n            countryName = _ref2[0],\n            countrySlug = _ref2[1];\n\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('option', {\n          value: valueType === C.DISPLAY_TYPE_SHORT ? countrySlug : countryName,\n          key: countrySlug\n        }, labelType === C.DISPLAY_TYPE_SHORT ? countrySlug : countryName);\n      });\n    }\n  }, {\n    key: 'getDefaultOption',\n    value: function getDefaultOption() {\n      var _props2 = this.props,\n          showDefaultOption = _props2.showDefaultOption,\n          defaultOptionLabel = _props2.defaultOptionLabel;\n\n      if (!showDefaultOption) {\n        return null;\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('option', {\n        value: '',\n        key: 'default'\n      }, defaultOptionLabel);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      // unused properties deliberately added so arbitraryProps gets populated with anything else the user specifies\n      var _props3 = this.props,\n          name = _props3.name,\n          id = _props3.id,\n          classes = _props3.classes,\n          value = _props3.value,\n          _onChange = _props3.onChange,\n          _onBlur = _props3.onBlur,\n          disabled = _props3.disabled,\n          showDefaultOption = _props3.showDefaultOption,\n          defaultOptionLabel = _props3.defaultOptionLabel,\n          labelType = _props3.labelType,\n          valueType = _props3.valueType,\n          whitelist = _props3.whitelist,\n          blacklist = _props3.blacklist,\n          customOptions = _props3.customOptions,\n          priorityOptions = _props3.priorityOptions,\n          arbitraryProps = objectWithoutProperties(_props3, ['name', 'id', 'classes', 'value', 'onChange', 'onBlur', 'disabled', 'showDefaultOption', 'defaultOptionLabel', 'labelType', 'valueType', 'whitelist', 'blacklist', 'customOptions', 'priorityOptions']);\n\n      var attrs = _extends({}, arbitraryProps, {\n        name: name,\n        value: value,\n        onChange: function onChange(e) {\n          return _onChange(e.target.value, e);\n        },\n        onBlur: function onBlur(e) {\n          return _onBlur(e.target.value, e);\n        },\n        disabled: disabled\n      });\n\n      if (id) {\n        attrs.id = id;\n      }\n\n      if (classes) {\n        attrs.className = classes;\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('select', attrs, this.getDefaultOption(), this.getCountries());\n    }\n  }]);\n  return CountryDropdown;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\nCountryDropdown.propTypes = {\n  value: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number]),\n  name: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  id: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  classes: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  showDefaultOption: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,\n  defaultOptionLabel: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number]),\n  priorityOptions: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array,\n  onChange: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\n  onBlur: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\n  labelType: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf([C.DISPLAY_TYPE_FULL, C.DISPLAY_TYPE_SHORT]),\n  valueType: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf([C.DISPLAY_TYPE_FULL, C.DISPLAY_TYPE_SHORT]),\n  whitelist: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array,\n  blacklist: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array,\n  disabled: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool\n};\nCountryDropdown.defaultProps = {\n  value: '',\n  name: 'rcrs-country',\n  id: '',\n  classes: '',\n  showDefaultOption: true,\n  defaultOptionLabel: 'Select Country',\n  priorityOptions: [],\n  onChange: function onChange() {},\n  onBlur: function onBlur() {},\n  labelType: C.DISPLAY_TYPE_FULL,\n  valueType: C.DISPLAY_TYPE_FULL,\n  whitelist: [],\n  blacklist: [],\n  disabled: false\n};\n\nvar RegionDropdown = function (_PureComponent) {\n  inherits(RegionDropdown, _PureComponent);\n\n  function RegionDropdown(props) {\n    classCallCheck(this, RegionDropdown);\n\n    var _this = possibleConstructorReturn(this, (RegionDropdown.__proto__ || Object.getPrototypeOf(RegionDropdown)).call(this, props));\n\n    _this.state = {\n      regions: _this.getRegions(props.country)\n    };\n    _this.getRegions = _this.getRegions.bind(_this);\n    return _this;\n  }\n\n  createClass(RegionDropdown, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var country = this.props.country;\n\n      if (country === prevProps.country) {\n        return;\n      }\n\n      var defaultRegions = this.getRegions(country);\n      this.setState({\n        regions: [].concat(toConsumableArray(defaultRegions), toConsumableArray(this.getCustomOptions(defaultRegions)))\n      });\n    }\n  }, {\n    key: 'getCustomOptions',\n    value: function getCustomOptions(regions) {\n      var customOptions = this.props.customOptions;\n      var duplicateRegions = this.getDuplicates(regions);\n\n      if (duplicateRegions.length) {\n        console.error('Error: Duplicate regions present: ' + duplicateRegions.toString() + '.\\nThe above item(s) is/are already getting added to the region dropdown by the library.');\n        return [];\n      }\n\n      return customOptions.map(function (option) {\n        if (option) {\n          return {\n            regionName: option,\n            regionShortCode: option\n          };\n        }\n      });\n    }\n  }, {\n    key: 'getDuplicates',\n    value: function getDuplicates(regions) {\n      var _props = this.props,\n          customOptions = _props.customOptions,\n          valueType = _props.valueType;\n      var regionKey = valueType === C.DISPLAY_TYPE_FULL ? 'regionName' : 'regionShortCode';\n      return regions.filter(function (region) {\n        return customOptions.indexOf(region[regionKey]) !== -1;\n      }).map(function (region) {\n        return region[regionKey];\n      });\n    }\n  }, {\n    key: 'getRegions',\n    value: function getRegions(country) {\n      if (!country) {\n        return [];\n      }\n\n      var _props2 = this.props,\n          countryValueType = _props2.countryValueType,\n          whitelist = _props2.whitelist,\n          blacklist = _props2.blacklist;\n      var searchIndex = countryValueType === C.DISPLAY_TYPE_FULL ? 0 : 1;\n      var regions = [];\n      CountryRegionData.forEach(function (i) {\n        if (i[searchIndex] === country) {\n          regions = i;\n        }\n      }); // this could happen if the user is managing the state of the region/country themselves and screws up passing\n      // in a valid country\n\n      if (!regions || regions.length === 0) {\n        console.error('Error. Unknown country passed: ' + country + '. If you\\'re passing a country shortcode, be sure to include countryValueType=\"short\" on the RegionDropdown');\n        return [];\n      }\n\n      var filteredRegions = filterRegions(regions, whitelist, blacklist);\n      return filteredRegions[2].split(C.REGION_LIST_DELIMITER).map(function (regionPair) {\n        var _regionPair$split = regionPair.split(C.SINGLE_REGION_DELIMITER),\n            _regionPair$split2 = slicedToArray(_regionPair$split, 2),\n            regionName = _regionPair$split2[0],\n            _regionPair$split2$ = _regionPair$split2[1],\n            regionShortCode = _regionPair$split2$ === undefined ? null : _regionPair$split2$;\n\n        return {\n          regionName: regionName,\n          regionShortCode: regionShortCode\n        };\n      });\n    }\n  }, {\n    key: 'getRegionList',\n    value: function getRegionList() {\n      var _props3 = this.props,\n          labelType = _props3.labelType,\n          valueType = _props3.valueType;\n      return this.state.regions.map(function (_ref) {\n        var regionName = _ref.regionName,\n            regionShortCode = _ref.regionShortCode;\n        var label = labelType === C.DISPLAY_TYPE_FULL ? regionName : regionShortCode;\n        var value = valueType === C.DISPLAY_TYPE_FULL ? regionName : regionShortCode;\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('option', {\n          value: value,\n          key: regionName\n        }, label);\n      });\n    } // there are two default options. The \"blank\" option which shows up when the user hasn't selected a country yet, and\n    // a \"default\" option which shows\n\n  }, {\n    key: 'getDefaultOption',\n    value: function getDefaultOption() {\n      var _props4 = this.props,\n          blankOptionLabel = _props4.blankOptionLabel,\n          showDefaultOption = _props4.showDefaultOption,\n          defaultOptionLabel = _props4.defaultOptionLabel,\n          country = _props4.country;\n\n      if (!country) {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('option', {\n          value: ''\n        }, blankOptionLabel);\n      }\n\n      if (showDefaultOption) {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('option', {\n          value: ''\n        }, defaultOptionLabel);\n      }\n\n      return null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props5 = this.props,\n          value = _props5.value,\n          country = _props5.country,\n          _onChange = _props5.onChange,\n          _onBlur = _props5.onBlur,\n          id = _props5.id,\n          name = _props5.name,\n          classes = _props5.classes,\n          disabled = _props5.disabled,\n          blankOptionLabel = _props5.blankOptionLabel,\n          showDefaultOption = _props5.showDefaultOption,\n          defaultOptionLabel = _props5.defaultOptionLabel,\n          labelType = _props5.labelType,\n          valueType = _props5.valueType,\n          countryValueType = _props5.countryValueType,\n          disableWhenEmpty = _props5.disableWhenEmpty,\n          customOptions = _props5.customOptions,\n          arbitraryProps = objectWithoutProperties(_props5, ['value', 'country', 'onChange', 'onBlur', 'id', 'name', 'classes', 'disabled', 'blankOptionLabel', 'showDefaultOption', 'defaultOptionLabel', 'labelType', 'valueType', 'countryValueType', 'disableWhenEmpty', 'customOptions']);\n      var isDisabled = disabled || disableWhenEmpty && country === '';\n\n      var attrs = _extends({}, arbitraryProps, {\n        name: name,\n        value: value,\n        onChange: function onChange(e) {\n          return _onChange(e.target.value, e);\n        },\n        onBlur: function onBlur(e) {\n          return _onBlur(e.target.value, e);\n        },\n        disabled: isDisabled\n      });\n\n      if (id) {\n        attrs.id = id;\n      }\n\n      if (classes) {\n        attrs.className = classes;\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('select', attrs, this.getDefaultOption(), this.getRegionList());\n    }\n  }]);\n  return RegionDropdown;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"PureComponent\"]);\n\nRegionDropdown.propTypes = {\n  country: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  countryValueType: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf([C.DISPLAY_TYPE_FULL, C.DISPLAY_TYPE_SHORT]),\n  value: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number]),\n  name: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  id: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  classes: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  blankOptionLabel: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  showDefaultOption: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,\n  defaultOptionLabel: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  onChange: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\n  onBlur: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\n  labelType: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  valueType: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\n  whitelist: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,\n  blacklist: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,\n  disabled: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,\n  disableWhenEmpty: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,\n  customOptions: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array\n};\nRegionDropdown.defaultProps = {\n  country: '',\n  value: '',\n  name: 'rcrs-region',\n  id: '',\n  classes: '',\n  blankOptionLabel: '-',\n  showDefaultOption: true,\n  defaultOptionLabel: 'Select Region',\n  onChange: function onChange() {},\n  onBlur: function onBlur() {},\n  countryValueType: C.DISPLAY_TYPE_FULL,\n  labelType: C.DISPLAY_TYPE_FULL,\n  valueType: C.DISPLAY_TYPE_FULL,\n  whitelist: {},\n  blacklist: {},\n  disabled: false,\n  disableWhenEmpty: false,\n  customOptions: []\n};\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/rajju/Sites/REACT-WEBSITES/d9-music/tw2-02-music/node_modules/@babel/runtime/regenerator/index.js","/Users/rajju/Sites/REACT-WEBSITES/d9-music/tw2-02-music/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","/Users/rajju/Sites/REACT-WEBSITES/d9-music/tw2-02-music/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","/Users/rajju/Sites/REACT-WEBSITES/d9-music/tw2-02-music/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","/Users/rajju/Sites/REACT-WEBSITES/d9-music/tw2-02-music/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","/Users/rajju/Sites/REACT-WEBSITES/d9-music/tw2-02-music/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","/Users/rajju/Sites/REACT-WEBSITES/d9-music/tw2-02-music/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","/Users/rajju/Sites/REACT-WEBSITES/d9-music/tw2-02-music/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","/Users/rajju/Sites/REACT-WEBSITES/d9-music/tw2-02-music/node_modules/regenerator-runtime/runtime.js","../src/constants.js","../src/helpers.js","../src/CountryDropdown.js","../src/RegionDropdown.js"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","undefined","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","reverse","length","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","filterCountries","countriesListedFirst","filteredCountries","whitelist","countrySlug","blacklist","priorityCountries","filterRegions","country","countryCode","regions","whitelistObject","blacklistObject","filteredRegions","n","region","CountryDropdown","helpers","props","valueType","labelType","countryName","C","showDefaultOption","defaultOptionLabel","id","classes","onChange","onBlur","disabled","customOptions","priorityOptions","arbitraryProps","e","Component","PropTypes","bool","RegionDropdown","prevProps","defaultRegions","duplicateRegions","regionName","regionShortCode","regionKey","countryValueType","searchIndex","regionPair","label","blankOptionLabel","disableWhenEmpty","isDisabled","PureComponent","array"],"mappings":";;;;;AAAA,iBAAiB,mBAAO,CAAC,GAAqB;;;;;;;;;ACA9C;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,C;;;;;;;;;;;;;AClCe;AACf;AACA,C;;ACFe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,+BAA+B;AAC5E;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,C;;ACzBe;AACf;;AAEA,wCAAwC,SAAS;AACjD;AACA;;AAEA;AACA,C;;ACR2E;AAC5D;AACf;AACA,oCAAoC,iBAAgB;AACpD;AACA;AACA;AACA,sFAAsF,iBAAgB;AACtG,C;;ACRe;AACf;AACA,C;;ACFuE;AACY;AACY;AACtB;AAC1D;AACf,SAAS,eAAc,SAAS,qBAAoB,YAAY,2BAA0B,YAAY,gBAAe;AACrH,C;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAI,UAAUC,OAAV,EAAmB;AAChC;;AAEA,MAAIC,EAAE,GAAGC,MAAM,CAACC,SAAhB;AACA,MAAIC,MAAM,GAAGH,EAAE,CAACI,cAAhB;AACA,MAAIC,SAAJ,CALgC,CAKjB;;AACf,MAAIC,OAAO,GAAG,OAAOC,MAAP,KAAkB,UAAlB,GAA+BA,MAA/B,GAAwC,EAAtD;AACA,MAAIC,cAAc,GAAGF,OAAO,CAACG,QAAR,IAAoB,YAAzC;AACA,MAAIC,mBAAmB,GAAGJ,OAAO,CAACK,aAAR,IAAyB,iBAAnD;AACA,MAAIC,iBAAiB,GAAGN,OAAO,CAACO,WAAR,IAAuB,eAA/C;;AAEA,WAASC,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,KAA1B,EAAiC;AAC/BhB,UAAM,CAACiB,cAAP,CAAsBH,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9BC,WAAK,EAAEA,KADuB;AAE9BE,gBAAU,EAAE,IAFkB;AAG9BC,kBAAY,EAAE,IAHgB;AAI9BC,cAAQ,EAAE;AAJoB,KAAhC;AAMA,WAAON,GAAG,CAACC,GAAD,CAAV;AACD;;AACD,MAAI;AACF;AACAF,UAAM,CAAC,EAAD,EAAK,EAAL,CAAN;AACD,GAHD,CAGE,OAAOQ,GAAP,EAAY;AACZR,UAAM,GAAG,gBAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0B;AACjC,aAAOF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAlB;AACD,KAFD;AAGD;;AAED,WAASM,IAAT,CAAcC,OAAd,EAAuBC,OAAvB,EAAgCC,IAAhC,EAAsCC,WAAtC,EAAmD;AACjD;AACA,QAAIC,cAAc,GAAGH,OAAO,IAAIA,OAAO,CAACvB,SAAR,YAA6B2B,SAAxC,GAAoDJ,OAApD,GAA8DI,SAAnF;AACA,QAAIC,SAAS,GAAG7B,MAAM,CAAC8B,MAAP,CAAcH,cAAc,CAAC1B,SAA7B,CAAhB;AACA,QAAI8B,OAAO,GAAG,IAAIC,OAAJ,CAAYN,WAAW,IAAI,EAA3B,CAAd,CAJiD,CAMjD;AACA;;AACAG,aAAS,CAACI,OAAV,GAAoBC,gBAAgB,CAACX,OAAD,EAAUE,IAAV,EAAgBM,OAAhB,CAApC;AAEA,WAAOF,SAAP;AACD;;AACD/B,SAAO,CAACwB,IAAR,GAAeA,IAAf,CAzCgC,CA2ChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAASa,QAAT,CAAkBC,EAAlB,EAAsBtB,GAAtB,EAA2BuB,GAA3B,EAAgC;AAC9B,QAAI;AACF,aAAO;AAAEC,YAAI,EAAE,QAAR;AAAkBD,WAAG,EAAED,EAAE,CAACG,IAAH,CAAQzB,GAAR,EAAauB,GAAb;AAAvB,OAAP;AACD,KAFD,CAEE,OAAOhB,GAAP,EAAY;AACZ,aAAO;AAAEiB,YAAI,EAAE,OAAR;AAAiBD,WAAG,EAAEhB;AAAtB,OAAP;AACD;AACF;;AAED,MAAImB,sBAAsB,GAAG,gBAA7B;AACA,MAAIC,sBAAsB,GAAG,gBAA7B;AACA,MAAIC,iBAAiB,GAAG,WAAxB;AACA,MAAIC,iBAAiB,GAAG,WAAxB,CAhEgC,CAkEhC;AACA;;AACA,MAAIC,gBAAgB,GAAG,EAAvB,CApEgC,CAsEhC;AACA;AACA;AACA;;AACA,WAAShB,SAAT,GAAqB,CAAE;;AACvB,WAASiB,iBAAT,GAA6B,CAAE;;AAC/B,WAASC,0BAAT,GAAsC,CAAE,CA5ER,CA8EhC;AACA;;;AACA,MAAIC,iBAAiB,GAAG,EAAxB;AACAlC,QAAM,CAACkC,iBAAD,EAAoBxC,cAApB,EAAoC,YAAY;AACpD,WAAO,IAAP;AACD,GAFK,CAAN;AAIA,MAAIyC,QAAQ,GAAGhD,MAAM,CAACiD,cAAtB;AACA,MAAIC,uBAAuB,GAAGF,QAAQ,IAAIA,QAAQ,CAACA,QAAQ,CAACG,MAAM,CAAC,EAAD,CAAP,CAAT,CAAlD;;AACA,MAAID,uBAAuB,IACvBA,uBAAuB,KAAKnD,EAD5B,IAEAG,MAAM,CAACqC,IAAP,CAAYW,uBAAZ,EAAqC3C,cAArC,CAFJ,EAE0D;AACxD;AACA;AACAwC,qBAAiB,GAAGG,uBAApB;AACD;;AAED,MAAIE,EAAE,GAAGN,0BAA0B,CAAC7C,SAA3B,GACP2B,SAAS,CAAC3B,SAAV,GAAsBD,MAAM,CAAC8B,MAAP,CAAciB,iBAAd,CADxB;AAEAF,mBAAiB,CAAC5C,SAAlB,GAA8B6C,0BAA9B;AACAjC,QAAM,CAACuC,EAAD,EAAK,aAAL,EAAoBN,0BAApB,CAAN;AACAjC,QAAM,CAACiC,0BAAD,EAA6B,aAA7B,EAA4CD,iBAA5C,CAAN;AACAA,mBAAiB,CAACQ,WAAlB,GAAgCxC,MAAM,CACpCiC,0BADoC,EAEpCnC,iBAFoC,EAGpC,mBAHoC,CAAtC,CApGgC,CA0GhC;AACA;;AACA,WAAS2C,qBAAT,CAA+BrD,SAA/B,EAA0C;AACxC,KAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4BsD,OAA5B,CAAoC,UAASC,MAAT,EAAiB;AACnD3C,YAAM,CAACZ,SAAD,EAAYuD,MAAZ,EAAoB,UAASnB,GAAT,EAAc;AACtC,eAAO,KAAKJ,OAAL,CAAauB,MAAb,EAAqBnB,GAArB,CAAP;AACD,OAFK,CAAN;AAGD,KAJD;AAKD;;AAEDvC,SAAO,CAAC2D,mBAAR,GAA8B,UAASC,MAAT,EAAiB;AAC7C,QAAIC,IAAI,GAAG,OAAOD,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACE,WAAlD;AACA,WAAOD,IAAI,GACPA,IAAI,KAAKd,iBAAT,IACA;AACA;AACA,KAACc,IAAI,CAACN,WAAL,IAAoBM,IAAI,CAACE,IAA1B,MAAoC,mBAJ7B,GAKP,KALJ;AAMD,GARD;;AAUA/D,SAAO,CAACgE,IAAR,GAAe,UAASJ,MAAT,EAAiB;AAC9B,QAAI1D,MAAM,CAAC+D,cAAX,EAA2B;AACzB/D,YAAM,CAAC+D,cAAP,CAAsBL,MAAtB,EAA8BZ,0BAA9B;AACD,KAFD,MAEO;AACLY,YAAM,CAACM,SAAP,GAAmBlB,0BAAnB;AACAjC,YAAM,CAAC6C,MAAD,EAAS/C,iBAAT,EAA4B,mBAA5B,CAAN;AACD;;AACD+C,UAAM,CAACzD,SAAP,GAAmBD,MAAM,CAAC8B,MAAP,CAAcsB,EAAd,CAAnB;AACA,WAAOM,MAAP;AACD,GATD,CA9HgC,CAyIhC;AACA;AACA;AACA;;;AACA5D,SAAO,CAACmE,KAAR,GAAgB,UAAS5B,GAAT,EAAc;AAC5B,WAAO;AAAE6B,aAAO,EAAE7B;AAAX,KAAP;AACD,GAFD;;AAIA,WAAS8B,aAAT,CAAuBtC,SAAvB,EAAkCuC,WAAlC,EAA+C;AAC7C,aAASC,MAAT,CAAgBb,MAAhB,EAAwBnB,GAAxB,EAA6BiC,OAA7B,EAAsCC,MAAtC,EAA8C;AAC5C,UAAIC,MAAM,GAAGrC,QAAQ,CAACN,SAAS,CAAC2B,MAAD,CAAV,EAAoB3B,SAApB,EAA+BQ,GAA/B,CAArB;;AACA,UAAImC,MAAM,CAAClC,IAAP,KAAgB,OAApB,EAA6B;AAC3BiC,cAAM,CAACC,MAAM,CAACnC,GAAR,CAAN;AACD,OAFD,MAEO;AACL,YAAIoC,MAAM,GAAGD,MAAM,CAACnC,GAApB;AACA,YAAIrB,KAAK,GAAGyD,MAAM,CAACzD,KAAnB;;AACA,YAAIA,KAAK,IACL,OAAOA,KAAP,KAAiB,QADjB,IAEAd,MAAM,CAACqC,IAAP,CAAYvB,KAAZ,EAAmB,SAAnB,CAFJ,EAEmC;AACjC,iBAAOoD,WAAW,CAACE,OAAZ,CAAoBtD,KAAK,CAACkD,OAA1B,EAAmCQ,IAAnC,CAAwC,UAAS1D,KAAT,EAAgB;AAC7DqD,kBAAM,CAAC,MAAD,EAASrD,KAAT,EAAgBsD,OAAhB,EAAyBC,MAAzB,CAAN;AACD,WAFM,EAEJ,UAASlD,GAAT,EAAc;AACfgD,kBAAM,CAAC,OAAD,EAAUhD,GAAV,EAAeiD,OAAf,EAAwBC,MAAxB,CAAN;AACD,WAJM,CAAP;AAKD;;AAED,eAAOH,WAAW,CAACE,OAAZ,CAAoBtD,KAApB,EAA2B0D,IAA3B,CAAgC,UAASC,SAAT,EAAoB;AACzD;AACA;AACA;AACAF,gBAAM,CAACzD,KAAP,GAAe2D,SAAf;AACAL,iBAAO,CAACG,MAAD,CAAP;AACD,SANM,EAMJ,UAASG,KAAT,EAAgB;AACjB;AACA;AACA,iBAAOP,MAAM,CAAC,OAAD,EAAUO,KAAV,EAAiBN,OAAjB,EAA0BC,MAA1B,CAAb;AACD,SAVM,CAAP;AAWD;AACF;;AAED,QAAIM,eAAJ;;AAEA,aAASC,OAAT,CAAiBtB,MAAjB,EAAyBnB,GAAzB,EAA8B;AAC5B,eAAS0C,0BAAT,GAAsC;AACpC,eAAO,IAAIX,WAAJ,CAAgB,UAASE,OAAT,EAAkBC,MAAlB,EAA0B;AAC/CF,gBAAM,CAACb,MAAD,EAASnB,GAAT,EAAciC,OAAd,EAAuBC,MAAvB,CAAN;AACD,SAFM,CAAP;AAGD;;AAED,aAAOM,eAAe,GACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,qBAAe,GAAGA,eAAe,CAACH,IAAhB,CAChBK,0BADgB,EAEhB;AACA;AACAA,gCAJgB,CAAH,GAKXA,0BAA0B,EAlBhC;AAmBD,KA5D4C,CA8D7C;AACA;;;AACA,SAAK9C,OAAL,GAAe6C,OAAf;AACD;;AAEDxB,uBAAqB,CAACa,aAAa,CAAClE,SAAf,CAArB;AACAY,QAAM,CAACsD,aAAa,CAAClE,SAAf,EAA0BQ,mBAA1B,EAA+C,YAAY;AAC/D,WAAO,IAAP;AACD,GAFK,CAAN;AAGAX,SAAO,CAACqE,aAAR,GAAwBA,aAAxB,CAxNgC,CA0NhC;AACA;AACA;;AACArE,SAAO,CAACkF,KAAR,GAAgB,UAASzD,OAAT,EAAkBC,OAAlB,EAA2BC,IAA3B,EAAiCC,WAAjC,EAA8C0C,WAA9C,EAA2D;AACzE,QAAIA,WAAW,KAAK,KAAK,CAAzB,EAA4BA,WAAW,GAAGa,OAAd;AAE5B,QAAIC,IAAI,GAAG,IAAIf,aAAJ,CACT7C,IAAI,CAACC,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,EAAyBC,WAAzB,CADK,EAET0C,WAFS,CAAX;AAKA,WAAOtE,OAAO,CAAC2D,mBAAR,CAA4BjC,OAA5B,IACH0D,IADG,CACE;AADF,MAEHA,IAAI,CAACC,IAAL,GAAYT,IAAZ,CAAiB,UAASD,MAAT,EAAiB;AAChC,aAAOA,MAAM,CAACW,IAAP,GAAcX,MAAM,CAACzD,KAArB,GAA6BkE,IAAI,CAACC,IAAL,EAApC;AACD,KAFD,CAFJ;AAKD,GAbD;;AAeA,WAASjD,gBAAT,CAA0BX,OAA1B,EAAmCE,IAAnC,EAAyCM,OAAzC,EAAkD;AAChD,QAAIsD,KAAK,GAAG7C,sBAAZ;AAEA,WAAO,SAAS6B,MAAT,CAAgBb,MAAhB,EAAwBnB,GAAxB,EAA6B;AAClC,UAAIgD,KAAK,KAAK3C,iBAAd,EAAiC;AAC/B,cAAM,IAAI4C,KAAJ,CAAU,8BAAV,CAAN;AACD;;AAED,UAAID,KAAK,KAAK1C,iBAAd,EAAiC;AAC/B,YAAIa,MAAM,KAAK,OAAf,EAAwB;AACtB,gBAAMnB,GAAN;AACD,SAH8B,CAK/B;AACA;;;AACA,eAAOkD,UAAU,EAAjB;AACD;;AAEDxD,aAAO,CAACyB,MAAR,GAAiBA,MAAjB;AACAzB,aAAO,CAACM,GAAR,GAAcA,GAAd;;AAEA,aAAO,IAAP,EAAa;AACX,YAAImD,QAAQ,GAAGzD,OAAO,CAACyD,QAAvB;;AACA,YAAIA,QAAJ,EAAc;AACZ,cAAIC,cAAc,GAAGC,mBAAmB,CAACF,QAAD,EAAWzD,OAAX,CAAxC;;AACA,cAAI0D,cAAJ,EAAoB;AAClB,gBAAIA,cAAc,KAAK7C,gBAAvB,EAAyC;AACzC,mBAAO6C,cAAP;AACD;AACF;;AAED,YAAI1D,OAAO,CAACyB,MAAR,KAAmB,MAAvB,EAA+B;AAC7B;AACA;AACAzB,iBAAO,CAAC4D,IAAR,GAAe5D,OAAO,CAAC6D,KAAR,GAAgB7D,OAAO,CAACM,GAAvC;AAED,SALD,MAKO,IAAIN,OAAO,CAACyB,MAAR,KAAmB,OAAvB,EAAgC;AACrC,cAAI6B,KAAK,KAAK7C,sBAAd,EAAsC;AACpC6C,iBAAK,GAAG1C,iBAAR;AACA,kBAAMZ,OAAO,CAACM,GAAd;AACD;;AAEDN,iBAAO,CAAC8D,iBAAR,CAA0B9D,OAAO,CAACM,GAAlC;AAED,SARM,MAQA,IAAIN,OAAO,CAACyB,MAAR,KAAmB,QAAvB,EAAiC;AACtCzB,iBAAO,CAAC+D,MAAR,CAAe,QAAf,EAAyB/D,OAAO,CAACM,GAAjC;AACD;;AAEDgD,aAAK,GAAG3C,iBAAR;AAEA,YAAI8B,MAAM,GAAGrC,QAAQ,CAACZ,OAAD,EAAUE,IAAV,EAAgBM,OAAhB,CAArB;;AACA,YAAIyC,MAAM,CAAClC,IAAP,KAAgB,QAApB,EAA8B;AAC5B;AACA;AACA+C,eAAK,GAAGtD,OAAO,CAACqD,IAAR,GACJzC,iBADI,GAEJF,sBAFJ;;AAIA,cAAI+B,MAAM,CAACnC,GAAP,KAAeO,gBAAnB,EAAqC;AACnC;AACD;;AAED,iBAAO;AACL5B,iBAAK,EAAEwD,MAAM,CAACnC,GADT;AAEL+C,gBAAI,EAAErD,OAAO,CAACqD;AAFT,WAAP;AAKD,SAhBD,MAgBO,IAAIZ,MAAM,CAAClC,IAAP,KAAgB,OAApB,EAA6B;AAClC+C,eAAK,GAAG1C,iBAAR,CADkC,CAElC;AACA;;AACAZ,iBAAO,CAACyB,MAAR,GAAiB,OAAjB;AACAzB,iBAAO,CAACM,GAAR,GAAcmC,MAAM,CAACnC,GAArB;AACD;AACF;AACF,KAxED;AAyED,GAxT+B,CA0ThC;AACA;AACA;AACA;;;AACA,WAASqD,mBAAT,CAA6BF,QAA7B,EAAuCzD,OAAvC,EAAgD;AAC9C,QAAIyB,MAAM,GAAGgC,QAAQ,CAAChF,QAAT,CAAkBuB,OAAO,CAACyB,MAA1B,CAAb;;AACA,QAAIA,MAAM,KAAKpD,SAAf,EAA0B;AACxB;AACA;AACA2B,aAAO,CAACyD,QAAR,GAAmB,IAAnB;;AAEA,UAAIzD,OAAO,CAACyB,MAAR,KAAmB,OAAvB,EAAgC;AAC9B;AACA,YAAIgC,QAAQ,CAAChF,QAAT,CAAkB,QAAlB,CAAJ,EAAiC;AAC/B;AACA;AACAuB,iBAAO,CAACyB,MAAR,GAAiB,QAAjB;AACAzB,iBAAO,CAACM,GAAR,GAAcjC,SAAd;AACAsF,6BAAmB,CAACF,QAAD,EAAWzD,OAAX,CAAnB;;AAEA,cAAIA,OAAO,CAACyB,MAAR,KAAmB,OAAvB,EAAgC;AAC9B;AACA;AACA,mBAAOZ,gBAAP;AACD;AACF;;AAEDb,eAAO,CAACyB,MAAR,GAAiB,OAAjB;AACAzB,eAAO,CAACM,GAAR,GAAc,IAAI0D,SAAJ,CACZ,gDADY,CAAd;AAED;;AAED,aAAOnD,gBAAP;AACD;;AAED,QAAI4B,MAAM,GAAGrC,QAAQ,CAACqB,MAAD,EAASgC,QAAQ,CAAChF,QAAlB,EAA4BuB,OAAO,CAACM,GAApC,CAArB;;AAEA,QAAImC,MAAM,CAAClC,IAAP,KAAgB,OAApB,EAA6B;AAC3BP,aAAO,CAACyB,MAAR,GAAiB,OAAjB;AACAzB,aAAO,CAACM,GAAR,GAAcmC,MAAM,CAACnC,GAArB;AACAN,aAAO,CAACyD,QAAR,GAAmB,IAAnB;AACA,aAAO5C,gBAAP;AACD;;AAED,QAAIoD,IAAI,GAAGxB,MAAM,CAACnC,GAAlB;;AAEA,QAAI,CAAE2D,IAAN,EAAY;AACVjE,aAAO,CAACyB,MAAR,GAAiB,OAAjB;AACAzB,aAAO,CAACM,GAAR,GAAc,IAAI0D,SAAJ,CAAc,kCAAd,CAAd;AACAhE,aAAO,CAACyD,QAAR,GAAmB,IAAnB;AACA,aAAO5C,gBAAP;AACD;;AAED,QAAIoD,IAAI,CAACZ,IAAT,EAAe;AACb;AACA;AACArD,aAAO,CAACyD,QAAQ,CAACS,UAAV,CAAP,GAA+BD,IAAI,CAAChF,KAApC,CAHa,CAKb;;AACAe,aAAO,CAACoD,IAAR,GAAeK,QAAQ,CAACU,OAAxB,CANa,CAQb;AACA;AACA;AACA;AACA;AACA;;AACA,UAAInE,OAAO,CAACyB,MAAR,KAAmB,QAAvB,EAAiC;AAC/BzB,eAAO,CAACyB,MAAR,GAAiB,MAAjB;AACAzB,eAAO,CAACM,GAAR,GAAcjC,SAAd;AACD;AAEF,KAnBD,MAmBO;AACL;AACA,aAAO4F,IAAP;AACD,KAvE6C,CAyE9C;AACA;;;AACAjE,WAAO,CAACyD,QAAR,GAAmB,IAAnB;AACA,WAAO5C,gBAAP;AACD,GA3Y+B,CA6YhC;AACA;;;AACAU,uBAAqB,CAACF,EAAD,CAArB;AAEAvC,QAAM,CAACuC,EAAD,EAAKzC,iBAAL,EAAwB,WAAxB,CAAN,CAjZgC,CAmZhC;AACA;AACA;AACA;AACA;;AACAE,QAAM,CAACuC,EAAD,EAAK7C,cAAL,EAAqB,YAAW;AACpC,WAAO,IAAP;AACD,GAFK,CAAN;AAIAM,QAAM,CAACuC,EAAD,EAAK,UAAL,EAAiB,YAAW;AAChC,WAAO,oBAAP;AACD,GAFK,CAAN;;AAIA,WAAS+C,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,QAAIC,KAAK,GAAG;AAAEC,YAAM,EAAEF,IAAI,CAAC,CAAD;AAAd,KAAZ;;AAEA,QAAI,KAAKA,IAAT,EAAe;AACbC,WAAK,CAACE,QAAN,GAAiBH,IAAI,CAAC,CAAD,CAArB;AACD;;AAED,QAAI,KAAKA,IAAT,EAAe;AACbC,WAAK,CAACG,UAAN,GAAmBJ,IAAI,CAAC,CAAD,CAAvB;AACAC,WAAK,CAACI,QAAN,GAAiBL,IAAI,CAAC,CAAD,CAArB;AACD;;AAED,SAAKM,UAAL,CAAgBC,IAAhB,CAAqBN,KAArB;AACD;;AAED,WAASO,aAAT,CAAuBP,KAAvB,EAA8B;AAC5B,QAAI7B,MAAM,GAAG6B,KAAK,CAACQ,UAAN,IAAoB,EAAjC;AACArC,UAAM,CAAClC,IAAP,GAAc,QAAd;AACA,WAAOkC,MAAM,CAACnC,GAAd;AACAgE,SAAK,CAACQ,UAAN,GAAmBrC,MAAnB;AACD;;AAED,WAASxC,OAAT,CAAiBN,WAAjB,EAA8B;AAC5B;AACA;AACA;AACA,SAAKgF,UAAL,GAAkB,CAAC;AAAEJ,YAAM,EAAE;AAAV,KAAD,CAAlB;AACA5E,eAAW,CAAC6B,OAAZ,CAAoB4C,YAApB,EAAkC,IAAlC;AACA,SAAKW,KAAL,CAAW,IAAX;AACD;;AAEDhH,SAAO,CAACiH,IAAR,GAAe,UAASC,MAAT,EAAiB;AAC9B,QAAID,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIhG,GAAT,IAAgBiG,MAAhB,EAAwB;AACtBD,UAAI,CAACJ,IAAL,CAAU5F,GAAV;AACD;;AACDgG,QAAI,CAACE,OAAL,GAL8B,CAO9B;AACA;;AACA,WAAO,SAAS9B,IAAT,GAAgB;AACrB,aAAO4B,IAAI,CAACG,MAAZ,EAAoB;AAClB,YAAInG,GAAG,GAAGgG,IAAI,CAACI,GAAL,EAAV;;AACA,YAAIpG,GAAG,IAAIiG,MAAX,EAAmB;AACjB7B,cAAI,CAACnE,KAAL,GAAaD,GAAb;AACAoE,cAAI,CAACC,IAAL,GAAY,KAAZ;AACA,iBAAOD,IAAP;AACD;AACF,OARoB,CAUrB;AACA;AACA;;;AACAA,UAAI,CAACC,IAAL,GAAY,IAAZ;AACA,aAAOD,IAAP;AACD,KAfD;AAgBD,GAzBD;;AA2BA,WAAShC,MAAT,CAAgBiE,QAAhB,EAA0B;AACxB,QAAIA,QAAJ,EAAc;AACZ,UAAIC,cAAc,GAAGD,QAAQ,CAAC7G,cAAD,CAA7B;;AACA,UAAI8G,cAAJ,EAAoB;AAClB,eAAOA,cAAc,CAAC9E,IAAf,CAAoB6E,QAApB,CAAP;AACD;;AAED,UAAI,OAAOA,QAAQ,CAACjC,IAAhB,KAAyB,UAA7B,EAAyC;AACvC,eAAOiC,QAAP;AACD;;AAED,UAAI,CAACE,KAAK,CAACF,QAAQ,CAACF,MAAV,CAAV,EAA6B;AAC3B,YAAIK,CAAC,GAAG,CAAC,CAAT;AAAA,YAAYpC,IAAI,GAAG,SAASA,IAAT,GAAgB;AACjC,iBAAO,EAAEoC,CAAF,GAAMH,QAAQ,CAACF,MAAtB,EAA8B;AAC5B,gBAAIhH,MAAM,CAACqC,IAAP,CAAY6E,QAAZ,EAAsBG,CAAtB,CAAJ,EAA8B;AAC5BpC,kBAAI,CAACnE,KAAL,GAAaoG,QAAQ,CAACG,CAAD,CAArB;AACApC,kBAAI,CAACC,IAAL,GAAY,KAAZ;AACA,qBAAOD,IAAP;AACD;AACF;;AAEDA,cAAI,CAACnE,KAAL,GAAaZ,SAAb;AACA+E,cAAI,CAACC,IAAL,GAAY,IAAZ;AAEA,iBAAOD,IAAP;AACD,SAbD;;AAeA,eAAOA,IAAI,CAACA,IAAL,GAAYA,IAAnB;AACD;AACF,KA7BuB,CA+BxB;;;AACA,WAAO;AAAEA,UAAI,EAAEI;AAAR,KAAP;AACD;;AACDzF,SAAO,CAACqD,MAAR,GAAiBA,MAAjB;;AAEA,WAASoC,UAAT,GAAsB;AACpB,WAAO;AAAEvE,WAAK,EAAEZ,SAAT;AAAoBgF,UAAI,EAAE;AAA1B,KAAP;AACD;;AAEDpD,SAAO,CAAC/B,SAAR,GAAoB;AAClB2D,eAAW,EAAE5B,OADK;AAGlB8E,SAAK,EAAE,eAASU,aAAT,EAAwB;AAC7B,WAAKC,IAAL,GAAY,CAAZ;AACA,WAAKtC,IAAL,GAAY,CAAZ,CAF6B,CAG7B;AACA;;AACA,WAAKQ,IAAL,GAAY,KAAKC,KAAL,GAAaxF,SAAzB;AACA,WAAKgF,IAAL,GAAY,KAAZ;AACA,WAAKI,QAAL,GAAgB,IAAhB;AAEA,WAAKhC,MAAL,GAAc,MAAd;AACA,WAAKnB,GAAL,GAAWjC,SAAX;AAEA,WAAKsG,UAAL,CAAgBnD,OAAhB,CAAwBqD,aAAxB;;AAEA,UAAI,CAACY,aAAL,EAAoB;AAClB,aAAK,IAAI3D,IAAT,IAAiB,IAAjB,EAAuB;AACrB;AACA,cAAIA,IAAI,CAAC6D,MAAL,CAAY,CAAZ,MAAmB,GAAnB,IACAxH,MAAM,CAACqC,IAAP,CAAY,IAAZ,EAAkBsB,IAAlB,CADA,IAEA,CAACyD,KAAK,CAAC,CAACzD,IAAI,CAAC8D,KAAL,CAAW,CAAX,CAAF,CAFV,EAE4B;AAC1B,iBAAK9D,IAAL,IAAazD,SAAb;AACD;AACF;AACF;AACF,KA3BiB;AA6BlBwH,QAAI,EAAE,gBAAW;AACf,WAAKxC,IAAL,GAAY,IAAZ;AAEA,UAAIyC,SAAS,GAAG,KAAKnB,UAAL,CAAgB,CAAhB,CAAhB;AACA,UAAIoB,UAAU,GAAGD,SAAS,CAAChB,UAA3B;;AACA,UAAIiB,UAAU,CAACxF,IAAX,KAAoB,OAAxB,EAAiC;AAC/B,cAAMwF,UAAU,CAACzF,GAAjB;AACD;;AAED,aAAO,KAAK0F,IAAZ;AACD,KAvCiB;AAyClBlC,qBAAiB,EAAE,2BAASmC,SAAT,EAAoB;AACrC,UAAI,KAAK5C,IAAT,EAAe;AACb,cAAM4C,SAAN;AACD;;AAED,UAAIjG,OAAO,GAAG,IAAd;;AACA,eAASkG,MAAT,CAAgBC,GAAhB,EAAqBC,MAArB,EAA6B;AAC3B3D,cAAM,CAAClC,IAAP,GAAc,OAAd;AACAkC,cAAM,CAACnC,GAAP,GAAa2F,SAAb;AACAjG,eAAO,CAACoD,IAAR,GAAe+C,GAAf;;AAEA,YAAIC,MAAJ,EAAY;AACV;AACA;AACApG,iBAAO,CAACyB,MAAR,GAAiB,MAAjB;AACAzB,iBAAO,CAACM,GAAR,GAAcjC,SAAd;AACD;;AAED,eAAO,CAAC,CAAE+H,MAAV;AACD;;AAED,WAAK,IAAIZ,CAAC,GAAG,KAAKb,UAAL,CAAgBQ,MAAhB,GAAyB,CAAtC,EAAyCK,CAAC,IAAI,CAA9C,EAAiD,EAAEA,CAAnD,EAAsD;AACpD,YAAIlB,KAAK,GAAG,KAAKK,UAAL,CAAgBa,CAAhB,CAAZ;AACA,YAAI/C,MAAM,GAAG6B,KAAK,CAACQ,UAAnB;;AAEA,YAAIR,KAAK,CAACC,MAAN,KAAiB,MAArB,EAA6B;AAC3B;AACA;AACA;AACA,iBAAO2B,MAAM,CAAC,KAAD,CAAb;AACD;;AAED,YAAI5B,KAAK,CAACC,MAAN,IAAgB,KAAKmB,IAAzB,EAA+B;AAC7B,cAAIW,QAAQ,GAAGlI,MAAM,CAACqC,IAAP,CAAY8D,KAAZ,EAAmB,UAAnB,CAAf;AACA,cAAIgC,UAAU,GAAGnI,MAAM,CAACqC,IAAP,CAAY8D,KAAZ,EAAmB,YAAnB,CAAjB;;AAEA,cAAI+B,QAAQ,IAAIC,UAAhB,EAA4B;AAC1B,gBAAI,KAAKZ,IAAL,GAAYpB,KAAK,CAACE,QAAtB,EAAgC;AAC9B,qBAAO0B,MAAM,CAAC5B,KAAK,CAACE,QAAP,EAAiB,IAAjB,CAAb;AACD,aAFD,MAEO,IAAI,KAAKkB,IAAL,GAAYpB,KAAK,CAACG,UAAtB,EAAkC;AACvC,qBAAOyB,MAAM,CAAC5B,KAAK,CAACG,UAAP,CAAb;AACD;AAEF,WAPD,MAOO,IAAI4B,QAAJ,EAAc;AACnB,gBAAI,KAAKX,IAAL,GAAYpB,KAAK,CAACE,QAAtB,EAAgC;AAC9B,qBAAO0B,MAAM,CAAC5B,KAAK,CAACE,QAAP,EAAiB,IAAjB,CAAb;AACD;AAEF,WALM,MAKA,IAAI8B,UAAJ,EAAgB;AACrB,gBAAI,KAAKZ,IAAL,GAAYpB,KAAK,CAACG,UAAtB,EAAkC;AAChC,qBAAOyB,MAAM,CAAC5B,KAAK,CAACG,UAAP,CAAb;AACD;AAEF,WALM,MAKA;AACL,kBAAM,IAAIlB,KAAJ,CAAU,wCAAV,CAAN;AACD;AACF;AACF;AACF,KAnGiB;AAqGlBQ,UAAM,EAAE,gBAASxD,IAAT,EAAeD,GAAf,EAAoB;AAC1B,WAAK,IAAIkF,CAAC,GAAG,KAAKb,UAAL,CAAgBQ,MAAhB,GAAyB,CAAtC,EAAyCK,CAAC,IAAI,CAA9C,EAAiD,EAAEA,CAAnD,EAAsD;AACpD,YAAIlB,KAAK,GAAG,KAAKK,UAAL,CAAgBa,CAAhB,CAAZ;;AACA,YAAIlB,KAAK,CAACC,MAAN,IAAgB,KAAKmB,IAArB,IACAvH,MAAM,CAACqC,IAAP,CAAY8D,KAAZ,EAAmB,YAAnB,CADA,IAEA,KAAKoB,IAAL,GAAYpB,KAAK,CAACG,UAFtB,EAEkC;AAChC,cAAI8B,YAAY,GAAGjC,KAAnB;AACA;AACD;AACF;;AAED,UAAIiC,YAAY,KACXhG,IAAI,KAAK,OAAT,IACAA,IAAI,KAAK,UAFE,CAAZ,IAGAgG,YAAY,CAAChC,MAAb,IAAuBjE,GAHvB,IAIAA,GAAG,IAAIiG,YAAY,CAAC9B,UAJxB,EAIoC;AAClC;AACA;AACA8B,oBAAY,GAAG,IAAf;AACD;;AAED,UAAI9D,MAAM,GAAG8D,YAAY,GAAGA,YAAY,CAACzB,UAAhB,GAA6B,EAAtD;AACArC,YAAM,CAAClC,IAAP,GAAcA,IAAd;AACAkC,YAAM,CAACnC,GAAP,GAAaA,GAAb;;AAEA,UAAIiG,YAAJ,EAAkB;AAChB,aAAK9E,MAAL,GAAc,MAAd;AACA,aAAK2B,IAAL,GAAYmD,YAAY,CAAC9B,UAAzB;AACA,eAAO5D,gBAAP;AACD;;AAED,aAAO,KAAK2F,QAAL,CAAc/D,MAAd,CAAP;AACD,KArIiB;AAuIlB+D,YAAQ,EAAE,kBAAS/D,MAAT,EAAiBiC,QAAjB,EAA2B;AACnC,UAAIjC,MAAM,CAAClC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,cAAMkC,MAAM,CAACnC,GAAb;AACD;;AAED,UAAImC,MAAM,CAAClC,IAAP,KAAgB,OAAhB,IACAkC,MAAM,CAAClC,IAAP,KAAgB,UADpB,EACgC;AAC9B,aAAK6C,IAAL,GAAYX,MAAM,CAACnC,GAAnB;AACD,OAHD,MAGO,IAAImC,MAAM,CAAClC,IAAP,KAAgB,QAApB,EAA8B;AACnC,aAAKyF,IAAL,GAAY,KAAK1F,GAAL,GAAWmC,MAAM,CAACnC,GAA9B;AACA,aAAKmB,MAAL,GAAc,QAAd;AACA,aAAK2B,IAAL,GAAY,KAAZ;AACD,OAJM,MAIA,IAAIX,MAAM,CAAClC,IAAP,KAAgB,QAAhB,IAA4BmE,QAAhC,EAA0C;AAC/C,aAAKtB,IAAL,GAAYsB,QAAZ;AACD;;AAED,aAAO7D,gBAAP;AACD,KAxJiB;AA0JlB4F,UAAM,EAAE,gBAAShC,UAAT,EAAqB;AAC3B,WAAK,IAAIe,CAAC,GAAG,KAAKb,UAAL,CAAgBQ,MAAhB,GAAyB,CAAtC,EAAyCK,CAAC,IAAI,CAA9C,EAAiD,EAAEA,CAAnD,EAAsD;AACpD,YAAIlB,KAAK,GAAG,KAAKK,UAAL,CAAgBa,CAAhB,CAAZ;;AACA,YAAIlB,KAAK,CAACG,UAAN,KAAqBA,UAAzB,EAAqC;AACnC,eAAK+B,QAAL,CAAclC,KAAK,CAACQ,UAApB,EAAgCR,KAAK,CAACI,QAAtC;AACAG,uBAAa,CAACP,KAAD,CAAb;AACA,iBAAOzD,gBAAP;AACD;AACF;AACF,KAnKiB;AAqKlB,aAAS,gBAAS0D,MAAT,EAAiB;AACxB,WAAK,IAAIiB,CAAC,GAAG,KAAKb,UAAL,CAAgBQ,MAAhB,GAAyB,CAAtC,EAAyCK,CAAC,IAAI,CAA9C,EAAiD,EAAEA,CAAnD,EAAsD;AACpD,YAAIlB,KAAK,GAAG,KAAKK,UAAL,CAAgBa,CAAhB,CAAZ;;AACA,YAAIlB,KAAK,CAACC,MAAN,KAAiBA,MAArB,EAA6B;AAC3B,cAAI9B,MAAM,GAAG6B,KAAK,CAACQ,UAAnB;;AACA,cAAIrC,MAAM,CAAClC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,gBAAImG,MAAM,GAAGjE,MAAM,CAACnC,GAApB;AACAuE,yBAAa,CAACP,KAAD,CAAb;AACD;;AACD,iBAAOoC,MAAP;AACD;AACF,OAXuB,CAaxB;AACA;;;AACA,YAAM,IAAInD,KAAJ,CAAU,uBAAV,CAAN;AACD,KArLiB;AAuLlBoD,iBAAa,EAAE,uBAAStB,QAAT,EAAmBnB,UAAnB,EAA+BC,OAA/B,EAAwC;AACrD,WAAKV,QAAL,GAAgB;AACdhF,gBAAQ,EAAE2C,MAAM,CAACiE,QAAD,CADF;AAEdnB,kBAAU,EAAEA,UAFE;AAGdC,eAAO,EAAEA;AAHK,OAAhB;;AAMA,UAAI,KAAK1C,MAAL,KAAgB,MAApB,EAA4B;AAC1B;AACA;AACA,aAAKnB,GAAL,GAAWjC,SAAX;AACD;;AAED,aAAOwC,gBAAP;AACD;AArMiB,GAApB,CAlgBgC,CA0sBhC;AACA;AACA;AACA;;AACA,SAAO9C,OAAP;AAED,CAhtBc,EAitBb;AACA;AACA;AACA;AACA,QAA6B6I,MAAM,CAAC7I,OAApC,GAA8C,SArtBjC,CAAf;;AAwtBA,IAAI;AACF8I,oBAAkB,GAAG/I,OAArB;AACD,CAFD,CAEE,OAAOgJ,oBAAP,EAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAI,OAAOC,UAAP,KAAsB,QAA1B,EAAoC;AAClCA,cAAU,CAACF,kBAAX,GAAgC/I,OAAhC;AACD,GAFD,MAEO;AACLkJ,YAAQ,CAAC,GAAD,EAAM,wBAAN,CAAR,CAAwClJ,OAAxC;AACD;AACF,C;;;;;;;;;;;;;;;;;;ACjvBD,QAAe;qBAAA;sBAAA;yBAAA;2BAIW;AAJX,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GCAA;;;;AAEO,IAAMmJ,kBAAkB,SAAlBA,eAAkB,qDAAwD;MAClFC,uBAAJ,E;MACIC,oBAAJ,S;;MAEIC,mBAAJ,C,EAA0B;wBACL,iBAAiB;;UAAIC,WAAJ,W;;aAAqBD,iCAAiC,CAAtD,C;AAArC,KAAoB,C;AADrB,G,MAEO,IAAIE,mBAAJ,GAA0B;wBACZ,iBAAiB;;UAAID,WAAJ,W;;aAAqBC,mCAAmC,CAAxD,C;AAArC,KAAoB,C;;;MAGjBC,2BAAJ,C,EAAkC;;sBAGjC,O,CAA0B,gBAAU;UAC7B7E,SAAS,uBAAuB;;YAAI2E,WAAJ,W;;eAAqBA,gBAArB,I;AAAtC,OAAe,C;;UACf,M,EAAY;6BACX,I,CAAA,M;;AAHF,K;wBAOoB,yBAAyB;;UAAIA,WAAJ,W;;aAAqBE,2CAA2C,CAAhE,C;AAA7C,KAAoB,C;;;SAGdL,sGAAP,iB;AAvBM,E;;;;AA4BA,IAAMM,gBAAgB,SAAhBA,aAAgB,kDAAqD;qCAAA,a,EAAA,C;MAC1EC,OAD0E,oB;MACjEC,WADiE,oB;MACpDC,OADoD,oB;;MAE3EP,YAAYQ,8CAA8CA,gBAA9CA,WAA8CA,CAA9CA,GAAlB,E;MACMN,YAAYO,8CAA8CA,gBAA9CA,WAA8CA,CAA9CA,GAAlB,E;MACIC,kBAAkBH,cAAtB,GAAsBA,C;;MAElBP,wBAAwBU,yBAA5B,C,EAAwD;sBACrC,uBAAuB,kBAAY;WAC/C,IAAItC,IAAJ,GAAWuC,IAAIX,UAApB,M,EAAsC5B,IAAtC,C,EAA6CA,CAA7C,E,EAAkD;YAC7CwC,eAAeZ,UAAfY,CAAeZ,CAAfY,IAA+B,CAAnC,C,EAAuC;iBACtC,I;;;;aAGF,K;AAND,KAAkB,C;AADnB,G,MASO,IAAIV,wBAAwBQ,yBAA5B,GAAwD;sBAC5C,uBAAuB,kBAAY;WAC/C,IAAItC,IAAJ,GAAWuC,IAAIT,UAApB,M,EAAsC9B,IAAtC,C,EAA6CA,CAA7C,E,EAAkD;YAC7CwC,eAAeV,UAAfU,CAAeV,CAAfU,IAA+B,CAAnC,C,EAAuC;iBACtC,K;;;;aAIF,I;AAPD,KAAkB,C;;;SAWZ,uBAGNF,qBAHD,GAGCA,CAHM,C;AA3BD;;ICxBcG;;;2BAEpB,K,EAAoB;;;iIAAA,K;;UAGnB,K,GAAa;iBACDC,mCAA2CC,MAA3CD,iBAAkEC,MAAlED,WAAmFC,MAAnFD;AADC,K;;;;;;mCAKE;mBACkB,KADlB,K;UACPE,SADO,mB;UACIC,SADJ,mB;aAGR,yBAAyB;;YAAEC,WAAF,W;YAAejB,WAAf,W;;eAC/B,2D,QAAA,E;AAAQ,iBAAQe,cAAcG,EAAf,kBAACH,GAAD,WAACA,GAAhB,W;AAAiF,eAAjF;SAAA,E,cACiBG,EAAf,kB,GAAA,W,GAAqDD,WADvD,C;AADD,OAAO,C;;;;uCAOY;oBAC+B,KAD/B,K;UACXE,iBADW,4B;UACQC,kBADR,6B;;UAEf,CAAJ,iB,EAAwB;eACvB,I;;;aAGA,2D,QAAA,E;AAAQ,eAAR,E;AAAiB,aAAjB;OAAA,E,kBAAA,C;;;;6BAIQ;;oBAG0F,KAH1F,K;UAED3G,IAFC,e;UAEK4G,EAFL,a;UAESC,OAFT,kB;UAEkB1J,KAFlB,gB;UAEyB2J,SAFzB,mB;UAEmCC,OAFnC,iB;UAE2CC,QAF3C,mB;UAEqDN,iBAFrD,4B;UAEwEC,kBAFxE,6B;UAGRJ,SAHQ,oB;UAGGD,SAHH,oB;UAGchB,SAHd,oB;UAGyBE,SAHzB,oB;UAGoCyB,aAHpC,wB;UAGmDC,eAHnD,0B;UAGuEC,cAHvE,4O;;UAKH;cAAA;eAAA;kBAIK;iBAAOL,UAASM,SAATN,OAAP,CAAOA,C;AAJZ;gBAKG;iBAAOC,QAAOK,SAAPL,OAAP,CAAOA,C;AALV;;AAAA,Q;;UAQN,E,EAAQ;cACP,E,GAAA,E;;;UAED,O,EAAa;cACZ,S,GAAA,O;;;aAIA,2D,QAAA,S,KAAA,gB,EAAA,E,KAEE,Y,EAFF,C;;;;CAnDkBZ,CAAwBkB,+CAAxBlB,C;;AA2DrBA,4BAA4B;SACpBmB,4DAAoB,CAACA,kDAAD,QAAmBA,kDADnB,MACA,CAApBA,CADoB;QAErBA,kDAFqB;MAGvBA,kDAHuB;WAIlBA,kDAJkB;qBAKRA,kDALQ;sBAMPA,4DAAoB,CAACA,kDAAD,QAAmBA,kDANhC,MAMa,CAApBA,CANO;mBAOVA,kDAPU;YAQjBA,kDARiB;UASnBA,kDATmB;aAUhBA,wDAAgB,CAACb,EAAD,mBAAsBA,EAVtB,kBAUA,CAAhBa,CAVgB;aAWhBA,wDAAgB,CAACb,EAAD,mBAAsBA,EAXtB,kBAWA,CAAhBa,CAXgB;aAYhBA,kDAZgB;aAahBA,kDAbgB;YAcjBA,kDAAUC;AAdO,CAA5BpB;AAgBAA,+BAA+B;SAAA;QAAA;MAAA;WAAA;qBAAA;sBAAA;mBAAA;YAQpB,oBAAM,CARc;UAStB,kBAAM,CATgB;aAUnBM,EAVmB;aAWnBA,EAXmB;aAAA;aAAA;YAcpB;AAdoB,CAA/BN;;IC3EqBqB;;;0BACpB,K,EAAoB;;;+HAAA,K;;UAEnB,K,GAAa;eACH,iBAAgBnB,MAAhB;AADG,K;UAGb,U,GAAkB,sBAAlB,KAAkB,C;;;;;;uCAGCoB,S,EAAW;UACtB9B,OADsB,GACV,KADU,KACV,CADU,O;;UAE1BA,YAAY8B,UAAhB,O,EAAmC;;;;UAI7BC,iBAAiB,gBAAvB,OAAuB,C;WAEvB,Q,CAAc;6CACb,c,GAAA,kBAEI,sBAFJ,cAEI,CAFJ,C;AADa,O;;;;qCAQG7B,O,EAAS;UAClBoB,aADkB,GACA,KADA,KACA,CADA,a;UAGpBU,mBAAmB,mBAAzB,OAAyB,C;;UAErBA,iBAAJ,M,EAA6B;gBAC5B,K,CAAc,uCAAuCA,iBAAvC,QAAuCA,EAAvC,GAAd,0F;eACA,E;;;aAGM,kBAAkB,kBAAY;YACpC,M,EAAY;iBACJ;AAAEC,wBAAF;AAAsBC,6BAA7B;AAAO,W;;AAFT,OAAO,C;;;;kCAOOhC,O,EAAS;mBACc,KADd,K;UACfoB,aADe,uB;UACAX,SADA,mB;UAEjBwB,YAAYxB,cAAcG,EAAdH,mCAAlB,iB;aAEO,eAAe;eAAYW,sBAAsBf,OAAtBe,SAAsBf,CAAtBe,MAA6C,CAAzD,C;AAAf,aAAgF;eAAUf,OAAV,SAAUA,C;AAAjG,OAAO,C;;;;+BAGIP,O,EAAS;UAChB,CAAJ,O,EAAc;eACb,E;;;oBAGkD,KAL/B,K;UAKZoC,gBALY,2B;UAKMzC,SALN,oB;UAKiBE,SALjB,oB;UAMdwC,cAAeD,qBAAqBtB,EAAtB,iBAACsB,GAAD,CAACA,GAArB,C;UACIlC,UAAJ,E;wBACA,O,CAA0B,aAAO;YAC5BnC,mBAAJ,O,EAAgC;oBAC/B,C;;AAFF,O,EARoB,C;;;UAgBhB,YAAYmC,mBAAhB,C,EAAsC;gBACrC,K,CAAc,8CAAd,6G;eACA,E;;;UAGKG,kBAAkBN,kCAAxB,SAAwBA,C;aAEjB,yBAAyBe,EAAzB,2BAAsD,sBAAgB;gCACjCwB,iBAAiBxB,EADgB,uBACjCwB,C;;YAAtCL,UADuE,wB;;YAC3DC,eAD2D,iE;;eAErE;AAAED,sBAAF;AAAcC,2BAArB;AAAO,S;AAFR,OAAO,C;;;;oCAMS;oBACiB,KADjB,K;UACRtB,SADQ,oB;UACGD,SADH,oB;aAET,uBAAuB,gBAAqC;YAAlCsB,UAAkC,QAAlCA,U;YAAYC,eAAsB,QAAtBA,e;YACtCK,QAAS3B,cAAcE,EAAf,iBAACF,GAAD,UAACA,GAAf,e;YACMpJ,QAASmJ,cAAcG,EAAf,iBAACH,GAAD,UAACA,GAAf,e;eACO,2D,QAAA,E;AAAQ,iBAAR,K;AAAsB,eAAtB;SAAA,E,KAAA,C;AAHR,OAAO,C;;;;;;uCASY;oBAC0D,KAD1D,K;UACX6B,gBADW,2B;UACOzB,iBADP,4B;UAC0BC,kBAD1B,6B;UAC8ChB,OAD9C,kB;;UAEf,CAAJ,O,EAAc;eACN,2D,QAAA,E;AAAQ,iBAAR;SAAA,E,gBAAA,C;;;UAER,iB,EAAuB;eACf,2D,QAAA,E;AAAQ,iBAAR;SAAA,E,kBAAA,C;;;aAER,I;;;;6BAGS;oBAKL,KALK,K;UAERxI,KAFQ,gB;UAEDwI,OAFC,kB;UAEQmB,SAFR,mB;UAEkBC,OAFlB,iB;UAE0BH,EAF1B,a;UAE8B5G,IAF9B,e;UAEoC6G,OAFpC,kB;UAE6CG,QAF7C,mB;UAEuDmB,gBAFvD,2B;UAEyEzB,iBAFzE,4B;UAGRC,kBAHQ,6B;UAGYJ,SAHZ,oB;UAGuBD,SAHvB,oB;UAGkCyB,gBAHlC,2B;UAGoDK,gBAHpD,2B;UAGsEnB,aAHtE,wB;UAILE,cAJK,sQ;UAOHkB,aAAarB,YAAaoB,oBAAoBzC,YAApD,E;;UACM;cAAA;eAAA;kBAIK;iBAAOmB,UAASM,SAATN,OAAP,CAAOA,C;AAJZ;gBAKG;iBAAOC,QAAOK,SAAPL,OAAP,CAAOA,C;AALV;kBAMKsB;AANL,Q;;UAQN,E,EAAQ;cACP,E,GAAA,E;;;UAED,O,EAAa;cACZ,S,GAAA,O;;;aAIA,2D,QAAA,S,KAAA,gB,EAAA,E,KAEE,a,EAFF,C;;;;CA5HkBb,CAAuBc,mDAAvBd,C;;AAoIrBA,2BAA2B;WACjBF,kDADiB;oBAERA,wDAAgB,CAACb,EAAD,mBAAsBA,EAF9B,kBAEQ,CAAhBa,CAFQ;SAGnBA,4DAAoB,CAACA,kDAAD,QAAmBA,kDAHpB,MAGC,CAApBA,CAHmB;QAIpBA,kDAJoB;MAKtBA,kDALsB;WAMjBA,kDANiB;oBAORA,kDAPQ;qBAQPA,kDARO;sBASNA,kDATM;YAUhBA,kDAVgB;UAWlBA,kDAXkB;aAYfA,kDAZe;aAafA,kDAbe;aAcfA,kDAde;aAefA,kDAfe;YAgBhBA,kDAhBgB;oBAiBRA,kDAjBQ;iBAkBXA,kDAAUiB;AAlBC,CAA3Bf;AAoBAA,8BAA8B;WAAA;SAAA;QAAA;MAAA;WAAA;oBAAA;qBAAA;sBAAA;YASnB,oBAAM,CATa;UAUrB,kBAAM,CAVe;oBAWXf,EAXW;aAYlBA,EAZkB;aAalBA,EAbkB;aAAA;aAAA;YAAA;oBAAA;iBAkBd;AAlBc,CAA9Be","file":"x","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export default {\n\tDISPLAY_TYPE_FULL: 'full',\n\tDISPLAY_TYPE_SHORT: 'short',\n\tREGION_LIST_DELIMITER: '|',\n\tSINGLE_REGION_DELIMITER: '~'\n};\n","// reduces the subset of countries depending on whether the user specified a white/blacklist, and lists priority\n// countries first\nexport const filterCountries = (countries, priorityCountries, whitelist, blacklist) => {\n\tlet countriesListedFirst = [];\n\tlet filteredCountries = countries;\n\n\tif (whitelist.length > 0) {\n\t\tfilteredCountries = countries.filter(([, countrySlug]) => whitelist.indexOf(countrySlug) > -1);\n\t} else if (blacklist.length > 0) {\n\t\tfilteredCountries = countries.filter(([, countrySlug]) => blacklist.indexOf(countrySlug) === -1);\n\t}\n\n\tif (priorityCountries.length > 0) {\n\n\t\t// ensure the countries are added in the order in which they are specified by the user\n\t\tpriorityCountries.forEach((slug) => {\n\t\t\tconst result = filteredCountries.find(([, countrySlug]) => countrySlug === slug);\n\t\t\tif (result) {\n\t\t\t\tcountriesListedFirst.push(result);\n\t\t\t}\n\t\t});\n\n\t\tfilteredCountries = filteredCountries.filter(([, countrySlug]) => priorityCountries.indexOf(countrySlug) === -1);\n\t}\n\n\treturn countriesListedFirst.length ? [...countriesListedFirst, ...filteredCountries] : filteredCountries;\n};\n\n// called when requesting new regions. It reduces the subset of regions depending on whether the user specifies\n// a white/blacklist\nexport const filterRegions = (regionsObject, whitelistObject, blacklistObject) => {\n\tconst [country, countryCode, regions] = regionsObject;\n\tconst whitelist = whitelistObject.hasOwnProperty(countryCode) ? whitelistObject[countryCode] : [];\n\tconst blacklist = blacklistObject.hasOwnProperty(countryCode) ? blacklistObject[countryCode] : [];\n\tlet filteredRegions = regions.split('|');\n\n\tif (whitelist.length > 0 && filteredRegions.length > 0) {\n\t\tfilteredRegions = filteredRegions.filter((region) => {\n\t\t\tfor (let i = 0, n = whitelist.length; i < n; i++) {\n\t\t\t\tif (region.indexOf(whitelist[i]) > -1) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t} else if (blacklist.length > 0 && filteredRegions.length > 0) {\n\t\tfilteredRegions = filteredRegions.filter((region) => {\n\t\t\tfor (let i = 0, n = blacklist.length; i < n; i++) {\n\t\t\t\tif (region.indexOf(blacklist[i]) > -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\treturn [\n\t\tcountry,\n\t\tcountryCode,\n\t\tfilteredRegions.join('|')\n\t];\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CountryRegionData from '../node_modules/country-region-data/data.json';\nimport C from './constants';\nimport * as helpers from './helpers';\n\nexport default class CountryDropdown extends Component {\n\n\tconstructor (props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcountries: helpers.filterCountries(CountryRegionData, props.priorityOptions, props.whitelist, props.blacklist)\n\t\t};\n\t}\n\n\tgetCountries () {\n\t\tconst { valueType, labelType } = this.props;\n\n\t\treturn this.state.countries.map(([countryName, countrySlug]) => (\n\t\t\t<option value={(valueType === C.DISPLAY_TYPE_SHORT) ? countrySlug : countryName} key={countrySlug}>\n\t\t\t\t{(labelType === C.DISPLAY_TYPE_SHORT) ? countrySlug : countryName}\n\t\t\t</option>\n\t\t));\n\t}\n\n\tgetDefaultOption () {\n\t\tconst { showDefaultOption, defaultOptionLabel } = this.props;\n\t\tif (!showDefaultOption) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<option value=\"\" key=\"default\">{defaultOptionLabel}</option>\n\t\t);\n\t}\n\n\trender () {\n\t\t// unused properties deliberately added so arbitraryProps gets populated with anything else the user specifies\n\t\tconst { name, id, classes, value, onChange, onBlur, disabled, showDefaultOption, defaultOptionLabel,\n\t\t\tlabelType, valueType, whitelist, blacklist, customOptions, priorityOptions, ...arbitraryProps } = this.props;\n\n\t\tconst attrs = {\n\t\t\t...arbitraryProps,\n\t\t\tname,\n\t\t\tvalue,\n\t\t\tonChange: (e) => onChange(e.target.value, e),\n\t\t\tonBlur: (e) => onBlur(e.target.value, e),\n\t\t\tdisabled\n\t\t};\n\t\tif (id) {\n\t\t\tattrs.id = id;\n\t\t}\n\t\tif (classes) {\n\t\t\tattrs.className = classes;\n\t\t}\n\n\t\treturn (\n\t\t\t<select {...attrs}>\n\t\t\t\t{this.getDefaultOption()}\n\t\t\t\t{this.getCountries()}\n\t\t\t</select>\n\t\t);\n\t}\n}\n\nCountryDropdown.propTypes = {\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tname: PropTypes.string,\n\tid: PropTypes.string,\n\tclasses: PropTypes.string,\n\tshowDefaultOption: PropTypes.bool,\n\tdefaultOptionLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tpriorityOptions: PropTypes.array,\n\tonChange: PropTypes.func,\n\tonBlur: PropTypes.func,\n\tlabelType: PropTypes.oneOf([C.DISPLAY_TYPE_FULL, C.DISPLAY_TYPE_SHORT]),\n\tvalueType: PropTypes.oneOf([C.DISPLAY_TYPE_FULL, C.DISPLAY_TYPE_SHORT]),\n\twhitelist: PropTypes.array,\n\tblacklist: PropTypes.array,\n\tdisabled: PropTypes.bool\n};\nCountryDropdown.defaultProps = {\n\tvalue: '',\n\tname: 'rcrs-country',\n\tid: '',\n\tclasses: '',\n\tshowDefaultOption: true,\n\tdefaultOptionLabel: 'Select Country',\n\tpriorityOptions: [],\n\tonChange: () => {},\n\tonBlur: () => {},\n\tlabelType: C.DISPLAY_TYPE_FULL,\n\tvalueType: C.DISPLAY_TYPE_FULL,\n\twhitelist: [],\n\tblacklist: [],\n\tdisabled: false\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport CountryRegionData from '../node_modules/country-region-data/data.json';\nimport { filterRegions } from './helpers';\nimport C from './constants';\n\nexport default class RegionDropdown extends PureComponent {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tregions: this.getRegions(props.country)\n\t\t};\n\t\tthis.getRegions = this.getRegions.bind(this);\n\t}\n\n\tcomponentDidUpdate (prevProps) {\n\t\tconst { country } = this.props;\n\t\tif (country === prevProps.country) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst defaultRegions = this.getRegions(country);\n\n\t\tthis.setState({\n\t\t\tregions: [\n\t\t\t\t...defaultRegions,\n\t\t\t\t...this.getCustomOptions(defaultRegions)\n\t\t\t]\n\t\t});\n\t}\n\n\tgetCustomOptions (regions) {\n\t\tconst { customOptions } = this.props;\n\n\t\tconst duplicateRegions = this.getDuplicates(regions);\n\n\t\tif (duplicateRegions.length) {\n\t\t\tconsole.error('Error: Duplicate regions present: ' + duplicateRegions.toString() + '.\\nThe above item(s) is/are already getting added to the region dropdown by the library.');\n\t\t\treturn [];\n\t\t}\n\n\t\treturn customOptions.map((option) => {\n\t\t\tif (option) {\n\t\t\t\treturn { regionName: option, regionShortCode: option };\n\t\t\t}\n\t\t});\n\t}\n\n\tgetDuplicates (regions) {\n\t\tconst { customOptions, valueType } = this.props;\n\t\tconst regionKey = valueType === C.DISPLAY_TYPE_FULL ? 'regionName' : 'regionShortCode';\n\n\t\treturn regions.filter((region) => customOptions.indexOf(region[regionKey]) !== -1).map(region => region[regionKey]);\n\t}\n\n\tgetRegions (country) {\n\t\tif (!country) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst { countryValueType, whitelist, blacklist } = this.props;\n\t\tconst searchIndex = (countryValueType === C.DISPLAY_TYPE_FULL) ? 0 : 1;\n\t\tlet regions = [];\n\t\tCountryRegionData.forEach((i) => {\n\t\t\tif (i[searchIndex] === country) {\n\t\t\t\tregions = i;\n\t\t\t}\n\t\t});\n\n\t\t// this could happen if the user is managing the state of the region/country themselves and screws up passing\n\t\t// in a valid country\n\t\tif (!regions || regions.length === 0) {\n\t\t\tconsole.error('Error. Unknown country passed: ' + country + '. If you\\'re passing a country shortcode, be sure to include countryValueType=\"short\" on the RegionDropdown');\n\t\t\treturn [];\n\t\t}\n\n\t\tconst filteredRegions = filterRegions(regions, whitelist, blacklist);\n\n\t\treturn filteredRegions[2].split(C.REGION_LIST_DELIMITER).map((regionPair) => {\n\t\t\tlet [regionName, regionShortCode = null] = regionPair.split(C.SINGLE_REGION_DELIMITER);\n\t\t\treturn { regionName, regionShortCode };\n\t\t});\n\t}\n\n\tgetRegionList () {\n\t\tconst { labelType, valueType } = this.props;\n\t\treturn this.state.regions.map(({ regionName, regionShortCode }) => {\n\t\t\tconst label = (labelType === C.DISPLAY_TYPE_FULL) ? regionName : regionShortCode;\n\t\t\tconst value = (valueType === C.DISPLAY_TYPE_FULL) ? regionName : regionShortCode;\n\t\t\treturn <option value={value} key={regionName}>{label}</option>;\n\t\t});\n\t}\n\n\t// there are two default options. The \"blank\" option which shows up when the user hasn't selected a country yet, and\n\t// a \"default\" option which shows\n\tgetDefaultOption () {\n\t\tconst { blankOptionLabel, showDefaultOption, defaultOptionLabel, country } = this.props;\n\t\tif (!country) {\n\t\t\treturn <option value=\"\">{blankOptionLabel}</option>;\n\t\t}\n\t\tif (showDefaultOption) {\n\t\t\treturn <option value=\"\">{defaultOptionLabel}</option>;\n\t\t}\n\t\treturn null;\n\t}\n\n\trender () {\n\t\tconst {\n\t\t\tvalue, country, onChange, onBlur, id, name, classes, disabled, blankOptionLabel, showDefaultOption,\n\t\t\tdefaultOptionLabel, labelType, valueType, countryValueType, disableWhenEmpty, customOptions,\n\t\t\t...arbitraryProps\n\t\t} = this.props;\n\n\t\tconst isDisabled = disabled || (disableWhenEmpty && country === '');\n\t\tconst attrs = {\n\t\t\t...arbitraryProps,\n\t\t\tname,\n\t\t\tvalue,\n\t\t\tonChange: (e) => onChange(e.target.value, e),\n\t\t\tonBlur: (e) => onBlur(e.target.value, e),\n\t\t\tdisabled: isDisabled\n\t\t};\n\t\tif (id) {\n\t\t\tattrs.id = id;\n\t\t}\n\t\tif (classes) {\n\t\t\tattrs.className = classes;\n\t\t}\n\n\t\treturn (\n\t\t\t<select {...attrs}>\n\t\t\t\t{this.getDefaultOption()}\n\t\t\t\t{this.getRegionList()}\n\t\t\t</select>\n\t\t);\n\t}\n}\n\nRegionDropdown.propTypes = {\n\tcountry: PropTypes.string,\n\tcountryValueType: PropTypes.oneOf([C.DISPLAY_TYPE_FULL, C.DISPLAY_TYPE_SHORT]),\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tname: PropTypes.string,\n\tid: PropTypes.string,\n\tclasses: PropTypes.string,\n\tblankOptionLabel: PropTypes.string,\n\tshowDefaultOption: PropTypes.bool,\n\tdefaultOptionLabel: PropTypes.string,\n\tonChange: PropTypes.func,\n\tonBlur: PropTypes.func,\n\tlabelType: PropTypes.string,\n\tvalueType: PropTypes.string,\n\twhitelist: PropTypes.object,\n\tblacklist: PropTypes.object,\n\tdisabled: PropTypes.bool,\n\tdisableWhenEmpty: PropTypes.bool,\n\tcustomOptions: PropTypes.array\n};\nRegionDropdown.defaultProps = {\n\tcountry: '',\n\tvalue: '',\n\tname: 'rcrs-region',\n\tid: '',\n\tclasses: '',\n\tblankOptionLabel: '-',\n\tshowDefaultOption: true,\n\tdefaultOptionLabel: 'Select Region',\n\tonChange: () => {},\n\tonBlur: () => {},\n\tcountryValueType: C.DISPLAY_TYPE_FULL,\n\tlabelType: C.DISPLAY_TYPE_FULL,\n\tvalueType: C.DISPLAY_TYPE_FULL,\n\twhitelist: {},\n\tblacklist: {},\n\tdisabled: false,\n\tdisableWhenEmpty: false,\n\tcustomOptions: []\n};\n"]}}