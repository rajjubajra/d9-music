{"version":3,"sources":["redux/actionTypes.js","config/config.js","page/Homepage.js","redux/actions.js","App.js","reportWebVitals.js","redux/reducers.js","redux/store.js","index.js"],"names":["actionTypes","MAINMENU_START_FETCHING","MAINMENU_FETCHED","MAINMENU_FETCH_ERROR","HOME_START_FETCHING","HOME_FETCHED","HOME_FETCH_ERROR","baseurl","Homepage","dispatch","useDispatch","useEffect","headers","NavRemote","NAV","window","location","origin","HOME","type","axios","get","then","res","console","log","data","catch","err","fetched","error","action","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","initalStateNav","nav_fetching","nav_fetched","nav_fetch_error","nav_data","nav_dataLength","initalStateHome","home_fetching","home_fetched","home_fetch_error","home_data","home_dataLength","reducer","combineReducers","reducerNav","state","fetching","length","reducerHomePage","middleware","applyMiddleware","thunk","createLogger","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e171668a.chunk.js","sourcesContent":["export const actionTypes = {\n\n  MAINMENU_START_FETCHING: 'MAINMENU_START_FETCHING',\n  MAINMENU_FETCHED: 'MAINMENU_FETCHED',\n  MAINMENU_FETCH_ERROR: 'MAINMENU_FETCH_ERROR',\n\n  HOME_START_FETCHING: 'HOME_START_FETCHING',\n  HOME_FETCHED: 'HOME_FETCHED',\n  HOME_FETCH_ERROR: 'HOME_FETCH_ERROR',\n\n\n}","export const baseurl = {\n  URL: \"https://yellow-website.com/d9-music/d9-music\"\n}","import React, {useEffect} from 'react';\nimport {action} from '../redux/actions';\nimport {useDispatch} from 'react-redux';\n\nfunction Homepage() {\n\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n      dispatch(action());\n  },[dispatch])\n\n  return (\n    <div>\n      <h1>Test Page</h1>      \n    </div>\n  )\n}\n\nexport default Homepage\n","import {actionTypes} from './actionTypes';\nimport axios from \"axios\";\nimport { baseurl } from '../config/config';\n\n\nexport const action = () => {\n \n  const headers = {\n    headers: {\n    'Accept': 'application/vnd.api+json'\n    }\n  }\n\n  /**\n   * REMOTE SITE\n   * Install Module used\n   * https://www.drupal.org/project/rest_menu_items\n   * \n   * Enable : Rest UI : Menu Item to GET \n   * Set Permission : Access GET on Menu items per menu resource\n   * \n   * \n   */\n  \n  /**\n   * if npm run on localhost:3000\n   * fetch data from local json file.\n   */\n  // /** MAIN NAVIGATION */\n  const NavLocal = './data/mainnav.json';\n  const NavRemote = `${baseurl.URL}/jsonapi/menu_items/main`;\n  const NAV = window.location.origin === 'http://localhost:3000' \n                    ? NavLocal\n                    : NavRemote;\n\n  /** HOME PAGE */\n  const homeUrl = `${baseurl.URL}/jsonapi/media/image?include=field_media_image`;\n  const HOME = homeUrl;\n  \n\n  \n  return function (dispatch) {\n\n      /** MAIN MENU  */\n      dispatch({\n        type: actionTypes.MAINMENU_START_FETCHING\n      })\n      const reqNAV= axios.get(NAV, headers)\n      reqNAV.then((res) => {\n          console.log(\"MAIN MENU\",res.data)\n          dispatch({\n            type: actionTypes.MAINMENU_FETCHED,\n            data: res.data\n          })\n        })\n        .catch(err => {\n          dispatch({\n            type: actionTypes.MAINMENU_FETCH_ERROR,\n            fetched: false,\n            error: err\n          })\n        })\n\n\n\n    /** HOME */\n    dispatch({\n      type: actionTypes.HOME_START_FETCHING\n    })\n    const reqHome= axios.get(HOME, headers)\n    reqHome.then((res) => {\n        console.log(\"action\",res.data)\n        dispatch({\n          type: actionTypes.HOME_FETCHED,\n          data: res.data\n        })\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.HOME_FETCH_ERROR,\n          fetched: false,\n          error: err\n        })\n      })\n\n  //   /** BLOG */\n  //   dispatch({\n  //     type: actionTypes.BLOG_START_FETCHING\n  //   })\n  //   const reqBlog = axios.get(Blog, headers)\n  //   reqBlog.then((res) => {\n  //       console.log(\"action\",res.data)\n  //       dispatch({\n  //         type: actionTypes.BLOG_FETCHED,\n  //         data: res.data\n  //       })\n  //     })\n  //     .catch(err => {\n  //       dispatch({\n  //         type: actionTypes.BLOG_FETCH_ERROR,\n  //         fetched: false,\n  //         error: err\n  //       })\n  //     })\n\n      \n  // /** TAXONOMY */\n  //   dispatch({\n  //     type: actionTypes.TAXONOMY_START_FETCHING\n  //   })\n  //   const reqTaxonomy = axios.get(Taxonomy, headers)\n  //   reqTaxonomy.then((res) => {\n  //       console.log(\"action\",res.data)\n  //       dispatch({\n  //         type: actionTypes.TAXONOMY_FETCHED,\n  //         data: res.data\n  //       })\n  //     })\n  //     .catch(err => {\n  //       dispatch({\n  //         type: actionTypes.TAXONOMY_FETCH_ERROR,\n  //         fetched: false,\n  //         error: err\n  //       })\n  //     })\n\n\n\n\n  }\n}//ActionAll closed\n\n\n\nexport const actionSetYearMonth = (YearMonth) => (\n  {\n    type: actionTypes.SELECTED_YEAR_MONTH,\n    YearMonth: YearMonth\n  }\n)\n\n","import './App.css';\nimport Homepage from './page/Homepage';\n\n\nfunction App() {\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n            <Homepage />\n      \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const { actionTypes } = require('./actionTypes');\n\n\n\n\n/** MAIN NAV */\nconst initalStateNav = {  \n  nav_fetching: false,\n  nav_fetched: false,\n  nav_fetch_error: '',\n  nav_data: [],\n  nav_dataLength: 0,\n}\n\nexport const reducerNav = (state = initalStateNav, action) => {\n\n  switch (action.type) {\n\n    case actionTypes.MAINMENU_START_FETCHING:\n      return {\n        fetching: true,\n        nav_data: []\n      }\n    case actionTypes.MAINMENU_FETCHED:\n      return {\n        nav_data: action.data,\n        nav_fetched: true,\n        nav_dataLength: action.data.length\n      }\n    case actionTypes.MAINMENU_FETCH_ERROR:\n      return {\n        nav_fetched: false,\n        nav_fetching: false,\n        nav_fetch_error: action.error\n      }\n    \n    /** default state */\n    default:\n      return state;\n  }\n\n}// MAIN NAV CLOSED\n\n\n/** HOMEPAGE */\nconst initalStateHome = {  \n  home_fetching: false,\n  home_fetched: false,\n  home_fetch_error: '',\n  home_data: [],\n  home_dataLength: 0,\n}\n\nexport const reducerHomePage = (state = initalStateHome, action) => {\n\n  switch (action.type) {\n\n    case actionTypes.HOME_START_FETCHING:\n      return {\n        fetching: true,\n        home_data: []\n      }\n    case actionTypes.HOME_FETCHED:\n      return {\n        home_data: action.data,\n        home_fetched: true,\n        home_dataLength: action.data.length\n      }\n    case actionTypes.HOME_FETCH_ERROR:\n      return {\n        home_fetched: false,\n        home_fetching: false,\n        home_fetch_error: action.error\n      }\n    \n    /** default state */\n    default:\n      return state;\n  }\n\n}// Home CLOSED\n\n\n\n// /** BLOG */\n// const initialStateBlog = {\n//  blog_fetching: false,\n//  blog_fetched: false,\n//  blog_fetch_error: '',\n//  blog_data: [],\n//  blog_dataLength: 0\n// }\n\n// export const reducerBlog = (state = initialStateBlog, action) => {\n  \n//   switch(action.type){\n\n//     case actionTypes.BLOG_START_FETCHING:\n//       return {\n//         blog_fetching: true,\n//         blog_data: []\n//       }\n//     case actionTypes.BLOG_FETCHED:\n//       return {\n//         blog_data: action.data,\n//         blog_fetched: true,\n//         blog_dataLength: action.data.length\n//       }\n//     case actionTypes.BLOG_FETCH_ERROR:\n//       return {\n//         blog_fetched: false,\n//         blog_fetching: false,\n//         blog_fetch_error: action.error\n//       }\n//       /** default state */\n//       default:\n//         return state;\n//   }\n// }\n\n\n// /** TAXONOMY */\n// const initialStateTaxonomy = {\n//   taxonomy_fetching: false,\n//   taxonomy_fetched: false,\n//   taxonomy_fetch_error: '',\n//   taxonomy_data: [],\n//   taxonomy_dataLength: 0\n// }\n\n// export const reducerTaxonomy = (state = initialStateTaxonomy, action) => {\n  \n//   switch(action.type){\n\n//     case actionTypes.TAXONOMY_START_FETCHING:\n//       return {\n//         taxonomy_fetching: true,\n//         taxonomy_data: []\n//       }\n//     case actionTypes.TAXONOMY_FETCHED:\n//       return {\n//         taxonomy_data: action.data,\n//         taxonomy_fetched: true,\n//         taxonomy_dataLength: action.data.length\n//       }\n//     case actionTypes.TAXONOMY_FETCH_ERROR:\n//       return {\n//         taxonomy_fetched: false,\n//         taxonomy_fetching: false,\n//         taxonomy_fetch_error: action.error\n//       }\n//        /** default state */\n//       default:\n//         return state;\n//   }\n// }\n\n// /** SET BLOG SELECTION FOR THE MONTH OF THE YEAR */\n// const initialStateYearMonth = {\n//   blog_YearMonth: null\n// }\n// export const reducerBlogYearMonth = (state = initialStateYearMonth, action)=>{\n//   switch(action.type){\n//     case actionTypes.SELECTED_YEAR_MONTH:\n//       return {\n//         blog_YearMonth: action.YearMonth\n//       }\n//     default:\n//       return state;\n//   }\n\n// }\n\n\n\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport {\n  reducerNav,\n  reducerHomePage,\n  \n  \n} from './reducers';\n\nconst reducer = combineReducers(\n  {\n    // reducerFetchData,\n    reducerNav,\n    reducerHomePage,\n  }\n);\n\nconst middleware = applyMiddleware(thunk, createLogger());\n\nexport const store = createStore(reducer, middleware);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store}from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}