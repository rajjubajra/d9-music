{"version":3,"sources":["page/TourList02.js","page/Tour.js"],"names":["TourList02","date","title","venue","view","index","className","onClick","Tour","dispatch","useDispatch","tourdata","useSelector","state","reducerTour","tour_data","data","fetched","tour_feched","console","log","useState","setEvent","useEffect","actionTour","dateFormat","dt","Date","getDate","getMonth","getFullYear","map","item","attributes","field_event_date","field_event_location","processed","id"],"mappings":"6KA2BeA,MAvBf,YAAwD,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MAG7C,OACI,sBAAKC,UAAU,sEAAf,UAEI,qBAAKA,UAAU,cAAf,SAA8BL,IAC1B,sBAAKK,UAAU,cAAf,UACI,oBAAIA,UAAU,WAAd,SAA0BJ,IAC1B,8BAAMC,OAEV,qBAAKG,UAAU,oCAAf,SACI,sBAAKA,UAAU,kCACbC,QAAS,kBAAMH,EAAKC,IADtB,UAEA,8CACA,qBAAKC,UAAU,YAAf,SAA2B,cAAC,IAAD,WAGnC,qBAAKA,UAAU,wCAAf,wBCmEKE,UAlFf,WAEE,IAAMC,EAAWC,cACXC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,UAAUC,QAC5DC,EAAUL,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYI,eAEvDC,QAAQC,IAAIT,EAAU,UAAWM,GAEjC,MAA0BI,mBAAS,GAAnC,mBAAcC,GAAd,WACA,EAAkCD,mBAAS,IAA3C,mBACA,GADA,UAC0BA,mBAAS,KAAnC,mBACA,GADA,UAC0BA,mBAAS,KAAnC,mBACA,GADA,UACwBA,mBAAS,KAAjC,6BAGAE,qBAAU,WACRd,EAASe,iBACT,CAACf,IAcH,IAAML,EAAO,SAACC,GAAD,OAAaiB,EAASjB,IAE7BoB,EAAa,SAACxB,GAElB,IAEMyB,EAAK,IAAIC,KAAK1B,GACpB,MAAM,GAAN,OAAUyB,EAAGE,UAAb,cAHiB,CAAC,GAAG,MAAM,MAAM,MAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAG1DF,EAAGG,YAAxC,aAAwDH,EAAGI,cAI7D,OACE,qBAAKxB,UAAU,kGAAf,SAIE,gCACE,oBAAIA,UAAU,WAAd,kBAEEW,GACAN,EAASoB,KAAI,SAACC,EAAM3B,GAClB,MAC2C2B,EADpCC,WAA6BhC,EAApC,EAAmBiC,iBAAuBhC,EAA1C,EAA0CA,MACVC,EADhC,EACAgC,qBAAsBC,UACtB,OAAO,cAAC,EAAD,CACHC,GAAIL,EAAKK,GACTpC,KAAMwB,EAAWxB,GACjBC,MAAOA,EACPC,MAAOA,EACPE,MAAOA,EACPD,KAAMA","file":"static/js/13.6b31e5e0.chunk.js","sourcesContent":["import {GrFormNextLink} from 'react-icons/gr';\n\n\n\nfunction TourList02({date, title, venue, view, index}) {\n\n\n  return (\n      <div className=\"grid grid-cols-12 grid-flow-row gap-2 py-5\n              border-t border-gray-300\">\n          <div className=\"col-span-12\">{date}</div>\n              <div className=\"col-span-12\">\n                  <h2 className=\"text-2xl\">{title}</h2>\n                  <div>{venue}</div>\n              </div>\n              <div className=\"col-span-6 border border-gray-200\">\n                  <div className=\"cursor-pointer p-2 text-sm flex\"\n                    onClick={() => view(index)} >\n                  <div>View Detail</div>\n                  <div className=\"pt-1 px-2\"><GrFormNextLink /></div>\n              </div>\n          </div>\n          <div className=\"col-span-6 border border-gray-200 p-2\">Ticket</div>\n      </div>\n    )\n}\n\nexport default TourList02","import {useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {actionTour} from '../redux/actions';\nimport TourList02 from './TourList02';\nimport TourDetail02 from './TourDetail02';\n\n\nfunction Tour() {\n\n  const dispatch = useDispatch();\n  const tourdata = useSelector(state => state.reducerTour.tour_data.data);\n  const fetched = useSelector(state => state.reducerTour.tour_feched);\n\n  console.log(tourdata, \"fetched\", fetched);\n\n  const [event, setEvent] = useState(0)\n  const [eventDate, setEventDate] = useState('');\n  const [title, setTitle] = useState('');\n  const [venue, setVenue] = useState('');\n  const [body, setBody] = useState('');\n\n\n  useEffect(()=>{\n    dispatch(actionTour());\n  },[dispatch])\n\n  // useEffect(()=>{\n  //   const {attributes:{field_event_date:date, title, \n  //     field_event_location:{processed:venue}, \n  //     field_event_details:{processed:body}}\n  //   } = tourdata;\n\n  //   setEventDate(date);\n  //   setTitle(title);\n  //   setVenue(venue);\n  //   setBody(body);\n  // },[tourdata, event])\n\n  const view = (index) => ( setEvent(index) );\n\n  const dateFormat = (date) => {\n\n    const monthArr = [\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    const dt = new Date(date);\n    return `${dt.getDate()},  ${monthArr[dt.getMonth()]}, ${dt.getFullYear}`;\n\n  }\n\n  return (\n    <div className=\"w-full max-w-screen-xl m-auto p-10 relative\n    grid grid-cols-1 md:grid-cols-2 grid-flow-row gap-2\">\n\n     {/** TOUR LIST */}\n      <div>\n        <h2 className=\"text-3xl\">Tour</h2>\n        {\n          fetched &&\n          tourdata.map((item, index) => {\n            const {attributes:{field_event_date:date, title, \n            field_event_location:{processed:venue}}} = item;\n            return <TourList02\n                id={item.id}\n                date={dateFormat(date)}\n                title={title}\n                venue={venue}\n                index={index}\n                view={view}\n              />\n          })\n        }\n      </div>\n\n      {/* * TOUR DETAILS */}\n      {/* <div>\n        {fetched &&\n          <TourDetail02 \n            event_title={title}\n            date={dateFormat(eventDate)}\n            venue={venue}\n            body={body}\n          />\n        }\n      </div>  */}\n\n    </div>\n  )\n}\n\nexport default Tour"],"sourceRoot":""}