{"version":3,"sources":["page/TourList02.js","page/Tour.js"],"names":["TourList02","date","title","venue","view","index","className","dangerouslySetInnerHTML","__html","onClick","Tour","dispatch","useDispatch","tourdata","useSelector","state","reducerTour","tour_data","data","fetched","tour_fetched","console","log","useEffect","actionTour","useState","event","setEvent","eventDate","body","attributes","field_event_date","dateFormat","dt","Date","getDate","getMonth","getFullYear","map","item","field_event_location","processed","id"],"mappings":"6KA6BeA,MAzBf,YAAwD,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MAG7C,OACI,sBAAKC,UAAU,sEAAf,UAEI,qBAAKA,UAAU,cAAf,SAA8BL,IAC1B,sBAAKK,UAAU,cAAf,UACI,oBAAIA,UAAU,WAAd,SAA0BJ,IAC1B,8BACE,qBAAKK,wBAAyB,CAACC,OAAQL,UAG7C,qBAAKG,UAAU,oCAAf,SACI,sBAAKA,UAAU,kCACbG,QAAS,kBAAML,EAAKC,IADtB,UAEA,8CACA,qBAAKC,UAAU,YAAf,SAA2B,cAAC,IAAD,WAGnC,qBAAKA,UAAU,wCAAf,wBCsDKI,UAvEf,WAEE,IAAMC,EAAWC,cACXC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,UAAUC,QAC5DC,EAAUL,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYI,gBAEvDC,QAAQC,IAAIT,GAEZU,qBAAU,WACRZ,EAASa,iBACT,CAACb,IAIHU,QAAQC,IAAIT,EAAU,UAAWM,GAEjC,MAA0BM,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KACA,GADA,KAC0BH,mBAAS,KAAnC,mBAAOvB,EAAP,KACA,GADA,KAC0BuB,mBAAS,KAAnC,mBAAOtB,EAAP,KACA,GADA,KACwBsB,mBAAS,KAAjC,mBAAOI,EAAP,UAGAN,qBAAU,WAER,MAA+CV,EAAxCiB,WAAP,EAAmB5B,MAAnB,EAA0B6B,mBAE1B,CAAClB,IAKH,IAAMT,EAAO,SAACC,GAAD,OAAasB,EAAStB,IAE7B2B,EAAa,SAAC/B,GAElB,IAEMgC,EAAK,IAAIC,KAAKjC,GACpB,OAAOgC,EAAGE,UAAU,IAHH,CAAC,GAAG,MAAM,MAAM,MAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAG7DF,EAAGG,YAAa,IAAKH,EAAGI,eAM5D,OAHAhB,QAAQC,IAAIM,EAAW1B,EAAOC,EAAOuB,EAAOG,GAI1C,qBAAKvB,UAAU,kHAAf,SAGE,gCACE,oBAAIA,UAAU,WAAd,kBAEEa,GACAN,EAASyB,KAAI,SAACC,EAAMlC,GAClB,MAC2CkC,EADpCT,WAA6B7B,EAApC,EAAmB8B,iBAAuB7B,EAA1C,EAA0CA,MACVC,EADhC,EACAqC,qBAAsBC,UACtB,OAAO,cAAC,EAAD,CACHC,GAAIH,EAAKG,GACTzC,KAAM+B,EAAW/B,GACjBC,MAAOA,EACPC,MAAOA,EACPE,MAAOA,EACPD,KAAMA","file":"static/js/13.5aaa1fc4.chunk.js","sourcesContent":["import {GrFormNextLink} from 'react-icons/gr';\n\n\n\nfunction TourList02({date, title, venue, view, index}) {\n\n\n  return (\n      <div className=\"grid grid-cols-12 grid-flow-row gap-2 py-5\n              border-t border-gray-300\">\n          <div className=\"col-span-12\">{date}</div>\n              <div className=\"col-span-12\">\n                  <h2 className=\"text-2xl\">{title}</h2>\n                  <div>\n                    <div dangerouslySetInnerHTML={{__html: venue}} />\n                  </div>\n              </div>\n              <div className=\"col-span-6 border border-gray-200\">\n                  <div className=\"cursor-pointer p-2 text-sm flex\"\n                    onClick={() => view(index)} >\n                  <div>View Detail</div>\n                  <div className=\"pt-1 px-2\"><GrFormNextLink /></div>\n              </div>\n          </div>\n          <div className=\"col-span-6 border border-gray-200 p-2\">Ticket</div>\n      </div>\n    )\n}\n\nexport default TourList02","import React,{useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {actionTour} from '../redux/actions';\nimport TourList02 from './TourList02';\n\n\n\nfunction Tour() {\n\n  const dispatch = useDispatch();\n  const tourdata = useSelector(state => state.reducerTour.tour_data.data);\n  const fetched = useSelector(state => state.reducerTour.tour_fetched);\n\n  console.log(tourdata);\n\n  useEffect(()=>{\n    dispatch(actionTour());\n  },[dispatch])\n\n\n\n  console.log(tourdata, \"fetched\", fetched);\n\n  const [event, setEvent] = useState(0)\n  const [eventDate, setEventDate] = useState('');\n  const [title, setTitle] = useState('');\n  const [venue, setVenue] = useState('');\n  const [body, setBody] = useState('');\n\n\n  useEffect(()=>{\n\n    const {attributes:{title, field_event_date}} = tourdata\n\n  },[tourdata])\n\n\n\n\n  const view = (index) => ( setEvent(index) );\n\n  const dateFormat = (date) => {\n\n    const monthArr = [\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    const dt = new Date(date);\n    return dt.getDate()+\" \"+ monthArr[dt.getMonth()]+ \",\"+ dt.getFullYear()\n  }\n\n  console.log(eventDate, title, venue, event, body);\n\n\n  return (\n    <div className=\"w-full max-w-screen-xl m-auto p-10 relative\n    grid grid-cols-1 md:grid-cols-2 grid-flow-row gap-2 font-extralight\">\n    {/** TOUR LIST */}\n      <div>\n        <h2 className=\"text-3xl\">Tour</h2>\n        {\n          fetched &&\n          tourdata.map((item, index) => {\n            const {attributes:{field_event_date:date, title, \n            field_event_location:{processed:venue}}} = item;\n            return <TourList02\n                id={item.id}\n                date={dateFormat(date)}\n                title={title}\n                venue={venue}\n                index={index}\n                view={view}\n              />\n          }) \n        }\n      </div>\n  </div>\n  )\n}\n\nexport default Tour\n"],"sourceRoot":""}